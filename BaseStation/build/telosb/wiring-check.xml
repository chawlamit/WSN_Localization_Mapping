<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="84:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b76ba02c660"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b76b9e5d020"/></to>
    </wire>
    <wire loc="72:../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b76b9e5d020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b76ba003590"/></to>
    </wire>
    <wire loc="86:BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b76ba02bbe0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b76ba3837b0"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b76ba3837b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b76ba3b82f0"/></to>
    </wire>
    <wire loc="87:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b76ba02b020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b76bb1cd5c0"/></to>
    </wire>
    <wire loc="61:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b76bb1cd5c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b76bb23f4e0"/></to>
    </wire>
    <wire loc="89:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x2b76ba04c020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b76bb1ca600"/></to>
    </wire>
    <wire loc="63:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b76bb1ca600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b76bb22fb40"/></to>
    </wire>
    <wire loc="90:BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x2b76ba092e30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b76bb1c9800"/></to>
    </wire>
    <wire loc="64:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b76bb1c9800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b76bb2489e0"/></to>
    </wire>
    <wire loc="91:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x2b76ba089870"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b76bb1c9e10"/></to>
    </wire>
    <wire loc="65:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b76bb1c9e10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b76bb246720"/></to>
    </wire>
    <wire loc="92:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x2b76ba0a09b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b76bb1c8ab0"/></to>
    </wire>
    <wire loc="66:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b76bb1c8ab0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b76bb247020"/></to>
    </wire>
    <wire loc="94:BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b76ba08a6e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b76ba3817f0"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b76ba3817f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b76ba3b7320"/></to>
    </wire>
    <wire loc="95:BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b76ba09fa50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b76ba380b20"/></to>
    </wire>
    <wire loc="81:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b76ba380b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b76ba3b5510"/></to>
    </wire>
    <wire loc="96:BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x2b76ba09d6b0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b76ba37f880"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b76ba37f880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b76ba3b41d0"/></to>
    </wire>
    <wire loc="97:BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b76ba09dd70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b76ba37e020"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b76ba37e020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b76ba3b2020"/></to>
    </wire>
    <wire loc="98:BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x2b76ba09cb40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b76ba37ec90"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b76ba37ec90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b76ba3b4800"/></to>
    </wire>
    <wire loc="100:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b76ba0b60d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b76ba104020"/></to>
    </wire>
    <wire loc="51:../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b76ba104020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b76ba128a10"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b76b9e5a4d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76bbed0ca0"/></to>
    </wire>
    <wire loc="59:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b76b9e5a4d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76bb242e50"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b76b9e5a4d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76bb0fbdd0"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b76b9e5a4d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76bb0b5b50"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b76b9e5a4d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76bb06d750"/></to>
    </wire>
    <wire loc="52:../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b76b9e5a4d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76bb08a080"/></to>
    </wire>
    <wire loc="53:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b76b9e5a4d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76baf0e110"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b76b9e5a4d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76bae34620"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b76b9e5a4d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76bad00c60"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b76b9e5a4d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76ba52b7d0"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b76b9e5a4d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76bbbec140"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b76b9e5a4d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76ba86f020"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b76b9e5a4d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76ba48c510"/></to>
    </wire>
    <wire loc="67:../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b76ba003c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b76b99c43a0"/></to>
    </wire>
    <wire loc="53:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b76b99c43a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b76b9e19420"/></to>
    </wire>
    <wire loc="68:../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b76ba01e6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76b9e5c480"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b76b9e5c480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76b9e58690"/></to>
    </wire>
    <wire loc="71:../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b76ba01edc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b76b9e5a4d0"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2b76b9e58da0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x2b76b9e56be0"/></to>
    </wire>
    <wire loc="46:../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2b76b9e56be0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76b9e73b50"/></to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b76b9e554e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76b9e57a10"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2b76b9e55bc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76ba12a2e0"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b76b9e73b50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76b9e942a0"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b76b9e872c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b76b9e94950"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b76b9d3d510"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b76b9e93b30"/></to>
    </wire>
    <wire loc="113:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x2b76b9ecfa50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b76b9f9c6d0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x2b76b9edd410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b76b9f95b30"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x2b76b9ee6bb0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b76b9fa2160"/></to>
    </wire>
    <wire loc="149:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x2b76b9f09020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b76b9fc3cb0"/></to>
    </wire>
    <wire loc="107:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2b76b9eeb020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b76b9fa3480"/></to>
    </wire>
    <wire loc="148:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x2b76b9ef0570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b76b9fc3020"/></to>
    </wire>
    <wire loc="170:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x2b76b9f06020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b76b9fd0cb0"/></to>
    </wire>
    <wire loc="154:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x2b76b9ef7a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b76b9fbd220"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2b76b9ed6020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b76b9f479d0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x2b76b9f0b020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b76b9fae2f0"/></to>
    </wire>
    <wire loc="134:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x2b76b9ef2890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b76b9faf610"/></to>
    </wire>
    <wire loc="133:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x2b76b9efc8c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b76b9fb0220"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x2b76b9ee5bb0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b76b9f9a7a0"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x2b76b9f08020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b76b9fbb2f0"/></to>
    </wire>
    <wire loc="140:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x2b76b9efa020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b76b9fa96d0"/></to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x2b76b9eebda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b76b9f9bac0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2b76b9ed77b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b76b9f33540"/></to>
    </wire>
    <wire loc="155:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x2b76b9eef3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b76b9fbc610"/></to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2b76b9ed55a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b76b9fa4020"/></to>
    </wire>
    <wire loc="161:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x2b76b9ef5020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b76b9fd96d0"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x2b76b9ee0b60"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b76b9f87a90"/></to>
    </wire>
    <wire loc="142:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x2b76b9f0a020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b76b9fa77a0"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2b76b9eec140"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b76b9f88de0"/></to>
    </wire>
    <wire loc="141:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x2b76b9ef1700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b76b9fa8ac0"/></to>
    </wire>
    <wire loc="163:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x2b76b9f07020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b76b9fd77a0"/></to>
    </wire>
    <wire loc="147:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x2b76b9ef95a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b76b9fc5b30"/></to>
    </wire>
    <wire loc="120:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2b76b9edfb70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b76b9f4d3e0"/></to>
    </wire>
    <wire loc="162:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x2b76b9eee1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b76b9fd8ac0"/></to>
    </wire>
    <wire loc="128:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x2b76b9f0c020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b76b9fb7cb0"/></to>
    </wire>
    <wire loc="169:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x2b76b9eed020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b76b9fd0020"/></to>
    </wire>
    <wire loc="127:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x2b76b9ef3a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b76b9fb7020"/></to>
    </wire>
    <wire loc="168:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x2b76b9ef45a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b76b9fd2b30"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2b76b9f31450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b76b9f32d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2b76b9f31aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x2b76b9fcba90"/></to>
    </wire>
    <wire loc="96:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2b76b9f30120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x2b76b9feb260"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b76b9f86930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b76b9f33540"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b76b9f84020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b76b9f32d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b76b9fa1020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b76b9f33540"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b76b9f9f7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b76b9f32d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b76b9f99610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b76b9f33540"/></to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b76b9f98c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b76b9f32d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2b76b9f4b2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b76b9f4cbf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2b76b9f4b940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x2b76b9feb9f0"/></to>
    </wire>
    <wire loc="123:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2b76b9f4a020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x2b76b9fea240"/></to>
    </wire>
    <wire loc="129:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b76b9fb6b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b76b9f4d3e0"/></to>
    </wire>
    <wire loc="130:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b76b9fb42f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b76b9f4cbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b76b9fad160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b76b9f4d3e0"/></to>
    </wire>
    <wire loc="137:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b76b9fac7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b76b9f4cbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b76b9fa6610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b76b9f4d3e0"/></to>
    </wire>
    <wire loc="144:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b76b9fc9c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b76b9f4cbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b76b9fc2b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b76b9f4d3e0"/></to>
    </wire>
    <wire loc="151:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b76b9fc02f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b76b9f4cbf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b76b9fba160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b76b9f4d3e0"/></to>
    </wire>
    <wire loc="158:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b76b9fb97a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b76b9f4cbf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b76b9fd6610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b76b9f4d3e0"/></to>
    </wire>
    <wire loc="165:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b76b9fd5c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b76b9f4cbf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b76b9fcfb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b76b9f4d3e0"/></to>
    </wire>
    <wire loc="172:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b76b9fcd2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b76b9f4cbf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b9e18320"/></to>
    </wire>
    <wire loc="55:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b76b9e14990"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b76b9a34760"/></to>
    </wire>
    <wire loc="98:BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x2b76ba0b1410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x2b76ba0d7360"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b76ba12a2e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76ba128410"/></to>
    </wire>
    <wire loc="54:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b76ba125060"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b76ba100ae0"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b76ba100ae0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba34b020"/></to>
    </wire>
    <wire loc="55:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b76ba124340"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b76ba12dce0"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b76ba12dce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba369b90"/></to>
    </wire>
    <wire loc="56:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b76ba11f660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b76ba12b020"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b76ba12b020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba363710"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba36c2f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x2b76ba1a59a0"/></to>
    </wire>
    <wire loc="486:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x2b76ba1a59a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2ced10"/></to>
    </wire>
    <wire loc="62:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba368de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x2b76ba1a39a0"/></to>
    </wire>
    <wire loc="487:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x2b76ba1a39a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2c9740"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba362930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x2b76ba1a19a0"/></to>
    </wire>
    <wire loc="488:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x2b76ba1a19a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2c4100"/></to>
    </wire>
    <wire loc="442:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2b76ba13e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba223740"/></to>
    </wire>
    <wire loc="455:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2b76ba154810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba24e100"/></to>
    </wire>
    <wire loc="531:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x2b76ba1b3ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba26e100"/></to>
    </wire>
    <wire loc="551:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x2b76ba1e7cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2fe740"/></to>
    </wire>
    <wire loc="532:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x2b76ba1b1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba26ad10"/></to>
    </wire>
    <wire loc="460:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x2b76ba17a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba245740"/></to>
    </wire>
    <wire loc="473:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x2b76ba18f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba271460"/></to>
    </wire>
    <wire loc="497:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2b76ba1959a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2d7100"/></to>
    </wire>
    <wire loc="535:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x2b76ba1abcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba260100"/></to>
    </wire>
    <wire loc="545:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x2b76ba1c7cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2bb740"/></to>
    </wire>
    <wire loc="557:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x2b76ba1decc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2f9100"/></to>
    </wire>
    <wire loc="445:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2b76ba162810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba242740"/></to>
    </wire>
    <wire loc="536:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x2b76ba1a9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba25bd10"/></to>
    </wire>
    <wire loc="450:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2b76ba15e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba239d10"/></to>
    </wire>
    <wire loc="463:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x2b76ba174810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba265740"/></to>
    </wire>
    <wire loc="476:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x2b76ba1899a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba290100"/></to>
    </wire>
    <wire loc="489:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x2b76ba19f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2c0d10"/></to>
    </wire>
    <wire loc="500:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2b76ba1b99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2f9100"/></to>
    </wire>
    <wire loc="440:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2b76ba142810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba1ff100"/></to>
    </wire>
    <wire loc="453:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2b76ba158810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba259d80"/></to>
    </wire>
    <wire loc="466:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x2b76ba16e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba284740"/></to>
    </wire>
    <wire loc="530:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x2b76ba1b5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba26e100"/></to>
    </wire>
    <wire loc="548:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x2b76ba1c1cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2dd740"/></to>
    </wire>
    <wire loc="555:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x2b76ba1e0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2f9100"/></to>
    </wire>
    <wire loc="541:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x2b76ba1cdcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2a3100"/></to>
    </wire>
    <wire loc="471:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x2b76ba169810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba27be60"/></to>
    </wire>
    <wire loc="484:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x2b76ba17f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2a8740"/></to>
    </wire>
    <wire loc="495:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2b76ba1999a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2e2d10"/></to>
    </wire>
    <wire loc="549:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x2b76ba1bfcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2d7100"/></to>
    </wire>
    <wire loc="538:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x2b76ba1a7cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2b1100"/></to>
    </wire>
    <wire loc="443:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2b76ba166810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba21d100"/></to>
    </wire>
    <wire loc="456:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2b76ba17c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba24ad10"/></to>
    </wire>
    <wire loc="493:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2b76ba19d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2bb740"/></to>
    </wire>
    <wire loc="461:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x2b76ba178810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba26e100"/></to>
    </wire>
    <wire loc="474:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x2b76ba18d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba29be00"/></to>
    </wire>
    <wire loc="498:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2b76ba1939a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2d3d10"/></to>
    </wire>
    <wire loc="540:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x2b76ba1cfcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2a8740"/></to>
    </wire>
    <wire loc="438:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2b76ba145870"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba1d7d10"/></to>
    </wire>
    <wire loc="451:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2b76ba15c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba234740"/></to>
    </wire>
    <wire loc="464:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x2b76ba172810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba260100"/></to>
    </wire>
    <wire loc="477:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x2b76ba1879a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba28cd10"/></to>
    </wire>
    <wire loc="542:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x2b76ba1cbcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba284740"/></to>
    </wire>
    <wire loc="546:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x2b76ba1c5cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2e6100"/></to>
    </wire>
    <wire loc="552:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x2b76ba1e4cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2f9100"/></to>
    </wire>
    <wire loc="482:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x2b76ba1839a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2b1100"/></to>
    </wire>
    <wire loc="543:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x2b76ba1c9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba27f100"/></to>
    </wire>
    <wire loc="441:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2b76ba140810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba228d10"/></to>
    </wire>
    <wire loc="454:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2b76ba156810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba253740"/></to>
    </wire>
    <wire loc="467:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x2b76ba16b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba27f100"/></to>
    </wire>
    <wire loc="539:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x2b76ba1d1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2add10"/></to>
    </wire>
    <wire loc="550:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x2b76ba1bdcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2d3d10"/></to>
    </wire>
    <wire loc="472:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x2b76ba1919a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2769f0"/></to>
    </wire>
    <wire loc="485:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x2b76ba17d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2a3100"/></to>
    </wire>
    <wire loc="496:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2b76ba1979a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2dd740"/></to>
    </wire>
    <wire loc="444:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2b76ba164810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba219d10"/></to>
    </wire>
    <wire loc="494:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2b76ba19b9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2e6100"/></to>
    </wire>
    <wire loc="449:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2b76ba160810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba23d100"/></to>
    </wire>
    <wire loc="462:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x2b76ba176810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba26ad10"/></to>
    </wire>
    <wire loc="475:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x2b76ba18b9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba295740"/></to>
    </wire>
    <wire loc="499:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2b76ba1bb9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2fe740"/></to>
    </wire>
    <wire loc="439:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2b76ba14e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba204740"/></to>
    </wire>
    <wire loc="452:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2b76ba15a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba22f100"/></to>
    </wire>
    <wire loc="465:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x2b76ba170810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba25bd10"/></to>
    </wire>
    <wire loc="478:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x2b76ba1859a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2b6740"/></to>
    </wire>
    <wire loc="534:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x2b76ba1adca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba265740"/></to>
    </wire>
    <wire loc="547:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x2b76ba1c3cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2e2d10"/></to>
    </wire>
    <wire loc="533:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x2b76ba1afcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba265740"/></to>
    </wire>
    <wire loc="483:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x2b76ba1819a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2add10"/></to>
    </wire>
    <wire loc="554:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x2b76ba1e2cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2fe740"/></to>
    </wire>
    <wire loc="558:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x2b76ba1dccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba2c0d10"/></to>
    </wire>
    <wire loc="529:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x2b76ba1b79f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b76ba245740"/></to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b76ba3b82f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b76ba3c2020"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b76ba3b7320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b76bb129e80"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b76ba3b41d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b76bb18fdb0"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b76ba3b2020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b76bb18da80"/></to>
    </wire>
    <wire loc="89:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b76ba375310"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b76baeca550"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b76baeca550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b76baebca80"/></to>
    </wire>
    <wire loc="86:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b76ba3915b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b76ba3a7170"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b76ba3a7170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b76ba3e2080"/></to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b76ba3b5510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b76bb18f1d0"/></to>
    </wire>
    <wire loc="85:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76ba37b020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76ba3b1020"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76ba3b1020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76ba3e3020"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b76ba3b4800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b76bb18e430"/></to>
    </wire>
    <wire loc="90:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b76ba39d3f0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b76baec6660"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b76baec6660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b76baeb8af0"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b76ba3c2020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b76bb157b80"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b76ba3b02c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b76bb18a8b0"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b76ba3d01d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b76bb18cce0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b76ba3a80f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b76ba3e4020"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b76ba3e4020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b76bae70660"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b76ba3e2080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b76bb157080"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76ba3e3020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b76bae6d6e0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b76ba3c7430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b76ba3e2b70"/></to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b76ba3e2b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b76bb143020"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b76ba3d8170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b76ba3e39d0"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b76ba3e39d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b76baecba70"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2b76bb1820f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76ba3c1530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b76bb189860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b76ba3eea70"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b76ba3eea70"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b76bb0efc90"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b76bb188690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b76ba3e7840"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b76ba3e7840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b76bb0eea50"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b76bb1844d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b76bac5ab20"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b76bb188ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b76bae70660"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b76bae70660"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b76baec1d10"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76bb187b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76baecb0c0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76baecb0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76baebd640"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b76bb186610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b76ba460dc0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b76ba460dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b76ba48b970"/></to>
    </wire>
    <wire loc="106:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b76bb1831f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b76ba3dc330"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b76ba3dc330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b76ba40b7e0"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b76bb182d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b76ba104020"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b76bb157b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b76bb154d90"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b76baecba70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b76baebc020"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b76bb143020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b76bb141400"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b76bb0efc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b76bb0e5a20"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b76bb157080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b76bb1502d0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b76ba3ef690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b76bb0ef5e0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b76bb0ef5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2b76bb0e5370"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b76bae6d6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b76baebec50"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76ba3c1530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76bb0f2be0"/></to>
    </wire>
    <wire loc="96:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76bb0f2be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76bb0e77b0"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b76ba3e6940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b76bb0f18e0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b76bb0f18e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b76bb0e64d0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b76ba3efd50"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b76bb0ed170"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b76bb0ed170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b76bb0e2020"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b76bb0eea50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b76bb0e3840"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b76bb154d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b76ba3de390"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b76ba3de390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b76ba3dbe70"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b76bb0ec6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b76bb073220"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b76bb073220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b76bb070a10"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b76bb072020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b76bb146340"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b76bb146340"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b76bb143d70"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b76bb143d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b76bb15cce0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b76bb15cce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b76bb155860"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b76bb155860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b76ba3dee80"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b76ba3dee80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b76ba40c990"/></to>
    </wire>
    <wire loc="107:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b76bb0ec020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b76bb159980"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b76bb159980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b76bb154690"/></to>
    </wire>
    <wire loc="108:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b76bb154690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b76bb0bca90"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b76bb0bca90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b76bb0b8e20"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b76bb0b9950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b76ba3ddb40"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b76ba3ddb40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b76bae387c0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b76bae387c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b76bae32020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76ba40a640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76ba470950"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76ba470950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76ba48cb80"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b76ba402b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b76ba46bbf0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b76ba46bbf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b76ba489740"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b76ba3fe760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b76bad0e6c0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b76ba3fe760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b76bae3c5c0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b76bae3c5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b76bae34ca0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b76bad0e6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b76bad59320"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b76ba3f72a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2b76bad0b020"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b76bad0b020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b76bad59bc0"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b76ba3ff060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b76bad0bcb0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b76bad0bcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b76bad58970"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b76ba3f5330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b76bae70660"/></to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76ba421920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76baecb0c0"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b76ba428420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b76bb026a20"/></to>
    </wire>
    <wire loc="56:../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b76bb026a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b76bb089a20"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2b76ba424110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b76bb028aa0"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b76bb028aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b76ba8741d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b76ba428bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b76ba104020"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2b76ba417b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2b76ba418ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2b76ba419c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2b76ba4930c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2b76ba488b40"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2b76ba47cd90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b76ba528220"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b76ba528220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b76ba522d20"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b76ba4b0060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b76ba63e060"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b76ba63e060"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba630020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b76ba4af380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b76ba63b9c0"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b76ba63b9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba6601d0"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b76ba4ae6a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2b76ba638020"/></to>
    </wire>
    <wire loc="77:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b76ba638020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba656b70"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b76ba4ac0e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2b76ba67ed60"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b76ba67ed60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b76ba7a6020"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b76ba4961d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76babe2e20"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76babe2e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76ba7de600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b76ba4952b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2b76babdf7b0"/></to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b76babdf7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b76ba4959c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2b76babddae0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b76babddae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b76ba497a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2b76babe0ad0"/></to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b76babe0ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b76ba497120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2b76babdc160"/></to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b76babdc160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b76ba49cb00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2b76babd4870"/></to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b76babd4870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b76ba4a33d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2b76babd2880"/></to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b76babd2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b76ba4a3c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2b76babd00a0"/></to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b76babd00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b76ba49e5f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2b76babd9e50"/></to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b76babd9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b76ba49a020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b76babd7670"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b76babd7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b76ba4a7520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2b76bac1a500"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b76bac1a500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b76ba49fa90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2b76bac1bce0"/></to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b76bac1bce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b76ba49a8e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2b76babd5e50"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b76babd5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b76ba4991c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2b76babd7e50"/></to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b76babd7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b76ba499a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b76babd6e50"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b76babd6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2b76ba4ccd90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76bac08a80"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76bac08a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76ba7de600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2b76ba4cc020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76bac309e0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76bac309e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76ba7de600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b76ba4a4810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b76bac5ab20"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b76ba484020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b76bac59d20"/></to>
    </wire>
    <wire loc="23:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b76bac59d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b76bac94310"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2b76ba4c0820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2b76ba4c1940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b76ba52b7d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76ba522490"/></to>
    </wire>
    <wire loc="51:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b76ba522490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76bba86bb0"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b76ba522d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b76bba844f0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b76bba86bb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76bba7fc90"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b76bba844f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b76bba77890"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b76bba7fc90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76bba61a30"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b76bba700a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b76bba7d570"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b76bba7d570"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b76bba60340"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b76bba74c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b76ba59c020"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b76ba59c020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b76ba5d80f0"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b76bba5d4c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b76bba67570"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b76bba67570"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b76ba53e4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76bba5ba90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76bba65c10"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76bba65c10"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76ba575280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b76bba5ada0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b76bba63020"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b76bba63020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b76ba574ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b76ba53e4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b76b9edfb70"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76ba575280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x2b76b9edd410"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b76ba574ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x2b76b9ef3a20"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b76ba53e4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b76b9edfb70"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76ba575280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x2b76b9efa020"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b76ba574ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x2b76b9ef1700"/></to>
    </wire>
    <wire loc="70:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b76ba53e4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b76b9edfb70"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76ba575280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2b76b9ef95a0"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b76ba574ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x2b76b9ef0570"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b76ba53e4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b76b9edfb70"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76ba575280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x2b76b9ef7a50"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b76ba574ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x2b76b9eef3e0"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b76ba53e4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b76b9edfb70"/></to>
    </wire>
    <wire loc="79:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76ba575280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x2b76b9ef5020"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b76ba574ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x2b76b9eee1f0"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b76ba53e4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b76b9edfb70"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76ba575280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x2b76b9ef45a0"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b76ba574ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x2b76b9eed020"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b76ba5d5540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b76ba5cf020"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b76ba5cf020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b76ba5ca0a0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b76ba5bb2c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b76b9edfb70"/></to>
    </wire>
    <wire loc="73:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b76ba63d380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba66ab70"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b76ba63c6b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba665710"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b76ba529e30"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba636440"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b76ba63acd0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba65cd60"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba635610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b76ba13e810"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba62f2f0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x2b76ba18f9a0"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba669de0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2b76ba140810"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba664930"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b76ba145870"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba65f480"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x2b76ba1879a0"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba659020"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2b76ba1919a0"/></to>
    </wire>
    <wire loc="69:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba655de0"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x2b76ba1899a0"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b76ba67e150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b76ba676a20"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b76ba67aa20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b76ba797100"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76ba6a55d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x2b76b9efc8c0"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x2b76ba6a48f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x2b76b9f0b020"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba6a37a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2b76ba1919a0"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2b76ba7a6b20"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b76ba6938a0"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2b76ba6938a0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b76ba6bd020"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2b76ba797c00"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b76ba6958f0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2b76ba6958f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b76ba6c1060"/></to>
    </wire>
    <wire loc="82:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2b76ba6c7a30"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x2b76ba6b3020"/></to>
    </wire>
    <wire loc="73:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2b76ba6908a0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x2b76ba6ba020"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2b76ba68e8a0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x2b76ba6b8020"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2b76ba6998a0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x2b76ba6bf020"/></to>
    </wire>
    <wire loc="80:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2b76ba6c98a0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2b76ba6b5020"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2b76ba6928a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x2b76ba6bc020"/></to>
    </wire>
    <wire loc="83:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2b76ba6c6a30"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x2b76ba6b1020"/></to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2b76ba68c8a0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x2b76ba6b7020"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2b76ba6948a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2b76ba6be020"/></to>
    </wire>
    <wire loc="81:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2b76ba6c8a30"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x2b76ba6b4060"/></to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2b76ba6918a0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x2b76ba6bb020"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2b76ba68f8a0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x2b76ba6b9020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2b76ba69b8a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x2b76ba6c0020"/></to>
    </wire>
    <wire loc="79:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2b76ba6ca8a0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x2b76ba6b6020"/></to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b76babdf160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b76babd3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b76bac210a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b76babd20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b76bac15500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b76bac17500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b76babdd490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b76bac1d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b76bac18500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b76bac23880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b76bac240a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76babe1a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76ba7dd350"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76ba7dd350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76ba7d5660"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b76babdce00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b76babdb490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b76bac1cc80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b76babdbbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b76bac18ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b76bac1d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b76babd6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b76bac1e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b76bac21880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b76bac1e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b76bac16ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b76bac17ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b76bac24880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b76bac1f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b76bac1ace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b76babd0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b76bac15ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b76ba7dc2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b76babe0480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b76babd9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b76babd5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b76bac220a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b76bac22880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b76babd30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b76babda2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b76babd9020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b76babdc7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b76bac1b500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b76bac16500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b76bac230a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b76bac1f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b76babdfe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b76bac250a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b76babda940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b76bac25880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b76bac1c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b76bac149b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b76ba7dc2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2b76ba7dc2c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b76ba7d3890"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7d2ba0"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba814a30"/></to>
    </wire>
    <wire loc="51:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76ba7de600"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76ba7d4510"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba8138b0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2b76ba806b40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b76ba879770"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b76ba879770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b76ba8741d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b76ba812060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76ba89dc40"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76ba89dc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76bbb45c30"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b76ba80fc20"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b76ba89c8f0"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b76ba89c8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b76bbb420c0"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b76ba8062e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b76babb4020"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b76babb4020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b76bbbd42b0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b76ba810a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b76ba104020"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2b76ba803bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b76ba8741d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b76ba86fb70"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b76bbbd42b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b76ba90b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b76bbb420c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b76ba8c7dd0"/></to>
    </wire>
    <wire loc="105:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76bbb45c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76ba8cca20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bbb438f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bbbcc2c0"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bbbcc2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b76baa3a8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b76ba8c7dd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b76ba96d440"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b76bbb426d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b76ba8c6480"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b76ba8c6480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b76ba96da50"/></to>
    </wire>
    <wire loc="111:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b76ba909600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b76bbbd4a50"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bbbbf760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76ba8c75e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b76ba90a370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76bbbcd640"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76bbbcd640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76baa3b5c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b76ba9046a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b76bbbc7c10"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b76bbbc7c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b76baa3fa80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76ba8c75e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76ba96ec40"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b76ba90b510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b76ba96b700"/></to>
    </wire>
    <wire loc="88:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76ba8cca20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76ba96fe80"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b76ba96ae00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b76ba909600"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b76ba96a060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2b76ba90a370"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b76ba965de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2b76ba9046a0"/></to>
    </wire>
    <wire loc="98:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2b76ba969490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b76ba95d860"/></to>
    </wire>
    <wire loc="85:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b76ba95d860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b76ba99a020"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b76ba9645a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b76ba104020"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x2b76ba963c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b76ba99d8a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b76ba995750"/></to>
    </wire>
    <wire loc="86:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b76ba9563b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b76ba996dc0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b76ba9b2700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2b76ba1b5cc0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2b76ba9b0670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x2b76ba1b1cc0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b76ba9ae670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2b76ba1afcc0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2b76ba9ac670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x2b76ba1a9cc0"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2b76ba9aa670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x2b76ba1abcc0"/></to>
    </wire>
    <wire loc="14:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x2b76ba9b75b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2b76bab21430"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b76bbbc6440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b76baa3c9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b76bbbc6a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b76baadd870"/></to>
    </wire>
    <wire loc="11:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b76baadd870"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2b76bab21430"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b76bbbcb2b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b76ba95d860"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bbbcca60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76baa38130"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76baa38130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76baae4060"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76baa87020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bbbbf760"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b76baa3a8a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b76baae6bf0"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b76baae6bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bbbe9850"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2b76baa3fa80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b76baa855c0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76baa3b5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76baae7e60"/></to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76baae7e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76bbbea970"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x2b76baa3c9a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b76baa74020"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76baae4060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bbbe8c30"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76baae4930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76baa87020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76baa724b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76baae4060"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2b76baa74690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b76ba9563b0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b76baa74e70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b76ba99d8a0"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b76baae5400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b76bbbe8020"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bbbe6590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76baae4930"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b76bbbe6d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b76bbbec750"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b76bbbe3020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x2b76bab19250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b76ba99a020"/></to>
    </wire>
    <wire loc="18:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b76bab15d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2b76ba1b5cc0"/></to>
    </wire>
    <wire loc="19:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b76bab13cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2b76ba1afcc0"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b76bac50c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b76bac05da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b76babfeb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b76bac4d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b76bac46e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b76bac4de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b76bac392f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b76bac3c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b76bac03120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b76bac41670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b76bac3d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b76babfdc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b76babfcc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b76bac47670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b76bac4ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b76bac4c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76bac06760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76ba7dd350"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b76bac02aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b76bac01120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b76bac40a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b76bac01870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b76bac3dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b76bac03dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b76bac43e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b76babfc480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b76babfd480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b76bac05750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b76bac44e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b76bac45670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b76bac43670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b76bac3bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b76bac3cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b76bac49670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b76bac45e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b76bac3ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b76bac4b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b76bac39ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b76ba7dc2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b76bac05100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b76babfe370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b76bac50480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b76bac47e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b76bac4ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b76bac46670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b76bac4e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b76bac04450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b76bac4ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b76babff020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b76babffcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b76bac3e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b76bac3fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b76bac02450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b76bac3f2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b76bac3b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b76bac49e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b76bac44670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b76bac04aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b76bac03770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b76bac4be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b76babff670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b76bac4a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b76bac41e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b76bac387a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b76ba7dc2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b76bac79c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b76bac2eda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b76bac27b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b76bac77670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b76bac70e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b76bac77e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b76bac632f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b76bac652f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b76bac2b120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b76bac6b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b76bac662f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b76bac7bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b76bac7ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b76bac71670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b76bac73e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b76bac76670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76bac2f760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76ba7dd350"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b76bac2aaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b76bac29120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b76bac6aa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b76bac29870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b76bac66ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b76bac2bdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b76bac6ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b76bac7a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b76bac7b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b76bac2e750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b76bac6de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b76bac6e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b76bac6c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b76bac64ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b76bac65ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b76bac72670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b76bac6ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b76bac68ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b76bac74670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b76bac63ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b76ba7dc2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b76bac2e100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b76bac27370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b76bac79480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b76bac71e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b76bac76e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b76bac70670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b76bac78670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b76bac2d450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b76bac78e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b76bac28020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b76bac28cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b76bac682f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b76bac69ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b76bac2a450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b76bac692f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b76bac642f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b76bac72e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b76bac6d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b76bac2daa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b76bac2b770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b76bac74e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b76bac28670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b76bac73670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b76bac6be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b76bac627a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b76ba7dc2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2b76bac91880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2b76bac86020"/></to>
    </wire>
    <wire loc="20:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2b76bac86020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2b76bac81140"/></to>
    </wire>
    <wire loc="16:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2b76bac7cbd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2b76bac85c50"/></to>
    </wire>
    <wire loc="21:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2b76bac85c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2b76bacbf150"/></to>
    </wire>
    <wire loc="17:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x2b76bac80530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b76bad25a10"/></to>
    </wire>
    <wire loc="18:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2b76bacc3540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x2b76bacc4590"/></to>
    </wire>
    <wire loc="11:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x2b76bacc4590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b76bad239e0"/></to>
    </wire>
    <wire loc="18:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b76bacba910"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b76bacc1c90"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b76bacc1c90"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b76baceea90"/></to>
    </wire>
    <wire loc="19:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2b76bacbf9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b76bacc3540"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b76bacde020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b76bacd8530"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b76bacd8530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b76bacd4e50"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b76bad29020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x2b76b9ed77b0"/></to>
    </wire>
    <wire loc="9:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76bad21c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2b76ba158810"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2b76bad07990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2b76bad57900"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2b76bad09150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2b76bad560f0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2b76bad56ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b76ba528220"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b76bad44500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b76ba529e30"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b76bad43820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b76ba63e060"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b76bad42b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2b76ba63acd0"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b76bad4b880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2b76ba67e150"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b76bad40020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76badb4c30"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76badb4c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76ba7de600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76bad40d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76bae0f8f0"/></to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76bae0f8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76ba7dd350"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b76bad3d6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b76bae0e2f0"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b76bae0e2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b76bad3dde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2b76bae0dcc0"/></to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b76bae0dcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b76bad3c530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2b76bae0b370"/></to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b76bae0b370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b76bad3cc60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2b76bae0ad00"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b76bae0ad00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b76bad3ee00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b76bae04c60"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b76bae04c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b76bad3f780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2b76badec7a0"/></to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b76badec7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b76ba7dc2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b76bad3e550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b76badf02f0"/></to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b76badf02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b76bad3b3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b76bae05480"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b76bae05480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b76bad3a5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b76bae02e50"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b76bae02e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b76bad39020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b76bae01670"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b76bae01670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b76bad3be80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2b76bae087b0"/></to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b76bae087b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b76bad389c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2b76badeead0"/></to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b76badeead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b76bad39890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b76badef2f0"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b76badef2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b76bad38130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b76badefad0"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b76badefad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b76bad32d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b76bae3cdf0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b76bae3cdf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b76bae33550"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b76bad52d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b76bae70660"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76bad51bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76baecb0c0"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b76bad50950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b76baeca550"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b76bad45be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b76baec2480"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b76baec2480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b76baeb48b0"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b76bad366c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b76ba104020"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b76bae03c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b76bae0d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b76bae07c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b76badfae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b76bae01e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b76baded2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b76badf5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b76bae05c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b76badfb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b76badfde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b76bae00670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b76bae09370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b76badf4a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b76bae09ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b76badf0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b76bae0a060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b76badf6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b76bae04480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b76bae0e940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b76badf7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b76badf8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b76badf6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b76badfc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b76badf8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b76badf2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b76badfe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b76badedad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b76ba7dc2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b76bae07490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b76bae03480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b76badfbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b76bae00e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b76badfa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b76bae02670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b76bae0d670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b76bae08160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b76bae08e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b76badf22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b76badf3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b76bae0a6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b76badf32f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b76badee2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b76badfce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b76badf7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b76bae0b9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b76badfee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b76badfd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b76badf5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2b76bae37020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2b76bae327c0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b76bae1d150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b76ba104020"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b76bae31020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b76ba63e060"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b76bae30380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2b76ba63d380"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b76bae2f6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2b76ba63c6b0"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b76bae2ea50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b76ba67aa20"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b76bae2d6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76bb00fd00"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76bb00fd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76ba7de600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b76bae2c530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2b76bb051ad0"/></to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b76bb051ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b76ba7dc2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b76bae2bad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2b76bb0096b0"/></to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b76bb0096b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b76bae2b3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2b76bb008370"/></to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b76bb008370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b76bae2a330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b76bae70660"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76bae291e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76baecb0c0"/></to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b76bae27d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b76baeca550"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b76bae29b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b76ba460dc0"/></to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b76bae223e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b76bb001e50"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b76bb001e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b76bae22cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b76bafff670"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b76bafff670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b76bae23b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2b76bb007160"/></to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b76bb007160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b76bae1f6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2b76bb0512f0"/></to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b76bb0512f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b76bae20590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b76bb0532f0"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b76bb0532f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b76bae20e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b76bb053ad0"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b76bb053ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b76bae1e020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b76bb054ad0"/></to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b76bb054ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b76bae1e8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b76bb00d300"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b76bb00d300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2b76bae119d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b76baf147c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b76ba59c020"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b76baeae820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b76baf1d4e0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b76baeb0b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b76baefeb80"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b76baefeb80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b76bafcd2b0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b76baf0d7d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b76bafdc150"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b76baf0e110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76baf302a0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b76baf302a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76bbd6e9d0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b76bafd6640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b76baf66830"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b76baf61cd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b76baf30af0"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b76baf30af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b76bbd685f0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b76bafcc690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b76baf4c080"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b76baf4c080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b76baf47cd0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b76bbd6e9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76bbd52360"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b76bbd62d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b76bbd6d260"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b76bbd6d260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b76bbd52bf0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b76bbd649b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b76baf4c080"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b76bbd4edd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b76bbd57020"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b76bbd57020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b76ba53e4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76bbd4c440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76bbd56760"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76bbd56760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76ba575280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b76bbd4b760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b76bbd55a80"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b76bbd55a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b76ba574ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b76baf430f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b76ba5cf020"/></to>
    </wire>
    <wire loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b76bafbe020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b76bafd1a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b76bafc38c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b76bb01e2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b76bb01e2c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b76baf0d7d0"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b76bb002c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b76bb00b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b76bb005c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b76baff8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b76bafffe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b76bb00a370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b76baff4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b76bb0542f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b76bb004c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b76bb003c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b76baffa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b76baffce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b76baffe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76bb00e970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76ba7dd350"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b76bb009d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b76baff3a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b76bb008ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b76bb009060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b76baff5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b76bb003480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b76bb004480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b76bb00d950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b76baff6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b76baff7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b76baff5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b76bb052ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b76baffb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b76baff7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b76bb055ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b76baffd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b76bb005490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b76bb002480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b76baffae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b76baffee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b76baff8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b76bb001670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b76bb00b670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b76bb007e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b76bb0552f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b76baff1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b76baff12f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b76bb0522f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b76baffbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b76baff6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b76bb00bcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b76bb00a9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b76baffde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b76bb0077b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b76baffc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b76baff4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b76bb04f7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b76ba7dc2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b76bb024920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b76bb08a940"/></to>
    </wire>
    <wire loc="54:../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b76bb02a990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76bb08a080"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b76bb06de60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b76bb072020"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b76bb06cae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b76bb06e690"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b76bb06e690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b76ba8741d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b76bb06b8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b76bb026a20"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76bb06a170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76baecb0c0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2b76bb0b9200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2b76bb0b5550"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b76bb0b43f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b76bb0b9950"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76bb0b4a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76baecb0c0"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b76bb0e2d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b76bb0ec6b0"/></to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b76bb0e1b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b76bb0ec020"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b76bb0e02f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b76bae70660"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76bb0df170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76baecb0c0"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b76bb0dfb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b76bb0fa410"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2b76bb11bdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b76bb156800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b76bb152580"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b76bb152580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b76ba8741d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76bb13e1a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76ba3e3020"/></to>
    </wire>
    <wire loc="67:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b76bb23f4e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b76bb235df0"/></to>
    </wire>
    <wire loc="67:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76bb2331a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76bb245400"/></to>
    </wire>
    <wire loc="69:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b76bb242e50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76bb2357a0"/></to>
    </wire>
    <wire loc="60:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b76bb23b940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b76bb233b20"/></to>
    </wire>
    <wire loc="69:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b76bb245d90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b76bb23d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b76bb244a50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b76bb23e4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b76bb23b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b76bb58c6b0"/></to>
    </wire>
    <wire loc="64:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b76bb23d020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b76bb3a4830"/></to>
    </wire>
    <wire loc="65:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b76bb23e4c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b76bb3a4110"/></to>
    </wire>
    <wire loc="66:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b76bb3a3760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b76bb23b020"/></to>
    </wire>
    <wire loc="70:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b76bb29e750"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b76bb23b940"/></to>
    </wire>
    <wire loc="71:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b76bb3a1590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b76bb23b940"/></to>
    </wire>
    <wire loc="72:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b76bb398cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b76bb23b940"/></to>
    </wire>
    <wire loc="74:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b76bb3a20e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b76bb295340"/></to>
    </wire>
    <wire loc="75:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b76bb3a29d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b76bb29be50"/></to>
    </wire>
    <wire loc="77:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b76bb28f680"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b76bb39cb60"/></to>
    </wire>
    <wire loc="78:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b76bb28e020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b76bb3e7080"/></to>
    </wire>
    <wire loc="17:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b76bb3e7080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b76bb525080"/></to>
    </wire>
    <wire loc="80:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b76bb38dd20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b76bb3e7890"/></to>
    </wire>
    <wire loc="13:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b76bb3e7890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b76bb52b800"/></to>
    </wire>
    <wire loc="332:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b76bb2a9e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b76bb272d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b76bb2ac400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b76bb2a50c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b76bb3a0c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b76bb39f480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b76bb3e2d50"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b76bb52a8f0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b76bb52a8f0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b76bb3d3370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b76bb52b800"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b76bb3d6d70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b76bb5290c0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b76bb5258e0"/></to>
    </wire>
    <wire loc="19:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76bb524020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76bb52c3c0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76bb52c3c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76bb3dad00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bb52b060"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bbe8f970"/></to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bbe8f970"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bb4f02c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b76bb3d1450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b76bb5290c0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bbe89a50"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bb3d6020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b76bb3d21d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76bbe90cc0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76bbe90cc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76bb4f1020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b76bb3cf1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b76bbe892b0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b76bbe892b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b76bb4f21d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bb3d6020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bb453dc0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b76bb3d3370"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b76bb450890"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b76bb3d6d70"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b76bb4516d0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76bb3dad00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76bb453020"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b76bb44e020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b76bb3d1450"/></to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b76bb44f230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2b76bb3d21d0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b76bb449290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2b76bb3cf1d0"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2b76bb44e690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b76bb43c8b0"/></to>
    </wire>
    <wire loc="88:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b76bb43c8b0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b76bb4a8020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b76bb449c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b76bb50b080"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b76bb50b080"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b76ba5cf020"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b76bb447dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b76ba104020"/></to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b76bb4363b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b76bb4a4dc0"/></to>
    </wire>
    <wire loc="87:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b76bb43c080"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b76bb435710"/></to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b76bb4a36d0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x2b76ba1d1cc0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2b76bb4a1670"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x2b76ba1cfcc0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b76bb49f670"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x2b76ba1cdcc0"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2b76bb49d670"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x2b76ba1c9cc0"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2b76bb49b670"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x2b76ba1cbcc0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b76bbe8e8d0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b76bb43c8b0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bbe8e130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bb4f0ad0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bb4f0ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bb4e6e80"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bb4ef8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bbe89a50"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bb4f02c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bb4e79e0"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bb4e79e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bbecc3a0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2b76bb4f21d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b76bb4ed060"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76bb4f1020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76bb4e8b60"/></to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76bb4e8b60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76bbecd540"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bb4e6e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bbeca8b0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2b76bb4eb060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b76bb4363b0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bb560770"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bb4ef8a0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bb4ebe50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bb4e6e80"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b76bb5455f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b76bb4e6270"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b76bb4e6270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b76bbeccb20"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b76bb55b880"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b76bb43c080"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bbec9210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bb560770"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b76bbec99d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b76bbecf330"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b76bbec7c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b76bbf373a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b76bb55b880"/></to>
    </wire>
    <wire loc="82:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b76bbf37b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b76bb545020"/></to>
    </wire>
    <wire loc="84:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b76bbf360f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b76bb5455f0"/></to>
    </wire>
    <wire loc="85:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bbf36d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bb544270"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../tos/system/MainC.nc">
      <documentation loc="45:../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BaseStationP" loc="60:BaseStationP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../tos/system/LedsC.nc">
      <documentation loc="34:../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../tos/platforms/telosa/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../tos/system/StateImplC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba383020"/>
            <typename><typedef-ref name="TMicro" ref="0x2b76ba383390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba383020"/>
            <typename><typedef-ref name="TMicro" ref="0x2b76ba383390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../tos/system/RandomC.nc">
      <documentation loc="33:../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x2b76b9f02970" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x2b76b9f02d10" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x2b76b9f01110" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x2b76b9f01490" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x2b76b9f01810" loc="44:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x2b76b9f01b80" loc="45:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x2b76b9eff020" loc="46:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x2b76b9eff3b0" loc="47:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x2b76b9eff780" loc="48:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x2b76b9f49e70" loc="40:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x2b76b9f46270" loc="41:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x2b76ba1d6190" loc="40:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x2b76ba1d6540" loc="41:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x2b76ba1d68f0" loc="42:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x2b76ba1d6ca0" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x2b76ba1d5060" loc="44:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b76ba5949c0" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b76ba5949c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b76ba5c9120" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b76ba5c9120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b76ba5b8a50" loc="55:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b76ba5b8a50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b76ba5b5290" loc="56:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b76ba5b5290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b76ba5b5680" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b76ba5b5680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b76ba5b5e60" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b76ba5b5e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b76ba5ef260" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b76ba5efa60" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b76ba5efa60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b76ba59da20" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b76ba59da20"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b76ba60a290" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b76ba60a290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b76ba60a680" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b76ba60a680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b76ba60ae60" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b76ba60ae60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b76ba609260" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b76baa6d020" loc="89:../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b76baaae0d0" loc="42:../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b76baa937e0" loc="52:../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b76bacec020" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b76bacec020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b76bacec7b0" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76bacec7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b76baf1fa50" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b76baf1fa50"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b76baf8a160" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b76baf8a160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b76bafbc730" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b76bafbc730"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b76bafbca60" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b76b9e5a4d0" loc="58:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2b76b9e5a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76b9e5a850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b76b9e5d020" loc="57:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b76b9e5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b76b9e5d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76b9e5c480" loc="42:../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76b9e5c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76b9e5c800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b76b9e554e0" loc="6:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x2b76b9e554e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76b9e55860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76b9e58690" loc="4:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76b9e58690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76b9e58a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x2b76b9e58da0" loc="5:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2b76b9e58da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76b9e55180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2b76b9e55bc0" loc="7:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x2b76b9e55bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76b9e54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76b9e57a10" loc="2:../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76b9e57a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76b9e57d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x2b76b9e56be0" loc="39:../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2b76b9e56be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76b9e73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2b76b9e872c0" loc="40:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b76b9e872c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b76b9e8d1b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b76b9e877d0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b76b9e87960"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b76b9e87af0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b76b9e87640"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b76b9e87c80"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b76b9e87e10"/>
        <function-ref name="initClocks" scoped="" ref="0x2b76b9e8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76b9e73b50" loc="39:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76b9e73b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76b9e70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2b76b9e94950" loc="46:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b76b9e94950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b76b9e937f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b76b9e94e60"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b76b9e93020"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b76b9e931b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b76b9e94cd0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b76b9e93340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b76b9e934d0"/>
        <function-ref name="initClocks" scoped="" ref="0x2b76b9e93660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b76b9e93b30" loc="47:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b76b9e93b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b76b9e92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76b9e942a0" loc="45:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76b9e942a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76b9e94620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x2b76b9ecfa50" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x2b76b9ecfa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9ecfdd0"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9ece020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9ece1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9ece340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9ece4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9ece660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9ece7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9ece980"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9eceb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x2b76b9edd410" loc="51:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x2b76b9edd410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9edd790"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9edd920"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9eddab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9eddc40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9edddd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9efc020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9efc1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9efc340"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9efc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x2b76b9ee6bb0" loc="47:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x2b76b9ee6bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9ee5020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9ee51b0"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9ee5340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9ee54d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9ee5660"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9ee57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x2b76b9f09020" loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x2b76b9f09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9f093a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9f09530"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9f096c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9f09850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9f099e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9f09b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x2b76b9eeb020" loc="44:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2b76b9eeb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9eeb3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9eeb530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9eeb6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9eeb850"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9eeb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x2b76b9ef0570" loc="61:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x2b76b9ef0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9ef08f0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9ef0a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9ef0c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9ef0da0"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9eef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x2b76b9f06020" loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x2b76b9f06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9f063a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9f06530"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9f066c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9f06850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9f069e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9f06b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x2b76b9ef7a50" loc="55:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x2b76b9ef7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9ef7dd0"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9ef6020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9ef61b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9ef6340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9ef64d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9ef6660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9ef67f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9ef6980"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9ef6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x2b76b9ed6020" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2b76b9ed6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9ed63a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9ed6530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9ed66c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9ed6850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9ed69e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9ed6b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9ed6d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9ed5020"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9ed51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x2b76b9f0b020" loc="66:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x2b76b9f0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9f0b3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9f0b530"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9f0b6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9f0b850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9f0b9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9f0bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x2b76b9ef2890" loc="59:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x2b76b9ef2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9ef2c10"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9ef2da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9ef1020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9ef11b0"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9ef1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x2b76b9efc8c0" loc="52:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x2b76b9efc8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9efcd40"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9efb020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9efb1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9efb340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9efb4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9efb660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9efb7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9efb980"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9efbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x2b76b9ee5bb0" loc="48:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x2b76b9ee5bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9edf020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9edf1b0"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9edf340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9edf4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9edf660"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9edf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x2b76b9f08020" loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x2b76b9f08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9f083a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9f08530"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9f086c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9f08850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9f089e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9f08b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x2b76b9efa020" loc="53:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x2b76b9efa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9efa3a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9efa530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9efa6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9efa850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9efa9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9efab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9efad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9ef9020"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9ef91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x2b76b9eebda0" loc="45:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x2b76b9eebda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9ee7180"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9ee7310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9ee74a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9ee7630"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9ee77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x2b76b9ed77b0" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2b76b9ed77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76b9ed7b30"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76b9ed7cc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9ed7e50"/>
        <function-ref name="get" scoped="" ref="0x2b76b9ec0020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9ec01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9ec0340"/>
        <function-ref name="getMode" scoped="" ref="0x2b76b9ec04d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9ec0660"/>
        <function-ref name="overflow" scoped="" ref="0x2b76b9ec07f0"/>
        <function-ref name="setMode" scoped="" ref="0x2b76b9ec0980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76b9ec0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x2b76b9eef3e0" loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x2b76b9eef3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9eef760"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9eef8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9eefa80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9eefc10"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9eefda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x2b76b9ed55a0" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2b76b9ed55a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9ed5920"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9ed5ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9ed5c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9ed5dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9ecf020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9ecf1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9ecf340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9ecf4d0"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9ecf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x2b76b9ef5020" loc="56:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x2b76b9ef5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9ef53a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9ef5530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9ef56c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9ef5850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9ef59e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9ef5b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9ef5d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9ef4020"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9ef41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x2b76b9ee0b60" loc="46:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x2b76b9ee0b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9ee6020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9ee61b0"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9ee6340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9ee64d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9ee6660"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9ee67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x2b76b9f0a020" loc="67:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x2b76b9f0a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9f0a3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9f0a530"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9f0a6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9f0a850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9f0a9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9f0ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x2b76b9eec140" loc="43:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2b76b9eec140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9eec4c0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9eec650"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9eec7e0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9eec970"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9eecb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x2b76b9ef1700" loc="60:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x2b76b9ef1700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9ef1a80"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9ef1c10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9ef1da0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9ef0020"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9ef01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x2b76b9f07020" loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x2b76b9f07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9f073a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9f07530"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9f076c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9f07850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9f079e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9f07b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x2b76b9ef95a0" loc="54:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x2b76b9ef95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9ef9920"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9ef9ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9ef9c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9ef9dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9ef7020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9ef71b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9ef7340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9ef74d0"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9ef7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x2b76b9edfb70" loc="50:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2b76b9edfb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76b9ede020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76b9ede1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9ede340"/>
        <function-ref name="get" scoped="" ref="0x2b76b9ede4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9ede660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9ede7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76b9ede980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9edeb10"/>
        <function-ref name="overflow" scoped="" ref="0x2b76b9edeca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b76b9edee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76b9edd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x2b76b9eee1f0" loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x2b76b9eee1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9eee570"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9eee700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9eee890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9eeea20"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9eeebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x2b76b9f0c020" loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x2b76b9f0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9f0c3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9f0c530"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9f0c6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9f0c850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9f0c9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9f0cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x2b76b9eed020" loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x2b76b9eed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9eed5a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9eed730"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9eed8c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9eeda50"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9eedbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x2b76b9ef3a20" loc="58:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x2b76b9ef3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9ef3da0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9ef2020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9ef21b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9ef2340"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9ef24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x2b76b9ef45a0" loc="57:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x2b76b9ef45a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9ef4920"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9ef4ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9ef4c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9ef4dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9ef3020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9ef31b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9ef3340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9ef34d0"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9ef3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2b76b9f31aa0" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2b76b9f31aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9f31e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2b76b9f31450" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2b76b9f31450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9f317d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2b76b9f30120" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2b76b9f30120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9f304a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2b76b9f32d80" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b76b9f32d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9f31180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b76b9f33540" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b76b9f33540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76b9f338c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76b9f33a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9f33be0"/>
        <function-ref name="get" scoped="" ref="0x2b76b9f33d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9f32020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9f321b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76b9f32340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9f324d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b76b9f32660"/>
        <function-ref name="setMode" scoped="" ref="0x2b76b9f327f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76b9f32980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2b76b9f4b940" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2b76b9f4b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9f4bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2b76b9f4b2f0" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2b76b9f4b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9f4b670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2b76b9f4a020" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2b76b9f4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9f4a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2b76b9f4cbf0" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b76b9f4cbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9f4b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b76b9f4d3e0" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b76b9f4d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76b9f4d760"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76b9f4d8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9f4da80"/>
        <function-ref name="get" scoped="" ref="0x2b76b9f4dc10"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9f4dda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9f4c020"/>
        <function-ref name="getMode" scoped="" ref="0x2b76b9f4c1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9f4c340"/>
        <function-ref name="overflow" scoped="" ref="0x2b76b9f4c4d0"/>
        <function-ref name="setMode" scoped="" ref="0x2b76b9f4c660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76b9f4c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b76b9f87a90" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b76b9f87a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9f87e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9f86020"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9f861b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9f86340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9f864d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9f86660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b76b9f479d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b76b9f479d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9f47d50"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9f88020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9f881b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9f88340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9f884d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9f88660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9f887f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9f88980"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9f88b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b76b9f84020" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b76b9f84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9f843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b76b9f88de0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b76b9f88de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9f87180"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9f87310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9f874a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9f87630"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9f877c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b76b9f86930" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b76b9f86930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76b9f86cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76b9f86e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9f85020"/>
        <function-ref name="get" scoped="" ref="0x2b76b9f851b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9f85340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9f854d0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76b9f85660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9f857f0"/>
        <function-ref name="overflow" scoped="" ref="0x2b76b9f85980"/>
        <function-ref name="setMode" scoped="" ref="0x2b76b9f85b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76b9f85ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b76b9fa2160" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b76b9fa2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9fa24e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9fa2670"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9fa2800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9fa2990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9fa2b20"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9fa2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b76b9fa4020" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b76b9fa4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9fa43a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9fa4530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9fa46c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9fa4850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9fa49e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9fa4b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9fa4d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9fa3020"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9fa31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b76b9f9f7a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b76b9f9f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9f9fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b76b9fa3480" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b76b9fa3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9fa3800"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9fa3990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9fa3b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9fa3cb0"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9fa3e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b76b9fa1020" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b76b9fa1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76b9fa13a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76b9fa1530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9fa16c0"/>
        <function-ref name="get" scoped="" ref="0x2b76b9fa1850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9fa19e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9fa1b70"/>
        <function-ref name="getMode" scoped="" ref="0x2b76b9fa1d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9f9f020"/>
        <function-ref name="overflow" scoped="" ref="0x2b76b9f9f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b76b9f9f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76b9f9f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b76b9f9a7a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b76b9f9a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9f9ab20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9f9acb0"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9f9ae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9f99020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9f991b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9f99340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b76b9f9c6d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b76b9f9c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9f9ca50"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9f9cbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9f9cd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9f9b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9f9b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9f9b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9f9b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9f9b660"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9f9b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b76b9f98c50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b76b9f98c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9f97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b76b9f9bac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b76b9f9bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9f9be40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9f9a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9f9a1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9f9a340"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9f9a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b76b9f99610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b76b9f99610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76b9f99990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76b9f99b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9f99cb0"/>
        <function-ref name="get" scoped="" ref="0x2b76b9f99e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9f98020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9f981b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76b9f98340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9f984d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b76b9f98660"/>
        <function-ref name="setMode" scoped="" ref="0x2b76b9f987f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76b9f98980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b76b9fb7cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b76b9fb7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9fb60a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9fb6230"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9fb63c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9fb6550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9fb66e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9fb6870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b76b9f95b30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b76b9f95b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9f94020"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9f941b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9f94340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9f944d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9f94660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9f947f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9f94980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9f94b10"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9f94ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b76b9fb42f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b76b9fb42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9fb4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b76b9fb7020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b76b9fb7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9fb73a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9fb7530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9fb76c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9fb7850"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9fb79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b76b9fb6b40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b76b9fb6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76b9fb5020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76b9fb51b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9fb5340"/>
        <function-ref name="get" scoped="" ref="0x2b76b9fb54d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9fb5660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9fb57f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76b9fb5980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9fb5b10"/>
        <function-ref name="overflow" scoped="" ref="0x2b76b9fb5ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b76b9fb5e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76b9fb4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b76b9fae2f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b76b9fae2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9fae670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9fae800"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9fae990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9faeb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9faecb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9faee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b76b9fb0220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b76b9fb0220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9fb05a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9fb0730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9fb08c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9fb0a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9fb0be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9fb0d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9faf020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9faf1b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9faf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b76b9fac7a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b76b9fac7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9facb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b76b9faf610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b76b9faf610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9faf990"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9fafb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9fafcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9fafe40"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9fae020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b76b9fad160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b76b9fad160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76b9fad4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76b9fad670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9fad800"/>
        <function-ref name="get" scoped="" ref="0x2b76b9fad990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9fadb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9fadcb0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76b9fade40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9fac020"/>
        <function-ref name="overflow" scoped="" ref="0x2b76b9fac1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b76b9fac340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76b9fac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b76b9fa77a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b76b9fa77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9fa7b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9fa7cb0"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9fa7e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9fa6020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9fa61b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9fa6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b76b9fa96d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b76b9fa96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9fa9a50"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9fa9be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9fa9d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9fa8020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9fa81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9fa8340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9fa84d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9fa8660"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9fa87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b76b9fc9c50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b76b9fc9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9fc7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b76b9fa8ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b76b9fa8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9fa8e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9fa7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9fa71b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9fa7340"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9fa74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b76b9fa6610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b76b9fa6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76b9fa6990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76b9fa6b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9fa6cb0"/>
        <function-ref name="get" scoped="" ref="0x2b76b9fa6e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9fc9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9fc91b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76b9fc9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9fc94d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b76b9fc9660"/>
        <function-ref name="setMode" scoped="" ref="0x2b76b9fc97f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76b9fc9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b76b9fc3cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b76b9fc3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9fc20a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9fc2230"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9fc23c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9fc2550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9fc26e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9fc2870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b76b9fc5b30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b76b9fc5b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9fc4020"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9fc41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9fc4340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9fc44d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9fc4660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9fc47f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9fc4980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9fc4b10"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9fc4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b76b9fc02f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b76b9fc02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9fc0670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b76b9fc3020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b76b9fc3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9fc33a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9fc3530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9fc36c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9fc3850"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9fc39e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b76b9fc2b40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b76b9fc2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76b9fc1020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76b9fc11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9fc1340"/>
        <function-ref name="get" scoped="" ref="0x2b76b9fc14d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9fc1660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9fc17f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76b9fc1980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9fc1b10"/>
        <function-ref name="overflow" scoped="" ref="0x2b76b9fc1ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b76b9fc1e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76b9fc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b76b9fbb2f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b76b9fbb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9fbb670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9fbb800"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9fbb990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9fbbb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9fbbcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9fbbe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b76b9fbd220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b76b9fbd220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9fbd5a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9fbd730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9fbd8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9fbda50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9fbdbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9fbdd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9fbc020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9fbc1b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9fbc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b76b9fb97a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b76b9fb97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9fb9b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b76b9fbc610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b76b9fbc610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9fbc990"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9fbcb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9fbccb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9fbce40"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9fbb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b76b9fba160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b76b9fba160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76b9fba4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76b9fba670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9fba800"/>
        <function-ref name="get" scoped="" ref="0x2b76b9fba990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9fbab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9fbacb0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76b9fbae40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9fb9020"/>
        <function-ref name="overflow" scoped="" ref="0x2b76b9fb91b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b76b9fb9340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76b9fb94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b76b9fd77a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b76b9fd77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9fd7b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9fd7cb0"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9fd7e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9fd6020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9fd61b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9fd6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b76b9fd96d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b76b9fd96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9fd9a50"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9fd9be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9fd9d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9fd8020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9fd81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9fd8340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9fd84d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9fd8660"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9fd87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b76b9fd5c50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b76b9fd5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9fd4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b76b9fd8ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b76b9fd8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9fd8e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9fd7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9fd71b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9fd7340"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9fd74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b76b9fd6610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b76b9fd6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76b9fd6990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76b9fd6b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9fd6cb0"/>
        <function-ref name="get" scoped="" ref="0x2b76b9fd6e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9fd5020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9fd51b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76b9fd5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9fd54d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b76b9fd5660"/>
        <function-ref name="setMode" scoped="" ref="0x2b76b9fd57f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76b9fd5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b76b9fd0cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b76b9fd0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9fcf0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76b9fcf230"/>
        <function-ref name="captured" scoped="" ref="0x2b76b9fcf3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9fcf550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9fcf6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76b9fcf870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b76b9fd2b30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b76b9fd2b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76b9fd1020"/>
        <function-ref name="getControl" scoped="" ref="0x2b76b9fd11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9fd1340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76b9fd14d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76b9fd1660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9fd17f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76b9fd1980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76b9fd1b10"/>
        <function-ref name="setControl" scoped="" ref="0x2b76b9fd1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b76b9fcd2f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b76b9fcd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9fcd670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b76b9fd0020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b76b9fd0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76b9fd03a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76b9fd0530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76b9fd06c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76b9fd0850"/>
        <function-ref name="fired" scoped="" ref="0x2b76b9fd09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b76b9fcfb40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b76b9fcfb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76b9fce020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76b9fce1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76b9fce340"/>
        <function-ref name="get" scoped="" ref="0x2b76b9fce4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76b9fce660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76b9fce7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76b9fce980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76b9fceb10"/>
        <function-ref name="overflow" scoped="" ref="0x2b76b9fceca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b76b9fcee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76b9fcd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x2b76b9fea240" loc="7:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x2b76b9fea240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9fea5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x2b76b9fcba90" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x2b76b9fcba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9fcbe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x2b76b9feb260" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x2b76b9feb260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9feb5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x2b76b9feb9f0" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x2b76b9feb9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76b9febd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b76b9d3d510" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b76b9d3d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b76b9d3d890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b76b9a34760" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2b76b9a34760"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b76b9a34ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b76b9acacc0" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x2b76b9acacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b76b9b6f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x2b76b9e71b40" loc="39:../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b76b9e71b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b76ba002b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b76ba0021b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b76ba002340"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b76ba0024d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b76ba002020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b76ba002660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b76ba0027f0"/>
        <function-ref name="initClocks" scoped="" ref="0x2b76ba002980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b76ba01edc0" loc="60:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2b76ba01edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76ba01d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b76ba003590" loc="57:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b76ba003590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b76ba003910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b76ba01e6c0" loc="59:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x2b76ba01e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76ba01ea40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b76ba003c00" loc="58:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b76ba003c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76ba01e020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b76ba01e1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b76ba01e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b76b995a1d0" loc="48:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2b76b995a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76b995a550"/>
        <function-ref name="runTask" scoped="" ref="0x2b76b995a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b76b99c43a0" loc="47:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b76b99c43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76b99c4720"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b76b99c48b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b76b99c4a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b76b9e18320" loc="56:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2b76b9e18320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76b9e186a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b76b9e18830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b76b9e14990" loc="57:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2b76b9e14990"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b76b9e14d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b76b9e19420" loc="55:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b76b9e19420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76b9e197a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b76b9e19930"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b76b9e19ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b76ba02c660" loc="62:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b76ba02c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b76ba02c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b76ba02b020" loc="63:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2b76ba02b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b76ba02b3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b76ba02b530"/>
        <function-ref name="start" scoped="" ref="0x2b76ba02b6c0"/>
        <function-ref name="stop" scoped="" ref="0x2b76ba02b850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x2b76ba092e30" loc="67:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartReceive" scoped="" ref="0x2b76ba092e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76ba04b1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x2b76ba09cb40" loc="75:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioAMPacket" scoped="" ref="0x2b76ba09cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b76ba0c3020"/>
        <function-ref name="source" scoped="" ref="0x2b76ba0c31b0"/>
        <function-ref name="address" scoped="" ref="0x2b76ba0c3340"/>
        <function-ref name="destination" scoped="" ref="0x2b76ba0c34d0"/>
        <function-ref name="setSource" scoped="" ref="0x2b76ba0c3660"/>
        <function-ref name="setDestination" scoped="" ref="0x2b76ba0c37f0"/>
        <function-ref name="type" scoped="" ref="0x2b76ba0c3980"/>
        <function-ref name="setType" scoped="" ref="0x2b76ba0c3b10"/>
        <function-ref name="isForMe" scoped="" ref="0x2b76ba0c3ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b76ba0c3e30"/>
        <function-ref name="localGroup" scoped="" ref="0x2b76ba0c2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x2b76ba0b1410" loc="98:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="uartSendTask" scoped="" ref="0x2b76ba0b1410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76ba0b1790"/>
        <function-ref name="runTask" scoped="" ref="0x2b76ba0b1920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2b76ba02bbe0" loc="64:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x2b76ba02bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b76ba02a020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b76ba02a1b0"/>
        <function-ref name="start" scoped="" ref="0x2b76ba02a340"/>
        <function-ref name="stop" scoped="" ref="0x2b76ba02a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b76ba09dd70" loc="74:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x2b76ba09dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba09c180"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76ba09c310"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76ba09c4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76ba09c630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76ba09c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b76ba09fa50" loc="72:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x2b76ba09fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76ba09fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x2b76ba0d7360" loc="99:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="radioSendTask" scoped="" ref="0x2b76ba0d7360"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76ba0d76e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b76ba0d7870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b76ba0b60d0" loc="77:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76ba0b60d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76ba0b6550"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76ba0b66e0"/>
        <function-ref name="led1On" scoped="" ref="0x2b76ba0b6870"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76ba0b6a00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76ba0b6b90"/>
        <function-ref name="get" scoped="" ref="0x2b76ba0b6d20"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76ba0c1020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76ba0c1660"/>
        <function-ref name="set" scoped="" ref="0x2b76ba0c11b0"/>
        <function-ref name="led0On" scoped="" ref="0x2b76ba0c1340"/>
        <function-ref name="led2On" scoped="" ref="0x2b76ba0c14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x2b76ba089870" loc="68:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartPacket" scoped="" ref="0x2b76ba089870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba089bf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76ba089d80"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76ba099020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76ba0991b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76ba099340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b76ba08a6e0" loc="71:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x2b76ba08a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76ba08aa60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76ba08abf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76ba08ad80"/>
        <function-ref name="cancel" scoped="" ref="0x2b76ba09f020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76ba09f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x2b76ba04c020" loc="66:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartSend" scoped="" ref="0x2b76ba04c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76ba04c3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76ba04c530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76ba04c6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76ba04c850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76ba04c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x2b76ba0a09b0" loc="69:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartAMPacket" scoped="" ref="0x2b76ba0a09b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b76ba0a0d30"/>
        <function-ref name="source" scoped="" ref="0x2b76ba093020"/>
        <function-ref name="address" scoped="" ref="0x2b76ba0931b0"/>
        <function-ref name="destination" scoped="" ref="0x2b76ba093340"/>
        <function-ref name="setSource" scoped="" ref="0x2b76ba0934d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b76ba093660"/>
        <function-ref name="type" scoped="" ref="0x2b76ba0937f0"/>
        <function-ref name="setType" scoped="" ref="0x2b76ba093980"/>
        <function-ref name="isForMe" scoped="" ref="0x2b76ba093b10"/>
        <function-ref name="setGroup" scoped="" ref="0x2b76ba093ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b76ba093e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x2b76ba09d6b0" loc="73:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSnoop" scoped="" ref="0x2b76ba09d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76ba09da30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b76ba104020" loc="46:../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76ba104020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76ba1043a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76ba104530"/>
        <function-ref name="led1On" scoped="" ref="0x2b76ba1046c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76ba104850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76ba1049e0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba104b70"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76ba104d00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76ba1034d0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba103020"/>
        <function-ref name="led0On" scoped="" ref="0x2b76ba1031b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b76ba103340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b76ba125060" loc="50:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b76ba125060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1253e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba125570"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba125700"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba125890"/>
        <function-ref name="get" scoped="" ref="0x2b76ba125a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba125bb0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba125d40"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba124020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76ba128410" loc="46:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76ba128410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76ba128790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b76ba124340" loc="51:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b76ba124340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1246c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba124850"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1249e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba124b70"/>
        <function-ref name="get" scoped="" ref="0x2b76ba124d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba11f020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba11f1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba11f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b76ba128a10" loc="47:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76ba128a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76ba128d90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76ba127020"/>
        <function-ref name="led1On" scoped="" ref="0x2b76ba1271b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76ba127340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76ba1274d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba127660"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76ba1277f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76ba127e30"/>
        <function-ref name="set" scoped="" ref="0x2b76ba127980"/>
        <function-ref name="led0On" scoped="" ref="0x2b76ba127b10"/>
        <function-ref name="led2On" scoped="" ref="0x2b76ba127ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b76ba11f660" loc="52:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b76ba11f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba11f9e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba11fb70"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba11fd00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba11e020"/>
        <function-ref name="get" scoped="" ref="0x2b76ba11e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba11e340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba11e4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba11e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b76ba100ae0" loc="41:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b76ba100ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba100e60"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba12d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba12d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba12d340"/>
        <function-ref name="get" scoped="" ref="0x2b76ba12d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba12d660"/>
        <function-ref name="set" scoped="" ref="0x2b76ba12d7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba12d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b76ba12dce0" loc="42:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b76ba12dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba12c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba12c230"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba12c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba12c550"/>
        <function-ref name="get" scoped="" ref="0x2b76ba12c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba12c870"/>
        <function-ref name="set" scoped="" ref="0x2b76ba12ca00"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba12cb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b76ba12a2e0" loc="44:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76ba12a2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76ba12a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b76ba12b020" loc="43:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b76ba12b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba12b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba12b530"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba12b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba12b850"/>
        <function-ref name="get" scoped="" ref="0x2b76ba12b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba12bb70"/>
        <function-ref name="set" scoped="" ref="0x2b76ba12bd00"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba12a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b76ba13e810" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b76ba13e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba13eb90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba13ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba167020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1671b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba167340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1674d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba167660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1677f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba167980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba167b10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba167ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba167e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba166020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1662b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba166440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b76ba154810" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b76ba154810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba154b90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba154d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba153020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1531b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba153340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1534d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba153660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1537f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba153980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba153b10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba153ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba153e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba17c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba17c2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba17c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x2b76ba1b3ca0" loc="145:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x2b76ba1b3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1b20a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1b2230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1b23c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1b2550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1b26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1b2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1b2a00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1b2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1b2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1b1020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1b11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1b1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1b14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1b1760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1b18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x2b76ba1e7cb0" loc="165:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x2b76ba1e7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1e50a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1e5230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1e53c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1e5550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1e56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1e5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1e5a00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1e5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1e5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1e4020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1e41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1e4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1e44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1e4760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1e48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x2b76ba1b1cc0" loc="146:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x2b76ba1b1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1b00a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1b0230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1b03c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1b0550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1b06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1b0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1b0a00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1b0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1b0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1af020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1af1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1af340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1af4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1af760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1af8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x2b76ba17a810" loc="71:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x2b76ba17a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba17ab90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba17ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba179020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1791b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba179340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1794d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba179660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1797f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba179980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba179b10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba179ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba179e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba178020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1782b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba178440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x2b76ba18f9a0" loc="84:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x2b76ba18f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba18fd20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba18e020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba18e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba18e340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba18e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba18e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba18e7f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba18e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba18eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba18eca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba18ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba18d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba18d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba18d440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba18d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x2b76ba1a59a0" loc="97:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x2b76ba1a59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1a5d20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1a4020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1a41b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1a4340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1a44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1a4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1a47f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1a4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1a4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1a4ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1a4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1a3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1a31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1a3440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1a35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x2b76ba1959a0" loc="108:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2b76ba1959a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba195d20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba194020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1941b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba194340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1944d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba194660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1947f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba194980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba194b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba194ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba194e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba193020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1931b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba193440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1935d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x2b76ba1abcc0" loc="149:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x2b76ba1abcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1aa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1aa230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1aa3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1aa550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1aa6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1aa870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1aaa00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1aab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1aad20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1a9020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1a91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1a9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1a94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1a9760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1a98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x2b76ba1c7cb0" loc="159:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x2b76ba1c7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1c60a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1c6230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1c63c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1c6550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1c66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1c6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1c6a00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1c6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1c6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1c5020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1c51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1c5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1c54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1c5760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1c58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x2b76ba1decc0" loc="171:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x2b76ba1decc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1dd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1dd230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1dd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1dd550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1dd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1dd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1dda00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1ddb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1ddd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1dc020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1dc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1dc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1dc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1dc760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1dc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b76ba162810" loc="56:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b76ba162810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba162b90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba162d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba161020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1611b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba161340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1614d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba161660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1617f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba161980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba161b10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba161ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba161e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba160020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1602b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba160440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x2b76ba1a9cc0" loc="150:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x2b76ba1a9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1a80a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1a8230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1a83c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1a8550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1a86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1a8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1a8a00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1a8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1a8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1a7020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1a71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1a7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1a74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1a7760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1a78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b76ba15e810" loc="61:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b76ba15e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba15eb90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba15ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba15d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba15d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba15d340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba15d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba15d660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba15d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba15d980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba15db10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba15dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba15de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba15c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba15c2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba15c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x2b76ba174810" loc="74:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x2b76ba174810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba174b90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba174d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba173020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba173340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba173660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1737f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba173980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba173b10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba173ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba173e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba172020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1722b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba172440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x2b76ba1899a0" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x2b76ba1899a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba189d20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba188020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1881b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba188340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1884d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba188660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1887f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba188980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba188b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba188ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba188e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba187020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1871b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba187440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1875d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x2b76ba19f9a0" loc="100:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x2b76ba19f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba19fd20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba19e020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba19e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba19e340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba19e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba19e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba19e7f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba19e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba19eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba19eca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba19ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba19d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba19d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba19d440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba19d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x2b76ba1b99a0" loc="111:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2b76ba1b99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1b9d20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1b8020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1b81b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1b8340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1b84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1b8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1b87f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1b8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1b8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1b8ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1b8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1b7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1b71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1b7440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1b75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b76ba142810" loc="51:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b76ba142810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba142b90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba142d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba141020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1411b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba141340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1414d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba141660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1417f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba141980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba141b10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba141ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba141e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba140020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1402b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba140440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b76ba158810" loc="64:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b76ba158810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba158c90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba158e20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba157020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1571b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba157340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1574d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba157660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1577f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba157980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba157b10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba157ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba157e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba156020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1562b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba156440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x2b76ba16e810" loc="77:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x2b76ba16e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba16eb90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba16ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba16c020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba16c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba16c340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba16c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba16c660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba16c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba16c980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba16cb10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba16cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba16ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba16b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba16b2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba16b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x2b76ba1b5cc0" loc="144:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x2b76ba1b5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1b40a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1b4230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1b43c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1b4550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1b46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1b4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1b4a00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1b4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1b4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1b3020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1b31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1b3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1b34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1b3760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1b38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x2b76ba1c1cb0" loc="162:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x2b76ba1c1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1c00a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1c0230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1c03c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1c0550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1c06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1c0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1c0a00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1c0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1c0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1bf020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1bf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1bf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1bf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1bf760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1bf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x2b76ba1e0cb0" loc="169:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x2b76ba1e0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1df0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1df230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1df3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1df550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1df6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1df870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1dfa00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1dfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1dfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1de020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1de1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1de340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1de4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1de760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1de8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x2b76ba1cdcc0" loc="155:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x2b76ba1cdcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1cc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1cc230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1cc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1cc550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1cc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1cc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1cca00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1ccb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1ccd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1cb020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1cb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1cb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1cb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1cb760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1cb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x2b76ba169810" loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x2b76ba169810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba169d90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba168020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1681b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba168340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1684d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba168660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1687f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba168980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba168b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba168ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba168e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba191020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1911b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba191440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1915d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x2b76ba17f9a0" loc="95:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x2b76ba17f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba17fd20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba17e020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba17e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba17e340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba17e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba17e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba17e7f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba17e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba17eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba17eca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba17ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba17d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba17d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba17d440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba17d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x2b76ba1999a0" loc="106:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2b76ba1999a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba199d20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba198020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1981b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba198340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1984d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba198660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1987f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba198980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba198b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba198ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba198e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba197020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1971b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba197440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1975d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x2b76ba1bfcb0" loc="163:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x2b76ba1bfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1be0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1be230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1be3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1be550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1be6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1be870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1bea00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1beb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1bed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1bd020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1bd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1bd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1bd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1bd760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1bd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x2b76ba1a7cb0" loc="152:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x2b76ba1a7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1d20a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1d2230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1d23c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1d2550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1d26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1d2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1d2a00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1d2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1d2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1d1020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1d11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1d1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1d14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1d1760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1d18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b76ba166810" loc="54:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b76ba166810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba166b90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba166d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba165020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1651b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba165340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1654d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba165660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1657f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba165980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba165b10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba165ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba165e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba164020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1642b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba164440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b76ba17c810" loc="67:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b76ba17c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba17cb90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba17cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba17b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba17b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba17b340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba17b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba17b660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba17b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba17b980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba17bb10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba17bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba17be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba17a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba17a2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba17a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x2b76ba19d9a0" loc="104:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2b76ba19d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba19dd20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba19c020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba19c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba19c340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba19c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba19c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba19c7f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba19c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba19cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba19cca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba19ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba19b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba19b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba19b440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba19b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x2b76ba178810" loc="72:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x2b76ba178810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba178b90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba178d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba177020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba177340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba177660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1777f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba177980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba177b10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba177ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba177e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba176020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1762b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba176440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x2b76ba18d9a0" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x2b76ba18d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba18dd20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba18c020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba18c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba18c340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba18c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba18c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba18c7f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba18c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba18cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba18cca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba18ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba18b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba18b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba18b440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba18b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x2b76ba1a39a0" loc="98:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x2b76ba1a39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1a3d20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1a2020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1a21b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1a2340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1a24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1a2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1a27f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1a2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1a2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1a2ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1a2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1a1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1a11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1a1440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1a15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x2b76ba1939a0" loc="109:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2b76ba1939a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba193d20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1bc020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1bc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1bc340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1bc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1bc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1bc7f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1bc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1bcb10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1bcca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1bce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1bb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1bb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1bb440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1bb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x2b76ba1cfcc0" loc="154:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x2b76ba1cfcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1ce0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1ce230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1ce3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1ce550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1ce6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1ce870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1cea00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1ceb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1ced20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1cd020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1cd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1cd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1cd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1cd760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1cd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b76ba145870" loc="49:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b76ba145870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba145bf0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba145d80"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba14f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba14f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba14f340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba14f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba14f660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba14f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba14f980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba14fb10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba14fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba14fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba14e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba14e2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba14e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b76ba15c810" loc="62:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b76ba15c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba15cb90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba15cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba15b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba15b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba15b340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba15b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba15b660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba15b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba15b980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba15bb10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba15bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba15be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba15a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba15a2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba15a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x2b76ba172810" loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x2b76ba172810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba172b90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba172d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba171020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1711b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba171340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1714d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba171660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1717f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba171980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba171b10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba171ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba171e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba170020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1702b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba170440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x2b76ba1879a0" loc="88:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x2b76ba1879a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba187d20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba186020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1861b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba186340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1864d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba186660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1867f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba186980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba186b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba186ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba186e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba185020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1851b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba185440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1855d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x2b76ba1cbcc0" loc="156:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x2b76ba1cbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1ca0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1ca230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1ca3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1ca550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1ca6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1ca870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1caa00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1cab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1cad20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1c9020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1c91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1c9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1c94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1c9760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1c98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x2b76ba1c5cb0" loc="160:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x2b76ba1c5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1c40a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1c4230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1c43c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1c4550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1c46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1c4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1c4a00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1c4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1c4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1c3020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1c31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1c3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1c34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1c3760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1c38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x2b76ba1e4cb0" loc="166:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x2b76ba1e4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1e30a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1e3230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1e33c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1e3550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1e36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1e3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1e3a00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1e3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1e3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1e2020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1e21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1e2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1e24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1e2760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1e28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x2b76ba1839a0" loc="93:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x2b76ba1839a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba183d20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba182020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1821b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba182340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1824d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba182660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1827f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba182980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba182b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba182ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba182e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba181020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1811b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba181440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1815d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x2b76ba1c9cc0" loc="157:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x2b76ba1c9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1c80a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1c8230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1c83c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1c8550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1c86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1c8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1c8a00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1c8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1c8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1c7020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1c71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1c7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1c74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1c7760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1c78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b76ba140810" loc="52:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b76ba140810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba140b90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba140d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba13f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba13f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba13f340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba13f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba13f660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba13f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba13f980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba13fb10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba13fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba13fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba13e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba13e2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba13e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b76ba156810" loc="65:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b76ba156810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba156b90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba156d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba155020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1551b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba155340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1554d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba155660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1557f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba155980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba155b10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba155ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba155e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba154020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1542b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba154440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x2b76ba16b810" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x2b76ba16b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba16bb90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba16bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba16a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba16a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba16a340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba16a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba16a660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba16a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba16a980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba16ab10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba16aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba16ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba169020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1692b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba169440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x2b76ba1d1cc0" loc="153:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x2b76ba1d1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1d00a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1d0230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1d03c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1d0550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1d06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1d0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1d0a00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1d0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1d0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1cf020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1cf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1cf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1cf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1cf760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1cf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x2b76ba1bdcb0" loc="164:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x2b76ba1bdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1e80a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1e8230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1e83c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1e8550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1e86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1e8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1e8a00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1e8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1e8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1e7020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1e71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1e7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1e74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1e7760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1e78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x2b76ba1919a0" loc="83:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x2b76ba1919a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba191d20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba190020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1901b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba190340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1904d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba190660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1907f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba190980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba190b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba190ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba190e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba18f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba18f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba18f440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba18f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x2b76ba17d9a0" loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x2b76ba17d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba17dd20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1a6020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1a61b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1a6340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1a64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1a6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1a67f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1a6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1a6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1a6ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1a6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1a5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1a51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1a5440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1a55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x2b76ba1979a0" loc="107:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2b76ba1979a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba197d20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba196020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1961b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba196340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1964d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba196660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1967f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba196980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba196b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba196ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba196e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba195020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1951b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba195440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1955d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b76ba164810" loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b76ba164810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba164b90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba164d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba163020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1631b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba163340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1634d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba163660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1637f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba163980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba163b10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba163ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba163e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba162020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1622b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba162440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x2b76ba19b9a0" loc="105:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2b76ba19b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba19bd20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba19a020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba19a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba19a340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba19a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba19a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba19a7f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba19a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba19ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba19aca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba19ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba199020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1991b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba199440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1995d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b76ba160810" loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b76ba160810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba160b90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba160d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba15f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba15f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba15f340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba15f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba15f660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba15f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba15f980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba15fb10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba15fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba15fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba15e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba15e2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba15e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x2b76ba176810" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x2b76ba176810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba176b90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba176d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba175020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1751b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba175340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1754d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba175660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1757f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba175980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba175b10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba175ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba175e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba174020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1742b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba174440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x2b76ba18b9a0" loc="86:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x2b76ba18b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba18bd20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba18a020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba18a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba18a340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba18a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba18a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba18a7f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba18a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba18ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba18aca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba18ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba189020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1891b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba189440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1895d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x2b76ba1a19a0" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x2b76ba1a19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1a1d20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1a0020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1a01b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1a0340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1a04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1a0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1a07f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1a0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1a0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1a0ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1a0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba19f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba19f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba19f440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba19f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x2b76ba1bb9a0" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2b76ba1bb9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1bbd20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1ba020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1ba1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1ba340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1ba4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1ba660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1ba7f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1ba980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1bab10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1baca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1bae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1b9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1b91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1b9440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1b95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b76ba14e810" loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b76ba14e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba14eb90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba14ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba143020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1431b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba143340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1434d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba143660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1437f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba143980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba143b10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba143ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba143e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba142020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1422b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba142440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b76ba15a810" loc="63:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b76ba15a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba15ab90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba15ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba159020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1591b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba159340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1594d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba159660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1597f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba159980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba159b10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba159ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba159e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba158020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1582b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba158440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x2b76ba170810" loc="76:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x2b76ba170810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba170b90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba170d20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba16f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba16f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba16f340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba16f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba16f660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba16f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba16f980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba16fb10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba16fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba16fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba16e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba16e2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba16e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x2b76ba1859a0" loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x2b76ba1859a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba185d20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba184020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1841b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba184340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1844d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba184660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1847f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba184980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba184b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba184ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba184e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba183020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1831b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba183440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1835d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x2b76ba1adca0" loc="148:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x2b76ba1adca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1ac0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1ac230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1ac3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1ac550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1ac6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1ac870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1aca00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1acb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1acd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1ab020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1ab1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1ab340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1ab4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1ab760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1ab8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x2b76ba1c3cb0" loc="161:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x2b76ba1c3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1c20a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1c2230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1c23c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1c2550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1c26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1c2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1c2a00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1c2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1c2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1c1020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1c11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1c1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1c14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1c1760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1c18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x2b76ba1afcc0" loc="147:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x2b76ba1afcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1ae0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1ae230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1ae3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1ae550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1ae6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1ae870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1aea00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1aeb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1aed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1ad020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1ad1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1ad340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1ad4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1ad760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1ad8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x2b76ba1819a0" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x2b76ba1819a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba181d20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba180020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1801b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba180340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1804d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba180660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1807f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba180980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba180b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba180ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba180e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba17f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba17f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba17f440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba17f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x2b76ba1e2cb0" loc="168:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x2b76ba1e2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1e10a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1e1230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1e13c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1e1550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1e16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1e1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1e1a00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1e1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1e1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1e0020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1e01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1e0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1e04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1e0760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1e08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x2b76ba1dccc0" loc="172:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x2b76ba1dccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1db0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1db230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1db3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1db550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1db6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1db870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1dba00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1dbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1dbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1da020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1da1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1da340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1da4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1da760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1da8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x2b76ba1b79f0" loc="143:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x2b76ba1b79f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1b61c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1b6350"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1b64e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1b6670"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1b6800"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1b6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1b6b20"/>
        <function-ref name="get" scoped="" ref="0x2b76ba1b6cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba1b6e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba1b5020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba1b51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba1b5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba1b54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba1b5760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba1b58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba1d7d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba1d7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2080e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba208270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba208400"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba208590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba208720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2088b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba208a40"/>
        <function-ref name="get" scoped="" ref="0x2b76ba208bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba208d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba207020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2071b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba207340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2074d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba207760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2078f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba204740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba204740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba204ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba204c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba204de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba203020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2031b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba203340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2034d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba203660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2037f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba203980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba203b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba203ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba203e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba202120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2022b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba1ff100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba1ff100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba1ff480"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba1ff610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba1ff7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba1ff930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba1ffac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba1ffc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba1ffde0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba22b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba22b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba22b340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba22b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba22b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba22b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba22ba80"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba22bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba228d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba228d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2270e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba227270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba227400"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba227590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba227720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2278b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba227a40"/>
        <function-ref name="get" scoped="" ref="0x2b76ba227bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba227d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba226020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2261b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba226340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2264d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba226760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2268f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba223740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba223740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba223ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba223c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba223de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba222020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2221b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba222340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2224d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba222660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2227f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba222980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba222b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba222ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba222e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba221120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2212b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba21d100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba21d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba21d480"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba21d610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba21d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba21d930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba21dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba21dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba21dde0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba21c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba21c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba21c340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba21c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba21c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba21c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba21ca80"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba21cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba219d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba219d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2180e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba218270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba218400"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba218590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba218720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2188b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba218a40"/>
        <function-ref name="get" scoped="" ref="0x2b76ba218bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba218d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba217020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2171b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba217340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2174d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba217760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2178f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba242740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba242740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba242ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba242c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba242de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba241020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2411b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba241340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2414d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba241660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2417f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba241980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba241b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba241ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba241e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba240120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2402b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba23d100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba23d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba23d480"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba23d610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba23d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba23d930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba23dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba23dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba23dde0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba23c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba23c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba23c340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba23c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba23c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba23c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba23ca80"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba23cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba239d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba239d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2380e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba238270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba238400"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba238590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba238720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2388b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba238a40"/>
        <function-ref name="get" scoped="" ref="0x2b76ba238bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba238d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba237020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2371b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba237340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2374d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba237760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2378f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba234740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba234740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba234ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba234c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba234de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba233020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2331b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba233340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2334d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba233660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2337f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba233980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba233b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba233ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba233e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba232120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2322b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba22f100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba22f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba22f480"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba22f610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba22f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba22f930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba22fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba22fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba22fde0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba22e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba22e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba22e340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba22e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba22e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba22e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba22ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba22ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba259d80" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba259d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba257180"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba257310"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2574a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba257630"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2577c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba257950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba257ae0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba257c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba257e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba256020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2561b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba256340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2564d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba256760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2568f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba253740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba253740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba253ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba253c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba253de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba252020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2521b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba252340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2524d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba252660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2527f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba252980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba252b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba252ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba252e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba251120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2512b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba24e100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba24e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba24e480"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba24e610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba24e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba24e930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba24eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba24ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba24ede0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba24d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba24d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba24d340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba24d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba24d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba24d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba24da80"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba24dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba24ad10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba24ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2490e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba249270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba249400"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba249590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba249720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2498b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba249a40"/>
        <function-ref name="get" scoped="" ref="0x2b76ba249bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba249d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba248020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2481b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba248340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2484d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba248760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2488f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba245740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba245740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba245ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba245c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba245de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba244020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2441b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba244340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2444d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba244660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2447f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba244980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba244b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba244ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba244e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba243120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2432b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba26e100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba26e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba26e480"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba26e610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba26e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba26e930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba26eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba26ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba26ede0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba26d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba26d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba26d340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba26d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba26d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba26d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba26da80"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba26dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba26ad10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba26ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2690e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba269270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba269400"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba269590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba269720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2698b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba269a40"/>
        <function-ref name="get" scoped="" ref="0x2b76ba269bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba269d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba268020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2681b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba268340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2684d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba268760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2688f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba265740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba265740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba265ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba265c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba265de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba264020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2641b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba264340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2644d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba264660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2647f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba264980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba264b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba264ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba264e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba263120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2632b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba260100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba260100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba260480"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba260610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2607a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba260930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba260ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba260c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba260de0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba25e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba25e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba25e340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba25e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba25e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba25e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba25ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba25ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba25bd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba25bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba25a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba25a270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba25a400"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba25a590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba25a720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba25a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba25aa40"/>
        <function-ref name="get" scoped="" ref="0x2b76ba25abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba25ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba287020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2871b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba287340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2874d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba287760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2878f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba284740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba284740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba284ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba284c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba284de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba283020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2831b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba283340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2834d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba283660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2837f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba283980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba283b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba283ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba283e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba282120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2822b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba27f100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba27f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba27f480"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba27f610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba27f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba27f930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba27fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba27fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba27fde0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba27e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba27e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba27e340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba27e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba27e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba27e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba27ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba27ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba27be60" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba27be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba27a210"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba27a3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba27a530"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba27a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba27a850"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba27a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba27ab70"/>
        <function-ref name="get" scoped="" ref="0x2b76ba27ad00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba279020"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2791b0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba279340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2794d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba279660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2798f0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba279a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2769f0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2769f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba276d70"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba275020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2751b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba275340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2754d0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba275660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2757f0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba275980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba275b10"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba275ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba275e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba274020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2741b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba274440"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2745d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba271460" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba271460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2717e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba271970"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba271b00"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba271c90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba271e20"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba29e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba29e1b0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba29e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba29e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba29e660"/>
        <function-ref name="set" scoped="" ref="0x2b76ba29e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba29e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba29eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba29eda0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba29d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba29be00" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba29be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba29a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba29a350"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba29a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba29a670"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba29a800"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba29a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba29ab20"/>
        <function-ref name="get" scoped="" ref="0x2b76ba29acb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba29ae40"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba299020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2991b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba299340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2994d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba299760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2998f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba295740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba295740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba295ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba295c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba295de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba294020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2941b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba294340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2944d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba294660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2947f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba294980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba294b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba294ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba294e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba293120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2932b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba290100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba290100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba290480"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba290610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2907a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba290930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba290ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba290c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba290de0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba28f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba28f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba28f340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba28f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba28f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba28f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba28fa80"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba28fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba28cd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba28cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba28b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba28b270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba28b400"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba28b590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba28b720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba28b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba28ba40"/>
        <function-ref name="get" scoped="" ref="0x2b76ba28bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba28bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba28a020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba28a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba28a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba28a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba28a760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba28a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2b6740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2b6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2b6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba2b6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2b6de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba2b5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2b51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2b5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2b54d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba2b5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2b57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2b5980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2b5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2b5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2b5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2b4120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2b42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2b1100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2b1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2b1480"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba2b1610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2b17a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba2b1930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2b1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2b1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2b1de0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba2b0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2b01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2b0340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2b04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2b0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2b07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2b0a80"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2b0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2add10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2add10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2ac0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba2ac270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2ac400"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba2ac590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2ac720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2ac8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2aca40"/>
        <function-ref name="get" scoped="" ref="0x2b76ba2acbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2acd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2ab020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2ab1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2ab340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2ab4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2ab760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2ab8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2a8740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2a8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2a8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba2a8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2a8de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba2a7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2a71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2a7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2a74d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba2a7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2a77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2a7980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2a7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2a7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2a7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2a6120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2a62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2a3100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2a3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2a3480"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba2a3610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2a37a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba2a3930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2a3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2a3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2a3de0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba2a1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2a11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2a1340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2a14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2a1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2a17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2a1a80"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2a1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2ced10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2ced10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2cd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba2cd270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2cd400"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba2cd590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2cd720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2cd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2cda40"/>
        <function-ref name="get" scoped="" ref="0x2b76ba2cdbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2cdd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2cc020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2cc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2cc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2cc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2cc760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2cc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2c9740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2c9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2c9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba2c9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2c9de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba2c8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2c81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2c8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2c84d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba2c8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2c87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2c8980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2c8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2c8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2c8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2c7120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2c72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2c4100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2c4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2c4480"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba2c4610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2c47a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba2c4930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2c4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2c4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2c4de0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba2c3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2c31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2c3340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2c34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2c3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2c37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2c3a80"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2c3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2c0d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2c0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2bf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba2bf270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2bf400"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba2bf590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2bf720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2bf8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2bfa40"/>
        <function-ref name="get" scoped="" ref="0x2b76ba2bfbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2bfd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2be020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2be1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2be340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2be4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2be760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2be8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2bb740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2bb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2bbac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba2bbc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2bbde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba2ba020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2ba1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2ba340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2ba4d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba2ba660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2ba7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2ba980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2bab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2baca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2bae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2b9120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2b92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2e6100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2e6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2e6480"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba2e6610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2e67a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba2e6930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2e6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2e6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2e6de0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba2e5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2e51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2e5340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2e54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2e5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2e57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2e5a80"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2e5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2e2d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2e2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2e10e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba2e1270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2e1400"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba2e1590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2e1720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2e18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2e1a40"/>
        <function-ref name="get" scoped="" ref="0x2b76ba2e1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2e1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2e0020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2e01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2e0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2e04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2e0760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2e08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2dd740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2dd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2ddac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba2ddc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2ddde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba2db020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2db1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2db340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2db4d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba2db660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2db7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2db980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2dbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2dbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2dbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2da120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2da2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2d7100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2d7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2d7480"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba2d7610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2d77a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba2d7930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2d7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2d7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2d7de0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba2d6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2d61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2d6340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2d64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2d6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2d67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2d6a80"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2d6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2d3d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2d3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2d20e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba2d2270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2d2400"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba2d2590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2d2720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2d28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2d2a40"/>
        <function-ref name="get" scoped="" ref="0x2b76ba2d2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2d2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2d1020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2d11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2d1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2d14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2d1760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2d18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2fe740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2fe740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2feac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba2fec50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2fede0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba2fd020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2fd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2fd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2fd4d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba2fd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2fd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2fd980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2fdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2fdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2fde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2fc120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2fc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b76ba2f9100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b76ba2f9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba2f9480"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba2f9610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba2f97a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba2f9930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba2f9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba2f9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba2f9de0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba2f8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba2f81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba2f8340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba2f84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba2f8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba2f87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba2f8a80"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba2f8c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b76ba36c2f0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba36c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba36c670"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba36c800"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba36c990"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba36cb20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba36ccb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba36ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba36b020"/>
        <function-ref name="get" scoped="" ref="0x2b76ba36b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba36b340"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba36b4d0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba36b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba36b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba36b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba36bc10"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba36bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b76ba34b020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba34b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba34b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba34b530"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba34b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba34b850"/>
        <function-ref name="get" scoped="" ref="0x2b76ba34b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba34bb70"/>
        <function-ref name="set" scoped="" ref="0x2b76ba34bd00"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba36c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b76ba368de0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba368de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba366180"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba366310"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba3664a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba366630"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba3667c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba366950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba366ae0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba366c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba366e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba365020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba3651b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba365340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba3654d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba365760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba3658f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b76ba369b90" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba369b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba368020"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba3681b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba368340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba3684d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba368660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba3687f0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba368980"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba368b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b76ba362930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba362930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba362cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba362e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba361020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba3611b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba361340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba3614d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba361660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba3617f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba361980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba361b10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba361ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba361e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba360020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba3602b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba360440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b76ba363710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba363710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba363a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba363c20"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba363db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba362020"/>
        <function-ref name="get" scoped="" ref="0x2b76ba3621b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba362340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba3624d0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba362660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b76ba3837b0" loc="61:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b76ba3837b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b76ba383b30"/>
        <function-ref name="stopDone" scoped="" ref="0x2b76ba383cc0"/>
        <function-ref name="start" scoped="" ref="0x2b76ba383e50"/>
        <function-ref name="stop" scoped="" ref="0x2b76ba381020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b76ba3817f0" loc="63:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b76ba3817f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76ba381b70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76ba381d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76ba380020"/>
        <function-ref name="cancel" scoped="" ref="0x2b76ba3801b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76ba380340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b76ba37f880" loc="65:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b76ba37f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76ba37fc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b76ba37e020" loc="67:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b76ba37e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba37e3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76ba37e530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76ba37e6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76ba37e850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76ba37e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b76ba375310" loc="70:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b76ba375310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b76ba3a6880"/>
        <function-ref name="clear" scoped="" ref="0x2b76ba39e020"/>
        <function-ref name="isValid" scoped="" ref="0x2b76ba3a6150"/>
        <function-ref name="set" scoped="" ref="0x2b76ba39e750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b76ba3915b0" loc="72:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b76ba3915b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b76ba391930"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b76ba391ac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b76ba391c50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b76ba391de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b76ba380b20" loc="64:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b76ba380b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76ba37f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b76ba37b020" loc="69:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76ba37b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b76ba37b3a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b76ba37b530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b76ba37b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b76ba37ec90" loc="68:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b76ba37ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b76ba37d0a0"/>
        <function-ref name="source" scoped="" ref="0x2b76ba37d230"/>
        <function-ref name="address" scoped="" ref="0x2b76ba37d3c0"/>
        <function-ref name="destination" scoped="" ref="0x2b76ba37d550"/>
        <function-ref name="setSource" scoped="" ref="0x2b76ba37d6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b76ba37d870"/>
        <function-ref name="type" scoped="" ref="0x2b76ba37da00"/>
        <function-ref name="setType" scoped="" ref="0x2b76ba37db90"/>
        <function-ref name="isForMe" scoped="" ref="0x2b76ba37dd20"/>
        <function-ref name="setGroup" scoped="" ref="0x2b76ba37c020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b76ba37c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b76ba39d3f0" loc="71:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b76ba39d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b76ba39c970"/>
        <function-ref name="clear" scoped="" ref="0x2b76ba39a0d0"/>
        <function-ref name="isValid" scoped="" ref="0x2b76ba39c240"/>
        <function-ref name="set" scoped="" ref="0x2b76ba39a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b76ba3b82f0" loc="55:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b76ba3b82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b76ba3b8670"/>
        <function-ref name="stopDone" scoped="" ref="0x2b76ba3b8800"/>
        <function-ref name="start" scoped="" ref="0x2b76ba3b8990"/>
        <function-ref name="stop" scoped="" ref="0x2b76ba3b8b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b76ba3b02c0" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b76ba3b02c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b76ba3b0640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b76ba3b07d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b76ba3b0960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b76ba3b0af0"/>
        <function-ref name="setCca" scoped="" ref="0x2b76ba3b0c80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b76ba3b0e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b76ba3d01d0" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2b76ba3d01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b76ba3d0650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b76ba3b2020" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b76ba3b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba3b23a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76ba3b2530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76ba3b26c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76ba3b2850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76ba3b29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b76ba3b7320" loc="56:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b76ba3b7320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76ba3b76a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76ba3b7830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76ba3b79c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76ba3b7b50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76ba3b7ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b76ba3b41d0" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b76ba3b41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76ba3b4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b76ba3a80f0" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b76ba3a80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b76ba3a8470"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b76ba3a8600"/>
        <function-ref name="getRssi" scoped="" ref="0x2b76ba3a8790"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b76ba3a8920"/>
        <function-ref name="getPower" scoped="" ref="0x2b76ba3a8ab0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b76ba3a8c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b76ba3a7170" loc="65:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b76ba3a7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b76ba3a74f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b76ba3a7680"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b76ba3a7810"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b76ba3a79a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b76ba3b5510" loc="57:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b76ba3b5510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76ba3b5890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b76ba3b1020" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76ba3b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b76ba3b13a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b76ba3b1530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b76ba3b16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b76ba3c7430" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b76ba3c7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b76ba3c77b0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b76ba3c7940"/>
        <function-ref name="getRetries" scoped="" ref="0x2b76ba3c7ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b76ba3c7c60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b76ba3c7df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b76ba3b4800" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b76ba3b4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b76ba3b4b80"/>
        <function-ref name="source" scoped="" ref="0x2b76ba3b4d10"/>
        <function-ref name="address" scoped="" ref="0x2b76ba3b3020"/>
        <function-ref name="destination" scoped="" ref="0x2b76ba3b31b0"/>
        <function-ref name="setSource" scoped="" ref="0x2b76ba3b3340"/>
        <function-ref name="setDestination" scoped="" ref="0x2b76ba3b34d0"/>
        <function-ref name="type" scoped="" ref="0x2b76ba3b3660"/>
        <function-ref name="setType" scoped="" ref="0x2b76ba3b37f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b76ba3b3980"/>
        <function-ref name="setGroup" scoped="" ref="0x2b76ba3b3b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2b76ba3b3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b76ba3d8170" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b76ba3d8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b76ba3d84f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b76ba3c2020" loc="43:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b76ba3c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b76ba3c23a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b76ba3c2530"/>
        <function-ref name="start" scoped="" ref="0x2b76ba3c26c0"/>
        <function-ref name="stop" scoped="" ref="0x2b76ba3c2850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b76ba3e39d0" loc="55:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b76ba3e39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b76ba3e3d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b76ba3e2b70" loc="57:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b76ba3e2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b76ba3e1020"/>
        <function-ref name="setRetries" scoped="" ref="0x2b76ba3e11b0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b76ba3e1340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b76ba3e14d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b76ba3e1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b76ba3e4020" loc="53:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b76ba3e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b76ba3e43a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b76ba3e4530"/>
        <function-ref name="getRssi" scoped="" ref="0x2b76ba3e46c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b76ba3e4850"/>
        <function-ref name="getPower" scoped="" ref="0x2b76ba3e49e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b76ba3e4b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b76ba3eea70" loc="50:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b76ba3eea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76ba3eedf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76ba3e7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76ba3e71b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76ba3e7340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76ba3e74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b76ba3e2080" loc="56:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b76ba3e2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b76ba3e2400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b76ba3e2590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b76ba3e2720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b76ba3e28b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b76ba3ef690" loc="47:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2b76ba3ef690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76ba3efa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b76ba3e3020" loc="54:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76ba3e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b76ba3e33a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b76ba3e3530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b76ba3e36c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76ba3c1530" loc="45:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76ba3c1530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76ba3c18b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76ba3c1a40"/>
        <function-ref name="request" scoped="" ref="0x2b76ba3c1bd0"/>
        <function-ref name="granted" scoped="" ref="0x2b76ba3c1d60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76ba3f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b76ba3e6940" loc="46:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2b76ba3e6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76ba3e6cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76ba3e6e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76ba3ef020"/>
        <function-ref name="cancel" scoped="" ref="0x2b76ba3ef1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76ba3ef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b76ba3efd50" loc="48:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b76ba3efd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba3ee100"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76ba3ee290"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76ba3ee420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76ba3ee5b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76ba3ee740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b76ba3e7840" loc="51:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b76ba3e7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76ba3e7bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b76ba3de390" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b76ba3de390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b76ba3de710"/>
        <function-ref name="stopDone" scoped="" ref="0x2b76ba3de8a0"/>
        <function-ref name="start" scoped="" ref="0x2b76ba3dea30"/>
        <function-ref name="stop" scoped="" ref="0x2b76ba3debc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b76ba3dc330" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b76ba3dc330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b76ba3dc6b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b76ba3dc840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b76ba3dc9d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b76ba3dcb60"/>
        <function-ref name="setCca" scoped="" ref="0x2b76ba3dccf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b76ba3dce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b76ba3dee80" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b76ba3dee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76ba3dd220"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76ba3dd3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76ba3dd540"/>
        <function-ref name="cancel" scoped="" ref="0x2b76ba3dd6d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76ba3dd860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b76ba3ddb40" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b76ba3ddb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76ba3dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b76ba3dbe70" loc="39:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b76ba3dbe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b76ba40c220"/>
        <function-ref name="stopDone" scoped="" ref="0x2b76ba40c3b0"/>
        <function-ref name="start" scoped="" ref="0x2b76ba40c540"/>
        <function-ref name="stop" scoped="" ref="0x2b76ba40c6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b76ba40b7e0" loc="41:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b76ba40b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b76ba40bb60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b76ba40bcf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b76ba40be80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b76ba40a030"/>
        <function-ref name="setCca" scoped="" ref="0x2b76ba40a1c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b76ba40a350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b76ba3ff060" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2b76ba3ff060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b76ba3ff3e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b76ba3ff570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b76ba3ff700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b76ba3ff890"/>
        <function-ref name="setCca" scoped="" ref="0x2b76ba3ffa20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b76ba3ffbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b76ba3f5330" loc="50:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b76ba3f5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b76ba3f56b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b76ba3f5840"/>
        <function-ref name="getRssi" scoped="" ref="0x2b76ba3f59d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b76ba3f5b60"/>
        <function-ref name="getPower" scoped="" ref="0x2b76ba3f5cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b76ba3f5e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2b76ba3f72a0" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b76ba3f72a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76ba3f7620"/>
        <function-ref name="cancel" scoped="" ref="0x2b76ba3f77b0"/>
        <function-ref name="modify" scoped="" ref="0x2b76ba3f7940"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76ba3f7ad0"/>
        <function-ref name="resend" scoped="" ref="0x2b76ba3f7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b76ba40c990" loc="40:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b76ba40c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76ba40cd10"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76ba40b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76ba40b1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76ba40b340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76ba40b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b76ba428420" loc="48:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b76ba428420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b76ba4287a0"/>
        <function-ref name="rand32" scoped="" ref="0x2b76ba428930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b76ba3fe760" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2b76ba3fe760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b76ba3feae0"/>
        <function-ref name="stop" scoped="" ref="0x2b76ba3fec70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b76ba421920" loc="51:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76ba421920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b76ba421ca0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b76ba421e30"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b76ba425020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2b76ba402b50" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b76ba402b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b76ba408020"/>
        <function-ref name="rfOff" scoped="" ref="0x2b76ba4081b0"/>
        <function-ref name="rxOn" scoped="" ref="0x2b76ba408340"/>
        <function-ref name="startVReg" scoped="" ref="0x2b76ba4084d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b76ba408660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b76ba4087f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b76ba408980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b76ba408b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b76ba428bf0" loc="49:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76ba428bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76ba3f6020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76ba3f61b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b76ba3f6340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76ba3f64d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76ba3f6660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba3f67f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76ba3f6980"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76ba3f5020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba3f6b10"/>
        <function-ref name="led0On" scoped="" ref="0x2b76ba3f6ca0"/>
        <function-ref name="led2On" scoped="" ref="0x2b76ba3f6e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b76ba40a640" loc="43:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76ba40a640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76ba40a9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76ba40ab50"/>
        <function-ref name="request" scoped="" ref="0x2b76ba40ace0"/>
        <function-ref name="granted" scoped="" ref="0x2b76ba40ae70"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76ba409030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2b76ba424110" loc="52:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x2b76ba424110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b76ba424590"/>
        <function-ref name="toIdle" scoped="" ref="0x2b76ba424720"/>
        <function-ref name="isState" scoped="" ref="0x2b76ba4248b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b76ba424a40"/>
        <function-ref name="requestState" scoped="" ref="0x2b76ba424bd0"/>
        <function-ref name="forceState" scoped="" ref="0x2b76ba424d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2b76ba417b70" loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x2b76ba417b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76ba415020"/>
        <function-ref name="runTask" scoped="" ref="0x2b76ba4151b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2b76ba418ba0" loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x2b76ba418ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76ba417020"/>
        <function-ref name="runTask" scoped="" ref="0x2b76ba4171b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2b76ba419c20" loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x2b76ba419c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76ba418020"/>
        <function-ref name="runTask" scoped="" ref="0x2b76ba4181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b76ba460dc0" loc="45:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b76ba460dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b76ba46c180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b76ba46c310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b76ba46c4a0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b76ba46c630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b76ba46c7c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b76ba46c950"/>
        <function-ref name="setChannel" scoped="" ref="0x2b76ba46cae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b76ba46cc70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b76ba46ce00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b76ba46b020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b76ba46b1b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b76ba46b340"/>
        <function-ref name="sync" scoped="" ref="0x2b76ba46b4d0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b76ba46b760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b76ba46b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b76ba4930c0" loc="47:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2b76ba4930c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76ba493cb0"/>
        <function-ref name="readDone" scoped="" ref="0x2b76ba492170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b76ba46bbf0" loc="46:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b76ba46bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b76ba45f020"/>
        <function-ref name="rfOff" scoped="" ref="0x2b76ba45f1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x2b76ba45f340"/>
        <function-ref name="startVReg" scoped="" ref="0x2b76ba45f4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b76ba45f660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b76ba45f7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b76ba45f980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b76ba45fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76ba470950" loc="44:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76ba470950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76ba470cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76ba470e60"/>
        <function-ref name="request" scoped="" ref="0x2b76ba46d020"/>
        <function-ref name="granted" scoped="" ref="0x2b76ba46d1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76ba46d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b76ba48b970" loc="46:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b76ba48b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b76ba48bcf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b76ba48be80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b76ba48a030"/>
        <function-ref name="syncDone" scoped="" ref="0x2b76ba48a1c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b76ba48a350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b76ba48a4e0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b76ba48a670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b76ba48a800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b76ba48a990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b76ba48ab20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b76ba48acb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b76ba48ae40"/>
        <function-ref name="sync" scoped="" ref="0x2b76ba489020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b76ba4892b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b76ba489440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2b76ba49a8e0" loc="66:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b76ba49a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76ba49ac60"/>
        <function-ref name="write" scoped="" ref="0x2b76ba49adf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2b76ba484020" loc="50:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b76ba484020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b76ba4843a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2b76ba47cd90" loc="52:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x2b76ba47cd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76ba47a670"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba4825d0"/>
        <function-ref name="startAt" scoped="" ref="0x2b76ba47a020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76ba482a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76ba47ab30"/>
        <function-ref name="start" scoped="" ref="0x2b76ba483bc0"/>
        <function-ref name="stop" scoped="" ref="0x2b76ba482110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2b76ba49e5f0" loc="64:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b76ba49e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76ba49e970"/>
        <function-ref name="write" scoped="" ref="0x2b76ba49eb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b76ba4af380" loc="54:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2b76ba4af380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba4af700"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba4af890"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba4afa20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba4afbb0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba4afd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba4ae020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba4ae1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba4ae340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b76ba488b40" loc="48:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2b76ba488b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76ba487750"/>
        <function-ref name="readDone" scoped="" ref="0x2b76ba487bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2b76ba4c0820" loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x2b76ba4c0820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76ba4c0ba0"/>
        <function-ref name="runTask" scoped="" ref="0x2b76ba4c0d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2b76ba4991c0" loc="67:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b76ba4991c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76ba499540"/>
        <function-ref name="write" scoped="" ref="0x2b76ba4996d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b76ba499a70" loc="68:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b76ba499a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76ba499df0"/>
        <function-ref name="write" scoped="" ref="0x2b76ba498020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2b76ba4a33d0" loc="62:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b76ba4a33d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76ba4a3750"/>
        <function-ref name="write" scoped="" ref="0x2b76ba4a38e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b76ba4a4810" loc="57:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b76ba4a4810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b76ba4a4b90"/>
        <function-ref name="changed" scoped="" ref="0x2b76ba4a4d20"/>
        <function-ref name="amGroup" scoped="" ref="0x2b76ba4ab020"/>
        <function-ref name="setAddress" scoped="" ref="0x2b76ba4ab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b76ba4b0060" loc="53:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b76ba4b0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba4b03e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba4b0570"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba4b0700"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba4b0890"/>
        <function-ref name="get" scoped="" ref="0x2b76ba4b0a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba4b0bb0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba4b0d40"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba4af020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2b76ba497120" loc="71:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b76ba497120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76ba4976a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2b76ba4ae6a0" loc="55:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2b76ba4ae6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba4aea20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba4aebb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba4aed40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba4ad020"/>
        <function-ref name="get" scoped="" ref="0x2b76ba4ad1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba4ad340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba4ad4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba4ad660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76ba48c510" loc="44:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76ba48c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76ba48c890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b76ba49a020" loc="65:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b76ba49a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76ba49a3a0"/>
        <function-ref name="write" scoped="" ref="0x2b76ba49a530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2b76ba497a40" loc="72:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b76ba497a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76ba497dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b76ba4961d0" loc="74:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b76ba4961d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76ba496550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76ba4966e0"/>
        <function-ref name="request" scoped="" ref="0x2b76ba496870"/>
        <function-ref name="granted" scoped="" ref="0x2b76ba496a00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76ba496b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2b76ba4ccd90" loc="76:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x2b76ba4ccd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76ba4cb180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76ba4cb310"/>
        <function-ref name="request" scoped="" ref="0x2b76ba4cb4a0"/>
        <function-ref name="granted" scoped="" ref="0x2b76ba4cb630"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76ba4cb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b76ba489740" loc="47:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b76ba489740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b76ba489ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x2b76ba489c50"/>
        <function-ref name="rxOn" scoped="" ref="0x2b76ba489de0"/>
        <function-ref name="startVReg" scoped="" ref="0x2b76ba488020"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b76ba4881b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b76ba488340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b76ba4884d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b76ba488660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2b76ba4a3c80" loc="63:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b76ba4a3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76ba49e0a0"/>
        <function-ref name="write" scoped="" ref="0x2b76ba49e230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2b76ba49cb00" loc="61:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b76ba49cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76ba49ce80"/>
        <function-ref name="write" scoped="" ref="0x2b76ba4a3030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2b76ba4952b0" loc="69:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b76ba4952b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76ba495630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b76ba4cba80" loc="78:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76ba4cba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76ba4cbe00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76ba4ca020"/>
        <function-ref name="led1On" scoped="" ref="0x2b76ba4ca1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76ba4ca340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76ba4ca4d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba4ca660"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76ba4ca7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76ba4cae30"/>
        <function-ref name="set" scoped="" ref="0x2b76ba4ca980"/>
        <function-ref name="led0On" scoped="" ref="0x2b76ba4cab10"/>
        <function-ref name="led2On" scoped="" ref="0x2b76ba4caca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2b76ba4c1940" loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x2b76ba4c1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76ba4c1cc0"/>
        <function-ref name="runTask" scoped="" ref="0x2b76ba4c1e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76ba48cb80" loc="45:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76ba48cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76ba48b020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76ba48b1b0"/>
        <function-ref name="request" scoped="" ref="0x2b76ba48b340"/>
        <function-ref name="granted" scoped="" ref="0x2b76ba48b4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76ba48b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2b76ba4a7520" loc="60:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b76ba4a7520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76ba4a78a0"/>
        <function-ref name="write" scoped="" ref="0x2b76ba4a7a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2b76ba49fa90" loc="59:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b76ba49fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76ba4a7020"/>
        <function-ref name="write" scoped="" ref="0x2b76ba4a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2b76ba4ac0e0" loc="56:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2b76ba4ac0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76ba4ac460"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba4ac5f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b76ba4ac780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b76ba4ac910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2b76ba4cc020" loc="75:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x2b76ba4cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76ba4cc3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76ba4cc530"/>
        <function-ref name="request" scoped="" ref="0x2b76ba4cc6c0"/>
        <function-ref name="granted" scoped="" ref="0x2b76ba4cc850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76ba4cc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2b76ba4959c0" loc="70:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b76ba4959c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76ba495d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76ba52b7d0" loc="45:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76ba52b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76ba52bb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b76ba528220" loc="46:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b76ba528220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76ba526b30"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba527a60"/>
        <function-ref name="startAt" scoped="" ref="0x2b76ba5264e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76ba526020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76ba524020"/>
        <function-ref name="start" scoped="" ref="0x2b76ba527090"/>
        <function-ref name="stop" scoped="" ref="0x2b76ba5275a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76ba522490" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76ba522490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76ba522810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b76ba522d20" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b76ba522d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76ba643670"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba645550"/>
        <function-ref name="startAt" scoped="" ref="0x2b76ba643020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76ba645a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76ba643b30"/>
        <function-ref name="start" scoped="" ref="0x2b76ba646b60"/>
        <function-ref name="stop" scoped="" ref="0x2b76ba645090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b76bba844f0" loc="44:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b76bba844f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76bba82db0"/>
        <function-ref name="fired" scoped="" ref="0x2b76bba83da0"/>
        <function-ref name="startAt" scoped="" ref="0x2b76bba82760"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76bba822a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76bba812a0"/>
        <function-ref name="start" scoped="" ref="0x2b76bba833d0"/>
        <function-ref name="stop" scoped="" ref="0x2b76bba838e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76bba86bb0" loc="43:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76bba86bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bba84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b76bba7d570" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b76bba7d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76bba7adb0"/>
        <function-ref name="fired" scoped="" ref="0x2b76bba7cda0"/>
        <function-ref name="startAt" scoped="" ref="0x2b76bba7a760"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76bba7a2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76bba792a0"/>
        <function-ref name="start" scoped="" ref="0x2b76bba7c3d0"/>
        <function-ref name="stop" scoped="" ref="0x2b76bba7c8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76bba7fc90" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76bba7fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bba7d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b76bba63020" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b76bba63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76bba633a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76bba63530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76bba636c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76bba63850"/>
        <function-ref name="fired" scoped="" ref="0x2b76bba639e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b76bba67570" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b76bba67570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76bba678f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76bba67a80"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76bba67c10"/>
        <function-ref name="get" scoped="" ref="0x2b76bba67da0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76bba65020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76bba651b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76bba65340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76bba654d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b76bba65660"/>
        <function-ref name="setMode" scoped="" ref="0x2b76bba657f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76bba65980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b76bba65c10" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76bba65c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76bba64020"/>
        <function-ref name="getControl" scoped="" ref="0x2b76bba641b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76bba64340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76bba644d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76bba64660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76bba647f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76bba64980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76bba64b10"/>
        <function-ref name="setControl" scoped="" ref="0x2b76bba64ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b76ba574ba0" loc="52:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b76ba574ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76ba573020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76ba5731b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76ba573340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76ba5734d0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba573660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b76ba53e4d0" loc="50:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b76ba53e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba53e850"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76ba53e9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76ba53eb70"/>
        <function-ref name="get" scoped="" ref="0x2b76ba53ed00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76ba577020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76ba5771b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76ba577340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76ba5774d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b76ba577660"/>
        <function-ref name="setMode" scoped="" ref="0x2b76ba5777f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76ba577980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b76ba575280" loc="51:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76ba575280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76ba575600"/>
        <function-ref name="getControl" scoped="" ref="0x2b76ba575790"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76ba575920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76ba575ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76ba575c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76ba575dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76ba574020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76ba5741b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b76ba574340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b76bba5ada0" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b76bba5ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76bba59180"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76bba59310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76bba594a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76bba59630"/>
        <function-ref name="fired" scoped="" ref="0x2b76bba597c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b76bba5d4c0" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b76bba5d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76bba5d840"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76bba5d9d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76bba5db60"/>
        <function-ref name="get" scoped="" ref="0x2b76bba5dcf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76bba5de80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76bba5b030"/>
        <function-ref name="getMode" scoped="" ref="0x2b76bba5b1c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76bba5b350"/>
        <function-ref name="overflow" scoped="" ref="0x2b76bba5b4e0"/>
        <function-ref name="setMode" scoped="" ref="0x2b76bba5b670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76bba5b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b76bba60340" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b76bba60340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76bba5eba0"/>
        <function-ref name="fired" scoped="" ref="0x2b76bba5fb80"/>
        <function-ref name="startAt" scoped="" ref="0x2b76bba5e550"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76bba5e090"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76bba5d090"/>
        <function-ref name="start" scoped="" ref="0x2b76bba5f1b0"/>
        <function-ref name="stop" scoped="" ref="0x2b76bba5f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76bba61a30" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76bba61a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bba61db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b76bba5ba90" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76bba5ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76bba5be10"/>
        <function-ref name="getControl" scoped="" ref="0x2b76bba5a020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76bba5a1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76bba5a340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76bba5a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76bba5a660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76bba5a7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76bba5a980"/>
        <function-ref name="setControl" scoped="" ref="0x2b76bba5ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b76ba59c020" loc="43:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b76ba59c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76ba59ce30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76ba59b800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76ba59b340"/>
        <function-ref name="overflow" scoped="" ref="0x2b76ba59bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x2b76ba5cf020" loc="43:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b76ba5cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76ba5cfe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76ba5cd800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76ba5cd340"/>
        <function-ref name="overflow" scoped="" ref="0x2b76ba5cdcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b76ba5bb2c0" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b76ba5bb2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba5bb640"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76ba5bb7d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76ba5bb960"/>
        <function-ref name="get" scoped="" ref="0x2b76ba5bbaf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76ba5bbc80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76ba5bbe10"/>
        <function-ref name="getMode" scoped="" ref="0x2b76ba5ba020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76ba5ba1b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b76ba5ba340"/>
        <function-ref name="setMode" scoped="" ref="0x2b76ba5ba4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76ba5ba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b76ba5ca0a0" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b76ba5ca0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76ba5bc020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76ba5bc9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76ba5bc4e0"/>
        <function-ref name="overflow" scoped="" ref="0x2b76ba5bce60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b76ba5d5540" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2b76ba5d5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76ba5d43d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76ba5d4d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76ba5d4890"/>
        <function-ref name="overflow" scoped="" ref="0x2b76ba60e260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b76ba5d80f0" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b76ba5d80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76ba5d6020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76ba5d69a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76ba5d64e0"/>
        <function-ref name="overflow" scoped="" ref="0x2b76ba5d6e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b76bba77890" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b76bba77890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76bba740d0"/>
        <function-ref name="fired" scoped="" ref="0x2b76bba750d0"/>
        <function-ref name="startAt" scoped="" ref="0x2b76bba75a50"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76bba75590"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76bba74590"/>
        <function-ref name="start" scoped="" ref="0x2b76bba766e0"/>
        <function-ref name="stop" scoped="" ref="0x2b76bba76bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b76bba700a0" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b76bba700a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76bba6eb30"/>
        <function-ref name="fired" scoped="" ref="0x2b76bba6f9f0"/>
        <function-ref name="startAt" scoped="" ref="0x2b76bba6e4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76bba6e020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76bba6c020"/>
        <function-ref name="start" scoped="" ref="0x2b76bba6f020"/>
        <function-ref name="stop" scoped="" ref="0x2b76bba6f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b76bba74c00" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b76bba74c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76bba72a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76bba714e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76bba71020"/>
        <function-ref name="overflow" scoped="" ref="0x2b76bba719a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2b76ba63d380" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2b76ba63d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba63d700"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba63d890"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba63da20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba63dbb0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba63dd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba63c020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba63c1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba63c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2b76ba63c6b0" loc="45:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2b76ba63c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba63ca30"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba63cbc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba63cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba63b020"/>
        <function-ref name="get" scoped="" ref="0x2b76ba63b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba63b340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba63b4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba63b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b76ba63b9c0" loc="46:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2b76ba63b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba63bd40"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba63a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba63a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba63a340"/>
        <function-ref name="get" scoped="" ref="0x2b76ba63a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba63a660"/>
        <function-ref name="set" scoped="" ref="0x2b76ba63a7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba63a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2b76ba63e060" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b76ba63e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba63e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba63e570"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba63e700"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba63e890"/>
        <function-ref name="get" scoped="" ref="0x2b76ba63ea20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba63ebb0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba63ed40"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba63d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2b76ba638020" loc="48:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2b76ba638020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba6383a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba638530"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba6386c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba638850"/>
        <function-ref name="get" scoped="" ref="0x2b76ba6389e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba638b70"/>
        <function-ref name="set" scoped="" ref="0x2b76ba638d00"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba637020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b76ba529e30" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2b76ba529e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba63f1e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba63f370"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba63f500"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba63f690"/>
        <function-ref name="get" scoped="" ref="0x2b76ba63f820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba63f9b0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba63fb40"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba63fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2b76ba63acd0" loc="47:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2b76ba63acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba6390a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba639230"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba6393c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba639550"/>
        <function-ref name="get" scoped="" ref="0x2b76ba6396e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba639870"/>
        <function-ref name="set" scoped="" ref="0x2b76ba639a00"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba639b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b76ba635610" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba635610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba635990"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba635b20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba635cb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba635e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba633020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba6331b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba633340"/>
        <function-ref name="get" scoped="" ref="0x2b76ba6334d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba633660"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba6337f0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba633980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba633b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba633ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba632020"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba6321b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b76ba636440" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba636440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba6367c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba636950"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba636ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba636c70"/>
        <function-ref name="get" scoped="" ref="0x2b76ba636e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba635020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba6351b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba635340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b76ba62f2f0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba62f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba62f670"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba62f800"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba62f990"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba62fb20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba62fcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba62fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba62e020"/>
        <function-ref name="get" scoped="" ref="0x2b76ba62e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba62e340"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba62e4d0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba62e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba62e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba62e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba62ec10"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba62eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b76ba630020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba630020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba6303a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba630530"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba6306c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba630850"/>
        <function-ref name="get" scoped="" ref="0x2b76ba6309e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba630b70"/>
        <function-ref name="set" scoped="" ref="0x2b76ba630d00"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba62f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b76ba669de0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba669de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba668180"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba668310"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba6684a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba668630"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba6687c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba668950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba668ae0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba668c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba668e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba667020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba6671b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba667340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba6674d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba667760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba6678f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b76ba66ab70" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba66ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba669020"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba6691b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba669340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba6694d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba669660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba6697f0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba669980"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba669b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b76ba664930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba664930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba664cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba664e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba663020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba6631b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba663340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba6634d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba663660"/>
        <function-ref name="get" scoped="" ref="0x2b76ba6637f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba663980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba663b10"/>
        <function-ref name="set" scoped="" ref="0x2b76ba663ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba663e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba662020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba6622b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba662440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b76ba665710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba665710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba665a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba665c20"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba665db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba664020"/>
        <function-ref name="get" scoped="" ref="0x2b76ba6641b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba664340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba6644d0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba664660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b76ba65f480" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba65f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba65f800"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba65f990"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba65fb20"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba65fcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba65fe40"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba65e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba65e1b0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba65e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba65e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba65e660"/>
        <function-ref name="set" scoped="" ref="0x2b76ba65e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba65e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba65eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba65eda0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba65d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b76ba6601d0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba6601d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba660550"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba6606e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba660870"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba660a00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba660b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba660d20"/>
        <function-ref name="set" scoped="" ref="0x2b76ba65f020"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba65f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b76ba659020" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba659020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba6593a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba659530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba6596c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba659850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba6599e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba659b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba659d00"/>
        <function-ref name="get" scoped="" ref="0x2b76ba658020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba6581b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba658340"/>
        <function-ref name="set" scoped="" ref="0x2b76ba6584d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba658660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba6587f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba658a80"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba658c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b76ba65cd60" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba65cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba65a180"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba65a310"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba65a4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba65a630"/>
        <function-ref name="get" scoped="" ref="0x2b76ba65a7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba65a950"/>
        <function-ref name="set" scoped="" ref="0x2b76ba65aae0"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba65ac70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b76ba655de0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76ba655de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba654180"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba654310"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba6544a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba654630"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba6547c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba654950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba654ae0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba654c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba654e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba653020"/>
        <function-ref name="set" scoped="" ref="0x2b76ba6531b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba653340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba6534d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba653760"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba6538f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b76ba656b70" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba656b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba655020"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba6551b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba655340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba6554d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba655660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba6557f0"/>
        <function-ref name="set" scoped="" ref="0x2b76ba655980"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba655b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2b76ba67e150" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2b76ba67e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b76ba67e4d0"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba67e660"/>
        <function-ref name="captured" scoped="" ref="0x2b76ba67e7f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b76ba67e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2b76ba67ed60" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2b76ba67ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76ba67a180"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba67a310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b76ba67a4a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b76ba67a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2b76ba67aa20" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b76ba67aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76ba67ada0"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba679020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b76ba6791b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b76ba679340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x2b76ba6a48f0" loc="42:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x2b76ba6a48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76ba6a4c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b76ba6a4e00"/>
        <function-ref name="captured" scoped="" ref="0x2b76ba6a3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76ba6a31b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76ba6a3340"/>
        <function-ref name="setEdge" scoped="" ref="0x2b76ba6a34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b76ba676a20" loc="40:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b76ba676a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b76ba676da0"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6a5020"/>
        <function-ref name="captured" scoped="" ref="0x2b76ba6a51b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b76ba6a5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b76ba6a55d0" loc="41:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76ba6a55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76ba6a5950"/>
        <function-ref name="getControl" scoped="" ref="0x2b76ba6a5ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76ba6a5c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76ba6a5e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76ba6a4020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76ba6a41b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76ba6a4340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76ba6a44d0"/>
        <function-ref name="setControl" scoped="" ref="0x2b76ba6a4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x2b76ba6a37a0" loc="43:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b76ba6a37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba6a3b20"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba6a3cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba6a3e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba6a2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba6a21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba6a2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba6a24d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba6a2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba6a27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba6a2980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba6a2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba6a2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba6a2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba6a1120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba6a12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b76ba6938a0" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b76ba6938a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba693c20"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba693db0"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba692020"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6921b0"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba692340"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b76ba6c7a30" loc="58:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b76ba6c7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6c7db0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6c6020"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6c61b0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6c6340"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6c64d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6c6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b76ba6908a0" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b76ba6908a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba690c20"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba690db0"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba68f020"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba68f1b0"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba68f340"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba68f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b76ba68e8a0" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b76ba68e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba68ec20"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba68edb0"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba68c020"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba68c1b0"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba68c340"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba68c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b76ba6998a0" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b76ba6998a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba699c20"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba699db0"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba694020"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6941b0"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba694340"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6944d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b76ba6c98a0" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b76ba6c98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6c9d20"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6c8020"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6c81b0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6c8340"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6c84d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6c8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b76ba6928a0" loc="47:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b76ba6928a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba692c20"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba692db0"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba691020"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6911b0"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba691340"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6914d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b76ba6c6a30" loc="59:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b76ba6c6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6c6db0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6c5020"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6c51b0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6c5340"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6c54d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6c5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b76ba6958f0" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b76ba6958f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba695c70"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba695e00"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba69b020"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba69b1b0"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba69b340"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba69b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b76ba68c8a0" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b76ba68c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba68cc20"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba68cdb0"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6ca020"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6ca1b0"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6ca340"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6ca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b76ba6948a0" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b76ba6948a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba694c20"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba694db0"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba693020"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6931b0"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba693340"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6934d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b76ba6c8a30" loc="57:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b76ba6c8a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6c8db0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6c7020"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6c71b0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6c7340"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6c74d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b76ba6918a0" loc="48:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b76ba6918a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba691c20"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba691db0"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba690020"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6901b0"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba690340"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6904d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b76ba68f8a0" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b76ba68f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba68fc20"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba68fdb0"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba68e020"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba68e1b0"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba68e340"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba68e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b76ba69b8a0" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b76ba69b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba69bc20"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba69bdb0"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba699020"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6991b0"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba699340"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6994d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b76ba6ca8a0" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b76ba6ca8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6cac20"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6cadb0"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6c9020"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6c91b0"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6c9340"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6c94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b76ba6bd020" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b76ba6bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6bd3a0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6bd530"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6bd6c0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6bd850"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6bd9e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6bdb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b76ba6b3020" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b76ba6b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6b33a0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6b3530"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6b36c0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6b3850"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6b39e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6b3b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b76ba6ba020" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b76ba6ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6ba3a0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6ba530"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6ba6c0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6ba850"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6ba9e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6bab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b76ba6b8020" loc="50:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b76ba6b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6b83a0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6b8530"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6b86c0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6b8850"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6b89e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6b8b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b76ba6bf020" loc="41:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b76ba6bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6bf3a0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6bf530"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6bf6c0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6bf850"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6bf9e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6bfb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b76ba6b5020" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b76ba6b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6b54a0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6b5630"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6b57c0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6b5950"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6b5ae0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6b5c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b76ba6bc020" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b76ba6bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6bc3a0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6bc530"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6bc6c0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6bc850"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6bc9e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6bcb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b76ba6b1020" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b76ba6b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6b13a0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6b1530"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6b16c0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6b1850"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6b19e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6b1b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b76ba6c1060" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b76ba6c1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6c13e0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6c1570"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6c1700"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6c1890"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6c1a20"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6c1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b76ba6b7020" loc="51:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b76ba6b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6b73a0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6b7530"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6b76c0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6b7850"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6b79e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6b7b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b76ba6be020" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b76ba6be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6be3a0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6be530"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6be6c0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6be850"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6be9e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6beb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b76ba6b4060" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b76ba6b4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6b43e0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6b4570"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6b4700"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6b4890"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6b4a20"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6b4bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b76ba6bb020" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b76ba6bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6bb3a0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6bb530"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6bb6c0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6bb850"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6bb9e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6bbb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b76ba6b9020" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b76ba6b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6b93a0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6b9530"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6b96c0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6b9850"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6b99e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6b9b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b76ba6c0020" loc="40:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b76ba6c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6c03a0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6c0530"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6c06c0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6c0850"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6c09e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6c0b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b76ba6b6020" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b76ba6b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba6b63a0"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba6b6530"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba6b66c0"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba6b6850"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba6b69e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba6b6b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2b76ba7a6b20" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2b76ba7a6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba799020"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba7991b0"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba799340"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba7994d0"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba799660"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba7997f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b76ba7a6020" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2b76ba7a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76ba7a63a0"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba7a6530"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b76ba7a66c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b76ba7a6850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2b76ba797c00" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2b76ba797c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76ba796020"/>
        <function-ref name="fired" scoped="" ref="0x2b76ba7961b0"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba796340"/>
        <function-ref name="edge" scoped="" ref="0x2b76ba7964d0"/>
        <function-ref name="enable" scoped="" ref="0x2b76ba796660"/>
        <function-ref name="getValue" scoped="" ref="0x2b76ba7967f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b76ba797100" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2b76ba797100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76ba797480"/>
        <function-ref name="disable" scoped="" ref="0x2b76ba797610"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b76ba7977a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b76ba797930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b76babd5e50" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b76babd5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babd4410"/>
        <function-ref name="write" scoped="" ref="0x2b76babd45a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b76babdf160" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b76babdf160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babdf4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b76babd9e50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b76babd9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babd7210"/>
        <function-ref name="write" scoped="" ref="0x2b76babd73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b76babd3880" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b76babd3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babd3c00"/>
        <function-ref name="write" scoped="" ref="0x2b76babd3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b76bac210a0" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b76bac210a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac21420"/>
        <function-ref name="write" scoped="" ref="0x2b76bac215b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b76babd20a0" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b76babd20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babd2420"/>
        <function-ref name="write" scoped="" ref="0x2b76babd25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b76bac15500" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b76bac15500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac15880"/>
        <function-ref name="write" scoped="" ref="0x2b76bac15a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b76bac17500" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b76bac17500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac17880"/>
        <function-ref name="write" scoped="" ref="0x2b76bac17a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b76babdd490" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b76babdd490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babdd810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b76bac1d880" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b76bac1d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac1dc00"/>
        <function-ref name="write" scoped="" ref="0x2b76bac1dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b76bac18500" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b76bac18500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac18880"/>
        <function-ref name="write" scoped="" ref="0x2b76bac18a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b76babd7e50" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b76babd7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babd6210"/>
        <function-ref name="write" scoped="" ref="0x2b76babd63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b76babd6e50" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b76babd6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babd5210"/>
        <function-ref name="write" scoped="" ref="0x2b76babd53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b76bac23880" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b76bac23880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac23c00"/>
        <function-ref name="write" scoped="" ref="0x2b76bac23d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b76bac240a0" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b76bac240a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac24420"/>
        <function-ref name="write" scoped="" ref="0x2b76bac245b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b76babd2880" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b76babd2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babd2c00"/>
        <function-ref name="write" scoped="" ref="0x2b76babd2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b76babe1a90" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76babe1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b76babe1e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b76babe0020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b76babe01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b76babdce00" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b76babdce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babdb1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b76babdb490" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b76babdb490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babdb910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b76bac1cc80" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b76bac1cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac1b0a0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac1b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b76babdbbe0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b76babdbbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babda020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b76bac18ce0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b76bac18ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac170a0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac17230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b76babdc160" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b76babdc160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babdc4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b76bac1d0a0" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b76bac1d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac1d420"/>
        <function-ref name="write" scoped="" ref="0x2b76bac1d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b76babd6670" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b76babd6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babd69f0"/>
        <function-ref name="write" scoped="" ref="0x2b76babd6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b76babd7670" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b76babd7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babd79f0"/>
        <function-ref name="write" scoped="" ref="0x2b76babd7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b76babe0ad0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b76babe0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babe0e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b76bac1e0a0" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b76bac1e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac1e420"/>
        <function-ref name="write" scoped="" ref="0x2b76bac1e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b76bac21880" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b76bac21880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac21c00"/>
        <function-ref name="write" scoped="" ref="0x2b76bac21d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b76bac1e880" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b76bac1e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac1ec00"/>
        <function-ref name="write" scoped="" ref="0x2b76bac1ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b76bac16ce0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b76bac16ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac150a0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac15230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b76bac17ce0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b76bac17ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac160a0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac16230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b76bac24880" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b76bac24880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac24c00"/>
        <function-ref name="write" scoped="" ref="0x2b76bac24d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b76bac1f0a0" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b76bac1f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac1f420"/>
        <function-ref name="write" scoped="" ref="0x2b76bac1f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b76bac1ace0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b76bac1ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac180a0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac18230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b76babd0880" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b76babd0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babd0c00"/>
        <function-ref name="write" scoped="" ref="0x2b76babd0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b76bac15ce0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b76bac15ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b76bac140a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b76bac14230"/>
        <function-ref name="write" scoped="" ref="0x2b76bac143c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b76bac14550"/>
        <function-ref name="readDone" scoped="" ref="0x2b76bac146e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b76babe0480" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b76babe0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babe0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b76babd9670" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b76babd9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babd99f0"/>
        <function-ref name="write" scoped="" ref="0x2b76babd9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b76babd5670" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b76babd5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babd59f0"/>
        <function-ref name="write" scoped="" ref="0x2b76babd5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b76bac220a0" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b76bac220a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac22420"/>
        <function-ref name="write" scoped="" ref="0x2b76bac225b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b76babd00a0" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b76babd00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babd0420"/>
        <function-ref name="write" scoped="" ref="0x2b76babd05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b76bac22880" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b76bac22880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac22c00"/>
        <function-ref name="write" scoped="" ref="0x2b76bac22d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b76babd4870" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b76babd4870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babd4bf0"/>
        <function-ref name="write" scoped="" ref="0x2b76babd4d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b76babdf7b0" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b76babdf7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babdfb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b76babd30a0" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b76babd30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babd3420"/>
        <function-ref name="write" scoped="" ref="0x2b76babd35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76babe2e20" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76babe2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76babe11c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76babe1350"/>
        <function-ref name="request" scoped="" ref="0x2b76babe14e0"/>
        <function-ref name="granted" scoped="" ref="0x2b76babe1670"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76babe1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b76babda2f0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b76babda2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babda670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b76babd9020" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b76babd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babd93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b76bac1a500" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b76bac1a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac1a880"/>
        <function-ref name="write" scoped="" ref="0x2b76bac1aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b76bac1bce0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b76bac1bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac1a0a0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac1a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b76babdc7b0" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b76babdc7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babdcb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b76bac1b500" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b76bac1b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac1b880"/>
        <function-ref name="write" scoped="" ref="0x2b76bac1ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b76bac16500" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b76bac16500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac16880"/>
        <function-ref name="write" scoped="" ref="0x2b76bac16a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b76bac230a0" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b76bac230a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac23420"/>
        <function-ref name="write" scoped="" ref="0x2b76bac235b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b76bac1f880" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b76bac1f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac1fc00"/>
        <function-ref name="write" scoped="" ref="0x2b76bac1fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b76babdfe00" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b76babdfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babdd1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b76babddae0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b76babddae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babdde60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b76bac250a0" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b76bac250a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac25420"/>
        <function-ref name="write" scoped="" ref="0x2b76bac255b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b76babda940" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b76babda940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babdacc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b76bac25880" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b76bac25880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac25c00"/>
        <function-ref name="write" scoped="" ref="0x2b76bac25d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b76bac1c0a0" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b76bac1c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac1c820"/>
        <function-ref name="write" scoped="" ref="0x2b76bac1c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b76bac149b0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b76bac149b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b76bac14d30"/>
        <function-ref name="writeDone" scoped="" ref="0x2b76bac13020"/>
        <function-ref name="write" scoped="" ref="0x2b76bac131b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b76bac13340"/>
        <function-ref name="readDone" scoped="" ref="0x2b76bac134d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b76ba7dc2c0" loc="41:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2b76ba7dc2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b76ba7dc640"/>
        <function-ref name="writeDone" scoped="" ref="0x2b76ba7dc7d0"/>
        <function-ref name="write" scoped="" ref="0x2b76ba7dc960"/>
        <function-ref name="beginRead" scoped="" ref="0x2b76ba7dcaf0"/>
        <function-ref name="readDone" scoped="" ref="0x2b76ba7dcc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b76ba7dd350" loc="40:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76ba7dd350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b76ba7dd6d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b76ba7dd860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b76ba7dd9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b76ba7db540" loc="42:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2b76ba7db540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76ba7db8c0"/>
        <function-ref name="write" scoped="" ref="0x2b76ba7dba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b76ba7da370" loc="43:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2b76ba7da370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76ba7da6f0"/>
        <function-ref name="write" scoped="" ref="0x2b76ba7da880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76ba7de600" loc="39:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76ba7de600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76ba7de980"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76ba7deb10"/>
        <function-ref name="request" scoped="" ref="0x2b76ba7deca0"/>
        <function-ref name="granted" scoped="" ref="0x2b76ba7dee30"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76ba7dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b76ba7d81d0" loc="44:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2b76ba7d81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76ba7d8550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2b76ba8062e0" loc="55:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b76ba8062e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76ba806660"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76ba8067f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b76ba7d3890" loc="46:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2b76ba7d3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b76ba7d3c10"/>
        <function-ref name="writeDone" scoped="" ref="0x2b76ba7d3da0"/>
        <function-ref name="write" scoped="" ref="0x2b76ba7d2020"/>
        <function-ref name="beginRead" scoped="" ref="0x2b76ba7d21b0"/>
        <function-ref name="readDone" scoped="" ref="0x2b76ba7d2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b76ba7d5660" loc="44:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76ba7d5660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b76ba7d59e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b76ba7d5b70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b76ba7d5d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2b76ba80fc20" loc="54:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b76ba80fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b76ba811020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2b76ba806b40" loc="56:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x2b76ba806b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b76ba810020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b76ba8101b0"/>
        <function-ref name="isState" scoped="" ref="0x2b76ba810340"/>
        <function-ref name="isIdle" scoped="" ref="0x2b76ba8104d0"/>
        <function-ref name="requestState" scoped="" ref="0x2b76ba810660"/>
        <function-ref name="forceState" scoped="" ref="0x2b76ba8107f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b76ba812060" loc="53:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b76ba812060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76ba8123e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76ba812570"/>
        <function-ref name="request" scoped="" ref="0x2b76ba812700"/>
        <function-ref name="granted" scoped="" ref="0x2b76ba812890"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76ba812a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b76ba7d2ba0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2b76ba7d2ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76ba814020"/>
        <function-ref name="write" scoped="" ref="0x2b76ba8141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b76ba814a30" loc="48:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2b76ba814a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76ba814db0"/>
        <function-ref name="write" scoped="" ref="0x2b76ba813020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b76ba810a70" loc="57:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76ba810a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76ba810df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76ba80e020"/>
        <function-ref name="led1On" scoped="" ref="0x2b76ba80e1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76ba80e340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76ba80e4d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba80e660"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76ba80e7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76ba80ee30"/>
        <function-ref name="set" scoped="" ref="0x2b76ba80e980"/>
        <function-ref name="led0On" scoped="" ref="0x2b76ba80eb10"/>
        <function-ref name="led2On" scoped="" ref="0x2b76ba80eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76ba7d4510" loc="45:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76ba7d4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76ba7d4890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76ba7d4a20"/>
        <function-ref name="request" scoped="" ref="0x2b76ba7d4bb0"/>
        <function-ref name="granted" scoped="" ref="0x2b76ba7d4d40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76ba7d3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2b76ba803bd0" loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x2b76ba803bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76ba802020"/>
        <function-ref name="runTask" scoped="" ref="0x2b76ba8021b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b76ba8138b0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2b76ba8138b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76ba813c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b76ba879770" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b76ba879770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b76ba879af0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b76ba879c80"/>
        <function-ref name="isState" scoped="" ref="0x2b76ba879e10"/>
        <function-ref name="isIdle" scoped="" ref="0x2b76ba875020"/>
        <function-ref name="requestState" scoped="" ref="0x2b76ba8751b0"/>
        <function-ref name="forceState" scoped="" ref="0x2b76ba875340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b76ba8741d0" loc="66:../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b76ba8741d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b76ba874550"/>
        <function-ref name="toIdle" scoped="" ref="0x2b76ba8746e0"/>
        <function-ref name="isState" scoped="" ref="0x2b76ba874870"/>
        <function-ref name="isIdle" scoped="" ref="0x2b76ba874a00"/>
        <function-ref name="requestState" scoped="" ref="0x2b76ba874b90"/>
        <function-ref name="forceState" scoped="" ref="0x2b76ba874d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76ba86f020" loc="66:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76ba86f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76ba86f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b76ba86fb70" loc="67:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b76ba86fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b76ba86e020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b76ba86e1b0"/>
        <function-ref name="isState" scoped="" ref="0x2b76ba86e340"/>
        <function-ref name="isIdle" scoped="" ref="0x2b76ba86e4d0"/>
        <function-ref name="requestState" scoped="" ref="0x2b76ba86e660"/>
        <function-ref name="forceState" scoped="" ref="0x2b76ba86e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b76babb4020" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b76babb4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76babb43a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76babb4530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b76ba89c8f0" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b76ba89c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b76ba89cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76ba89dc40" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76ba89dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76ba89c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76ba89c1b0"/>
        <function-ref name="request" scoped="" ref="0x2b76ba89c340"/>
        <function-ref name="granted" scoped="" ref="0x2b76ba89c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76ba89c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b76bbb438f0" loc="82:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bbb438f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b76bbb43c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b76bbb43e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b76bbbd42b0" loc="87:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b76bbbd42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bbbd4630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bbbd47c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b76bbbd4a50" loc="89:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b76bbbd4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b76bbbd4dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b76bbb420c0" loc="83:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b76bbb420c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b76bbb42440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76bbb45c30" loc="81:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76bbb45c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bbb43020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bbb431b0"/>
        <function-ref name="request" scoped="" ref="0x2b76bbb43340"/>
        <function-ref name="granted" scoped="" ref="0x2b76bbb434d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bbb43660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b76bbb426d0" loc="85:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b76bbb426d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b76bbb42a50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b76bbb42be0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b76bbb42d70"/>
        <function-ref name="write" scoped="" ref="0x2b76bbbd4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b76ba8c75e0" loc="74:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76ba8c75e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b76ba8c7960"/>
        <function-ref name="configure" scoped="" ref="0x2b76ba8c7af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b76ba90b510" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b76ba90b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76ba90b890"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76ba90ba20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b76ba909600" loc="80:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b76ba909600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b76ba909980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b76ba8c7dd0" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b76ba8c7dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b76ba8c6180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b76ba90a370" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b76ba90a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76ba90a6f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76ba90a880"/>
        <function-ref name="request" scoped="" ref="0x2b76ba90aa10"/>
        <function-ref name="granted" scoped="" ref="0x2b76ba90aba0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76ba90ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76ba8cca20" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76ba8cca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76ba8ccda0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76ba8c8020"/>
        <function-ref name="request" scoped="" ref="0x2b76ba8c81b0"/>
        <function-ref name="granted" scoped="" ref="0x2b76ba8c8340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76ba8c84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b76ba8c6480" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b76ba8c6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b76ba8c6800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b76ba8c6990"/>
        <function-ref name="splitRead" scoped="" ref="0x2b76ba8c6b20"/>
        <function-ref name="write" scoped="" ref="0x2b76ba8c6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b76ba9046a0" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b76ba9046a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b76ba904a20"/>
        <function-ref name="txDone" scoped="" ref="0x2b76ba904bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b76ba96ec40" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76ba96ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b76ba96d020"/>
        <function-ref name="configure" scoped="" ref="0x2b76ba96d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b76ba96b700" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b76ba96b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76ba96baa0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76ba96bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b76ba96ae00" loc="82:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b76ba96ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b76ba9691c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b76ba96d440" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b76ba96d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b76ba96d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2b76ba969490" loc="83:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b76ba969490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b76ba969810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b76ba9699a0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b76ba969b30"/>
        <function-ref name="enableUart" scoped="" ref="0x2b76ba969cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b76ba969e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b76ba968020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b76ba9681b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b76ba968340"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b76ba9684d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b76ba968660"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b76ba9687f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b76ba968980"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b76ba968b10"/>
        <function-ref name="getUbr" scoped="" ref="0x2b76ba968da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b76ba967020"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b76ba9671b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b76ba967340"/>
        <function-ref name="isUart" scoped="" ref="0x2b76ba9674d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b76ba967660"/>
        <function-ref name="isSpi" scoped="" ref="0x2b76ba9677f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b76ba967980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b76ba967b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b76ba967ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b76ba967e30"/>
        <function-ref name="getMode" scoped="" ref="0x2b76ba966020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b76ba9663b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b76ba966540"/>
        <function-ref name="setUbr" scoped="" ref="0x2b76ba9666d0"/>
        <function-ref name="tx" scoped="" ref="0x2b76ba966860"/>
        <function-ref name="getUctl" scoped="" ref="0x2b76ba9669f0"/>
        <function-ref name="disableUart" scoped="" ref="0x2b76ba966b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b76ba966d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b76ba965020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b76ba9651b0"/>
        <function-ref name="rx" scoped="" ref="0x2b76ba965340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b76ba9654d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b76ba965660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b76ba9657f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b76ba965980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b76ba965b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b76ba9645a0" loc="85:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76ba9645a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76ba964920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76ba964ab0"/>
        <function-ref name="led1On" scoped="" ref="0x2b76ba964c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76ba964dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76ba963020"/>
        <function-ref name="get" scoped="" ref="0x2b76ba9631b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76ba963340"/>
        <function-ref name="led2On" scoped="" ref="0x2b76ba963980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba963660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76ba9634d0"/>
        <function-ref name="led0On" scoped="" ref="0x2b76ba9637f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b76ba96a060" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b76ba96a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76ba96a400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76ba96a590"/>
        <function-ref name="request" scoped="" ref="0x2b76ba96a720"/>
        <function-ref name="granted" scoped="" ref="0x2b76ba96a8b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76ba96aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76ba96fe80" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76ba96fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76ba96e240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76ba96e3d0"/>
        <function-ref name="request" scoped="" ref="0x2b76ba96e560"/>
        <function-ref name="granted" scoped="" ref="0x2b76ba96e6f0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76ba96e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b76ba96da50" loc="78:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b76ba96da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b76ba96ddd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b76ba96b020"/>
        <function-ref name="splitRead" scoped="" ref="0x2b76ba96b1b0"/>
        <function-ref name="write" scoped="" ref="0x2b76ba96b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b76ba965de0" loc="84:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b76ba965de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b76ba964180"/>
        <function-ref name="txDone" scoped="" ref="0x2b76ba964310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x2b76ba963c50" loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x2b76ba963c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76ba962020"/>
        <function-ref name="runTask" scoped="" ref="0x2b76ba9621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2b76ba99d8a0" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b76ba99d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76ba99dc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b76ba9563b0" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b76ba9563b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b76ba956730"/>
        <function-ref name="txDone" scoped="" ref="0x2b76ba9568c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b76ba95d860" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b76ba95d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b76ba95dbe0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b76ba95dd70"/>
        <function-ref name="setUctl" scoped="" ref="0x2b76ba95a020"/>
        <function-ref name="enableUart" scoped="" ref="0x2b76ba95a1b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b76ba95a340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b76ba95a4d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b76ba95a660"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b76ba95a7f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b76ba95a980"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b76ba95ab10"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b76ba95aca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b76ba95ae30"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b76ba959020"/>
        <function-ref name="getUbr" scoped="" ref="0x2b76ba9592b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b76ba959440"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b76ba9595d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b76ba959760"/>
        <function-ref name="isUart" scoped="" ref="0x2b76ba9598f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b76ba959a80"/>
        <function-ref name="isSpi" scoped="" ref="0x2b76ba959c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b76ba959da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b76ba958020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b76ba9581b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b76ba958340"/>
        <function-ref name="getMode" scoped="" ref="0x2b76ba9584d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b76ba958860"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b76ba9589f0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b76ba958b80"/>
        <function-ref name="tx" scoped="" ref="0x2b76ba958d10"/>
        <function-ref name="getUctl" scoped="" ref="0x2b76ba957020"/>
        <function-ref name="disableUart" scoped="" ref="0x2b76ba9571b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b76ba957340"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b76ba9574d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b76ba957660"/>
        <function-ref name="rx" scoped="" ref="0x2b76ba9577f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b76ba957980"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b76ba957b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b76ba957ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b76ba957e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b76ba956020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b76ba9ae670" loc="82:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b76ba9ae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba9ae9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba9aeb80"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba9aed10"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba9ad020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba9ad1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba9ad340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba9ad4d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba9ad660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba9ad7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba9ad980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba9adb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba9adca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba9ade30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba9ac120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba9ac2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b76ba996dc0" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b76ba996dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b76ba995180"/>
        <function-ref name="txDone" scoped="" ref="0x2b76ba995310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2b76ba9ac670" loc="83:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2b76ba9ac670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba9ac9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba9acb80"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba9acd10"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba9ab020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba9ab1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba9ab340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba9ab4d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba9ab660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba9ab7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba9ab980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba9abb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba9abca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba9abe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba9aa120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba9aa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2b76ba9aa670" loc="84:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2b76ba9aa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba9aa9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba9aab80"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba9aad10"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba9a9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba9a91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba9a9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba9a94d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba9a9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba9a97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba9a9980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba9a9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba9a9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba9a9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba9a8120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba9a82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2b76ba99a020" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b76ba99a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b76ba99a3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b76ba99a530"/>
        <function-ref name="setUctl" scoped="" ref="0x2b76ba99a6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b76ba99a850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b76ba99a9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b76ba99ab70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b76ba99ad00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b76ba999020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b76ba9991b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b76ba999340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b76ba9994d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b76ba999660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b76ba9997f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b76ba999a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b76ba999c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b76ba999da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b76ba998020"/>
        <function-ref name="isUart" scoped="" ref="0x2b76ba9981b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b76ba998340"/>
        <function-ref name="isSpi" scoped="" ref="0x2b76ba9984d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b76ba998660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b76ba9987f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b76ba998980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b76ba998b10"/>
        <function-ref name="getMode" scoped="" ref="0x2b76ba998ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b76ba997220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b76ba9973b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b76ba997540"/>
        <function-ref name="tx" scoped="" ref="0x2b76ba9976d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b76ba997860"/>
        <function-ref name="disableUart" scoped="" ref="0x2b76ba9979f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b76ba997b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b76ba997d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b76ba996020"/>
        <function-ref name="rx" scoped="" ref="0x2b76ba9961b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b76ba996340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b76ba9964d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b76ba996660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b76ba9967f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b76ba996980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x2b76ba9b75b0" loc="79:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2b76ba9b75b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b76ba9b7930"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b76ba9b7ac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b76ba9b7c50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b76ba9b7de0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b76ba993020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b76ba9931b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b76ba993340"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b76ba9934d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76ba993660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b76ba9937f0"/>
        <function-ref name="getData" scoped="" ref="0x2b76ba993980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b76ba993b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b76ba993ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b76ba992020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b76ba9921b0"/>
        <function-ref name="getIV" scoped="" ref="0x2b76ba992340"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b76ba9924d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b76ba992660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b76ba9927f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b76ba992980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b76ba992b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b76ba992ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x2b76ba992e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b76ba9b6020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b76ba9b61b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b76ba9b6540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b76ba9b66d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b76ba9b6860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b76ba9b69f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b76ba9b6b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b76ba9b6d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b76ba9b5020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b76ba9b51b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b76ba9b5340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b76ba9b54d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b76ba9b5660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b76ba9b57f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b76ba9b5980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b76ba9b5b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b76ba9b5ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b76ba9b5e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b76ba9b4020"/>
        <function-ref name="setData" scoped="" ref="0x2b76ba9b41b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b76ba9b4340"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b76ba9b44d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b76ba9b4660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b76ba9b47f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b76ba9b4980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b76ba9b4b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b76ba9b3420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b76ba9b35b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b76ba9b3740"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b76ba9b38d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b76ba9b3a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b76ba9b3bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b76ba9b3d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b76ba9b2020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b76ba9b21b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b76ba9b2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2b76ba9b0670" loc="81:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2b76ba9b0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba9b09f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba9b0b80"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba9b0d10"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba9af020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba9af1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba9af340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba9af4d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba9af660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba9af7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba9af980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba9afb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba9afca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba9afe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba9ae120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba9ae2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b76ba995750" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b76ba995750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76ba995ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b76ba9b2700" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b76ba9b2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76ba9b2a80"/>
        <function-ref name="isInput" scoped="" ref="0x2b76ba9b2c10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76ba9b2da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76ba9b1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76ba9b11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76ba9b1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76ba9b14d0"/>
        <function-ref name="get" scoped="" ref="0x2b76ba9b1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76ba9b17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76ba9b1980"/>
        <function-ref name="set" scoped="" ref="0x2b76ba9b1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76ba9b1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76ba9b1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76ba9b0120"/>
        <function-ref name="clr" scoped="" ref="0x2b76ba9b02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b76bbbcc2c0" loc="42:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bbbcc2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b76bbbcc640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b76bbbcc7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2b76bbbc6440" loc="46:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b76bbbc6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76bbbc67c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b76bbbbf760" loc="51:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bbbbf760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b76bbbbfae0"/>
        <function-ref name="configure" scoped="" ref="0x2b76bbbbfc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2b76bbbc6a50" loc="48:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b76bbbc6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b76bbbc6dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b76bbbc5020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b76bbbc51b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b76bbbc5340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b76bbbc54d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b76bbbc5660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b76bbbc57f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b76bbbc5980"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76bbbc5b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b76bbbc5ca0"/>
        <function-ref name="getData" scoped="" ref="0x2b76bbbc5e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b76bbbc4020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b76bbbc41b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b76bbbc4440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b76bbbc45d0"/>
        <function-ref name="getIV" scoped="" ref="0x2b76bbbc4760"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b76bbbc48f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b76bbbc4a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b76bbbc4c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b76bbbc4da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b76bbbc3020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b76bbbc31b0"/>
        <function-ref name="isI2C" scoped="" ref="0x2b76bbbc3340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b76bbbc34d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b76bbbc3660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b76bbbc39f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b76bbbc3b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b76bbbc3d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b76bbbc2020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b76bbbc21b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b76bbbc2340"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b76bbbc24d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b76bbbc2660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b76bbbc27f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b76bbbc2980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b76bbbc2b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b76bbbc2ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b76bbbc2e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b76bbbc1020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b76bbbc11b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b76bbbc1340"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b76bbbc14d0"/>
        <function-ref name="setData" scoped="" ref="0x2b76bbbc1660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b76bbbc17f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b76bbbc1980"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b76bbbc1b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b76bbbc1ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b76bbbc1e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b76bbbc0020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b76bbbc05b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b76bbbc0740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b76bbbc08d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b76bbbc0a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b76bbbc0bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b76bbbc0d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b76bbbbf020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b76bbbbf1b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b76bbbbf340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b76bbbbf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b76bbbc7c10" loc="45:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b76bbbc7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b76bbbc6020"/>
        <function-ref name="txDone" scoped="" ref="0x2b76bbbc61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76bbbcd640" loc="41:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76bbbcd640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bbbcd9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bbbcdb50"/>
        <function-ref name="request" scoped="" ref="0x2b76bbbcdce0"/>
        <function-ref name="granted" scoped="" ref="0x2b76bbbcde70"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bbbcc030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b76bbbcb2b0" loc="44:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b76bbbcb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b76bbbcb630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b76bbbcb7c0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b76bbbcb950"/>
        <function-ref name="enableUart" scoped="" ref="0x2b76bbbcbae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b76bbbcbc70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b76bbbcbe00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b76bbbca020"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b76bbbca1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b76bbbca340"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b76bbbca4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b76bbbca660"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b76bbbca7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b76bbbca980"/>
        <function-ref name="getUbr" scoped="" ref="0x2b76bbbcac10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b76bbbcada0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b76bbbc9020"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b76bbbc91b0"/>
        <function-ref name="isUart" scoped="" ref="0x2b76bbbc9340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b76bbbc94d0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b76bbbc9660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b76bbbc97f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b76bbbc9980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b76bbbc9b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b76bbbc9ca0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76bbbc9e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b76bbbc8220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b76bbbc83b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b76bbbc8540"/>
        <function-ref name="tx" scoped="" ref="0x2b76bbbc86d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b76bbbc8860"/>
        <function-ref name="disableUart" scoped="" ref="0x2b76bbbc89f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b76bbbc8b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b76bbbc8d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b76bbbc7020"/>
        <function-ref name="rx" scoped="" ref="0x2b76bbbc71b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b76bbbc7340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b76bbbc74d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b76bbbc7660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b76bbbc77f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b76bbbc7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b76bbbcca60" loc="43:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bbbcca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b76bbbccde0"/>
        <function-ref name="userId" scoped="" ref="0x2b76bbbcb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b76baa3a8a0" loc="42:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b76baa3a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b76baa3ac20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b76baa3adb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b76baa87020" loc="45:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76baa87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b76baa873a0"/>
        <function-ref name="configure" scoped="" ref="0x2b76baa87530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b76baa3fa80" loc="39:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b76baa3fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b76baa3fe00"/>
        <function-ref name="txDone" scoped="" ref="0x2b76baa3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76baa3b5c0" loc="41:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76baa3b5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76baa3b940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76baa3bad0"/>
        <function-ref name="request" scoped="" ref="0x2b76baa3bc60"/>
        <function-ref name="granted" scoped="" ref="0x2b76baa3bdf0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76baa3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b76baa3c9a0" loc="40:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b76baa3c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76baa3cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b76baa38130" loc="43:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76baa38130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b76baa384b0"/>
        <function-ref name="userId" scoped="" ref="0x2b76baa38640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b76baa724b0" loc="43:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76baa724b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b76baa72830"/>
        <function-ref name="userId" scoped="" ref="0x2b76baa729c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b76baa855c0" loc="39:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b76baa855c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b76baa85960"/>
        <function-ref name="txDone" scoped="" ref="0x2b76baa85af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2b76baa74e70" loc="42:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b76baa74e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76baa72220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b76baa74020" loc="40:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b76baa74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76baa743c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2b76baa74690" loc="41:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2b76baa74690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b76baa74a10"/>
        <function-ref name="txDone" scoped="" ref="0x2b76baa74ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b76baae6bf0" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b76baae6bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b76baae5020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b76baae51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b76baae4930" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76baae4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b76baae4cd0"/>
        <function-ref name="configure" scoped="" ref="0x2b76baae4e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b76baae5400" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b76baae5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76baae5780"/>
        <function-ref name="requested" scoped="" ref="0x2b76baae5910"/>
        <function-ref name="granted" scoped="" ref="0x2b76baae5aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76baae5c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b76baae5dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76baae7e60" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76baae7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76baae6230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76baae63c0"/>
        <function-ref name="request" scoped="" ref="0x2b76baae6550"/>
        <function-ref name="granted" scoped="" ref="0x2b76baae66e0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76baae6870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b76baae4060" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76baae4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b76baae43e0"/>
        <function-ref name="userId" scoped="" ref="0x2b76baae4570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76bbbec140" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76bbbec140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bbbec4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b76bbbec750" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b76bbbec750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b76bbbecad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b76bbbecc60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b76bbbecdf0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b76bbbeb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b76bbbe9850" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bbbe9850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b76bbbe9bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b76bbbe9d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b76bbbe6590" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bbbe6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b76bbbe6930"/>
        <function-ref name="configure" scoped="" ref="0x2b76bbbe6ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b76bbbe6d50" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b76bbbe6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b76bbbe5100"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b76bbbe5290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b76bbbe5420"/>
        <function-ref name="dequeue" scoped="" ref="0x2b76bbbe55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b76bbbe8020" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b76bbbe8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bbbe83a0"/>
        <function-ref name="requested" scoped="" ref="0x2b76bbbe8530"/>
        <function-ref name="granted" scoped="" ref="0x2b76bbbe86c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bbbe8850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b76bbbe89e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b76bbbe5800" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76bbbe5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76bbbe5b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76bbbe5d10"/>
        <function-ref name="led1On" scoped="" ref="0x2b76bbbe4020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76bbbe41b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76bbbe4340"/>
        <function-ref name="get" scoped="" ref="0x2b76bbbe44d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76bbbe4660"/>
        <function-ref name="led0On" scoped="" ref="0x2b76bbbe4ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76bbbe4980"/>
        <function-ref name="led2On" scoped="" ref="0x2b76bbbe47f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76bbbe4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76bbbea970" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76bbbea970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bbbead10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bbbe9020"/>
        <function-ref name="request" scoped="" ref="0x2b76bbbe91b0"/>
        <function-ref name="granted" scoped="" ref="0x2b76bbbe9340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bbbe94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b76bbbe8c30" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bbbe8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b76bbbe6020"/>
        <function-ref name="userId" scoped="" ref="0x2b76bbbe61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b76bbbe3020" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2b76bbbe3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76bbbe33a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b76bbbe3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2b76baadd870" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b76baadd870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b76baaddbf0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b76baaddd80"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b76baada020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b76baada1b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b76baada340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b76baada4d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b76baada660"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b76baada7f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76baada980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b76baadab10"/>
        <function-ref name="getData" scoped="" ref="0x2b76baadaca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b76baadae30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b76baad9020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b76baad92b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b76baad9440"/>
        <function-ref name="getIV" scoped="" ref="0x2b76baad95d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b76baad9760"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b76baad98f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b76baad9a80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b76baad9c10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b76baad9da0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b76baad8020"/>
        <function-ref name="isI2C" scoped="" ref="0x2b76baad81b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b76baad8340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b76baad84d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b76baad8860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b76baad89f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b76baad8b80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b76baad8d10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b76baad7020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b76baad71b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b76baad7340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b76baad74d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b76baad7660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b76baad77f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b76baad7980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b76baad7b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b76baad7ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b76baad7e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b76bab26020"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b76bab261b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b76bab26340"/>
        <function-ref name="setData" scoped="" ref="0x2b76bab264d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b76bab26660"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b76bab267f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b76bab26980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b76bab26b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b76bab26ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b76bab26e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b76bab25420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b76bab255b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b76bab25740"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b76bab258d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b76bab25a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b76bab25bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b76bab25d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b76bab24020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b76bab241b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b76bab24340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x2b76bab19250" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x2b76bab19250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b76bab195d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b76bab19760"/>
        <function-ref name="setUctl" scoped="" ref="0x2b76bab198f0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b76bab19a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b76bab19c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b76bab19da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b76bab18020"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b76bab181b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b76bab18340"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b76bab184d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b76bab18660"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b76bab187f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b76bab18980"/>
        <function-ref name="getUbr" scoped="" ref="0x2b76bab18c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b76bab18da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b76bab17020"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b76bab171b0"/>
        <function-ref name="isUart" scoped="" ref="0x2b76bab17340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b76bab174d0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b76bab17660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b76bab177f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b76bab17980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b76bab17b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b76bab17ca0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76bab17e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b76bab16220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b76bab163b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b76bab16540"/>
        <function-ref name="tx" scoped="" ref="0x2b76bab166d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b76bab16860"/>
        <function-ref name="disableUart" scoped="" ref="0x2b76bab169f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b76bab16b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b76bab16d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b76bab15020"/>
        <function-ref name="rx" scoped="" ref="0x2b76bab151b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b76bab15340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b76bab154d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b76bab15660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b76bab157f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b76bab15980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b76bab13cb0" loc="43:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b76bab13cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bab120a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bab12230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76bab123c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bab12550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bab126e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76bab12870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bab12a00"/>
        <function-ref name="get" scoped="" ref="0x2b76bab12b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76bab12d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76bab11020"/>
        <function-ref name="set" scoped="" ref="0x2b76bab111b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76bab11340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76bab114d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76bab11760"/>
        <function-ref name="clr" scoped="" ref="0x2b76bab118f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x2b76bab21430" loc="39:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2b76bab21430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b76bab217b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b76bab21940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b76bab21ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b76bab21c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b76bab21df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b76bab1f020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b76bab1f1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b76bab1f340"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76bab1f4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b76bab1f660"/>
        <function-ref name="getData" scoped="" ref="0x2b76bab1f7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b76bab1f980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b76bab1fb10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b76bab1fda0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b76bab1e020"/>
        <function-ref name="getIV" scoped="" ref="0x2b76bab1e1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b76bab1e340"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b76bab1e4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b76bab1e660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b76bab1e7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b76bab1e980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b76bab1eb10"/>
        <function-ref name="isI2C" scoped="" ref="0x2b76bab1eca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b76bab1ee30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b76bab1d020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b76bab1d3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b76bab1d540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b76bab1d6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b76bab1d860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b76bab1d9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b76bab1db80"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b76bab1dd10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b76bab1c020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b76bab1c1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b76bab1c340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b76bab1c4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b76bab1c660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b76bab1c7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b76bab1c980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b76bab1cb10"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b76bab1cca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b76bab1ce30"/>
        <function-ref name="setData" scoped="" ref="0x2b76bab1b020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b76bab1b1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b76bab1b340"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b76bab1b4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b76bab1b660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b76bab1b7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b76bab1b980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b76bab1a020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b76bab1a1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b76bab1a340"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b76bab1a4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b76bab1a660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b76bab1a7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b76bab1a980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b76bab1ab10"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b76bab1aca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b76bab1ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b76bab15d40" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b76bab15d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bab140e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bab14270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76bab14400"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bab14590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bab14720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76bab148b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bab14a40"/>
        <function-ref name="get" scoped="" ref="0x2b76bab14bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76bab14d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76bab13020"/>
        <function-ref name="set" scoped="" ref="0x2b76bab131b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76bab13340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76bab134d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76bab13760"/>
        <function-ref name="clr" scoped="" ref="0x2b76bab138f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b76bac50c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b76bac50c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac4e210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac4e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b76bac05da0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b76bac05da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac04180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b76babfeb50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b76babfeb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babfd020"/>
        <function-ref name="write" scoped="" ref="0x2b76babfd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b76bac4d670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b76bac4d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac4d9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac4db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b76bac46e50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b76bac46e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac45210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac453a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b76bac4de50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b76bac4de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac4c210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac4c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b76bac392f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b76bac392f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac39670"/>
        <function-ref name="write" scoped="" ref="0x2b76bac39800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b76bac3c2f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b76bac3c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac3c670"/>
        <function-ref name="write" scoped="" ref="0x2b76bac3c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b76bac03120" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b76bac03120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac034a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b76bac41670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b76bac41670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac419f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac41b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b76bac3d2f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b76bac3d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac3d670"/>
        <function-ref name="write" scoped="" ref="0x2b76bac3d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b76babfdc60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b76babfdc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babfc020"/>
        <function-ref name="write" scoped="" ref="0x2b76babfc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b76babfcc60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b76babfcc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac50020"/>
        <function-ref name="write" scoped="" ref="0x2b76bac501b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b76bac47670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b76bac47670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac479f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac47b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b76bac4ae50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b76bac4ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac49210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac493a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b76bac4c670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b76bac4c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac4c9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac4cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b76bac06760" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76bac06760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b76bac06ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b76bac06c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b76bac06e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b76bac02aa0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b76bac02aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac02e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b76bac01120" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b76bac01120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac015a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b76bac40a70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b76bac40a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac40df0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b76bac01870" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b76bac01870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac01bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b76bac3dad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b76bac3dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac3de50"/>
        <function-ref name="write" scoped="" ref="0x2b76bac3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b76bac03dc0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b76bac03dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac02180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b76bac43e50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b76bac43e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac41210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac413a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b76babfc480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b76babfc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babfc800"/>
        <function-ref name="write" scoped="" ref="0x2b76babfc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b76babfd480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b76babfd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babfd800"/>
        <function-ref name="write" scoped="" ref="0x2b76babfd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b76bac05750" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b76bac05750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac05ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b76bac44e50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b76bac44e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac43210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac433a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b76bac45670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b76bac45670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac459f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac45b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b76bac43670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b76bac43670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac439f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac43b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b76bac3bad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b76bac3bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac3be50"/>
        <function-ref name="write" scoped="" ref="0x2b76bac39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b76bac3cad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b76bac3cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac3ce50"/>
        <function-ref name="write" scoped="" ref="0x2b76bac3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b76bac49670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b76bac49670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac499f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac49b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b76bac45e50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b76bac45e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac44210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b76bac3ead0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b76bac3ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac3ee50"/>
        <function-ref name="write" scoped="" ref="0x2b76bac3d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b76bac4b670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b76bac4b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac4b9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac4bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b76bac39ad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b76bac39ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b76bac39e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b76bac38020"/>
        <function-ref name="write" scoped="" ref="0x2b76bac381b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b76bac38340"/>
        <function-ref name="readDone" scoped="" ref="0x2b76bac384d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b76bac05100" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b76bac05100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac05480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b76babfe370" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b76babfe370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76babfe6f0"/>
        <function-ref name="write" scoped="" ref="0x2b76babfe880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b76bac50480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b76bac50480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac50800"/>
        <function-ref name="write" scoped="" ref="0x2b76bac50990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b76bac47e50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b76bac47e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac46210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b76bac4ce50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b76bac4ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac4b210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac4b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b76bac46670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b76bac46670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac469f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac46b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b76bac4e670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b76bac4e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac4e9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac4eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b76bac04450" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b76bac04450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac047d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b76bac4ee50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b76bac4ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac4d210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac4d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76bac08a80" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76bac08a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bac08e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bac06020"/>
        <function-ref name="request" scoped="" ref="0x2b76bac061b0"/>
        <function-ref name="granted" scoped="" ref="0x2b76bac06340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bac064d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b76babff020" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b76babff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babff3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b76babffcc0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b76babffcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babfe0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b76bac3e2f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b76bac3e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac3e670"/>
        <function-ref name="write" scoped="" ref="0x2b76bac3e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b76bac3fad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b76bac3fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac3fe50"/>
        <function-ref name="write" scoped="" ref="0x2b76bac3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b76bac02450" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b76bac02450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac027d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b76bac3f2f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b76bac3f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac3f670"/>
        <function-ref name="write" scoped="" ref="0x2b76bac3f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b76bac3b2f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b76bac3b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac3b670"/>
        <function-ref name="write" scoped="" ref="0x2b76bac3b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b76bac49e50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b76bac49e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac47210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b76bac44670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b76bac44670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac449f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac44b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b76bac04aa0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b76bac04aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac04e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b76bac03770" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b76bac03770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac03af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b76bac4be50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b76bac4be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac4a210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac4a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b76babff670" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b76babff670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76babff9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b76bac4a670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b76bac4a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac4a9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac4ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b76bac41e50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b76bac41e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac40610"/>
        <function-ref name="write" scoped="" ref="0x2b76bac407a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b76bac387a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b76bac387a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b76bac38b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b76bac38cb0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac38e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b76bac37020"/>
        <function-ref name="readDone" scoped="" ref="0x2b76bac371b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b76bac79c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b76bac79c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac78210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b76bac2eda0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b76bac2eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac2d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b76bac27b50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b76bac27b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac7b020"/>
        <function-ref name="write" scoped="" ref="0x2b76bac7b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b76bac77670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b76bac77670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac779f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac77b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b76bac70e50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b76bac70e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac6e210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac6e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b76bac77e50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b76bac77e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac76210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b76bac632f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b76bac632f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac63670"/>
        <function-ref name="write" scoped="" ref="0x2b76bac63800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b76bac652f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b76bac652f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac65670"/>
        <function-ref name="write" scoped="" ref="0x2b76bac65800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b76bac2b120" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b76bac2b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac2b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b76bac6b670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b76bac6b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac6b9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac6bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b76bac662f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b76bac662f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac66670"/>
        <function-ref name="write" scoped="" ref="0x2b76bac66800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b76bac7bc60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b76bac7bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac7a020"/>
        <function-ref name="write" scoped="" ref="0x2b76bac7a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b76bac7ac60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b76bac7ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac79020"/>
        <function-ref name="write" scoped="" ref="0x2b76bac791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b76bac71670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b76bac71670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac719f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac71b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b76bac73e50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b76bac73e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac72210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b76bac76670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b76bac76670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac769f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac76b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b76bac2f760" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76bac2f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b76bac2fae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b76bac2fc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b76bac2fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b76bac2aaa0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b76bac2aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac2ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b76bac29120" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b76bac29120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac295a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b76bac6aa70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b76bac6aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac6adf0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b76bac29870" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b76bac29870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac29bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b76bac66ad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b76bac66ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac66e50"/>
        <function-ref name="write" scoped="" ref="0x2b76bac65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b76bac2bdc0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b76bac2bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac2a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b76bac6ce50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b76bac6ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac6b210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac6b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b76bac7a480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b76bac7a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac7a800"/>
        <function-ref name="write" scoped="" ref="0x2b76bac7a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b76bac7b480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b76bac7b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac7b800"/>
        <function-ref name="write" scoped="" ref="0x2b76bac7b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b76bac2e750" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b76bac2e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac2ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b76bac6de50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b76bac6de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac6c210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac6c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b76bac6e670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b76bac6e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac6e9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac6eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b76bac6c670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b76bac6c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac6c9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac6cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b76bac64ad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b76bac64ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac64e50"/>
        <function-ref name="write" scoped="" ref="0x2b76bac63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b76bac65ad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b76bac65ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac65e50"/>
        <function-ref name="write" scoped="" ref="0x2b76bac64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b76bac72670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b76bac72670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac729f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac72b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b76bac6ee50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b76bac6ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac6d210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac6d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b76bac68ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b76bac68ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac68e50"/>
        <function-ref name="write" scoped="" ref="0x2b76bac66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b76bac74670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b76bac74670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac749f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac74b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b76bac63ad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b76bac63ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b76bac63e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b76bac62020"/>
        <function-ref name="write" scoped="" ref="0x2b76bac621b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b76bac62340"/>
        <function-ref name="readDone" scoped="" ref="0x2b76bac624d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b76bac2e100" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b76bac2e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac2e480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b76bac27370" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b76bac27370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac276f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac27880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b76bac79480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b76bac79480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac79800"/>
        <function-ref name="write" scoped="" ref="0x2b76bac79990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b76bac71e50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b76bac71e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac70210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b76bac76e50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b76bac76e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac74210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b76bac70670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b76bac70670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac709f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac70b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b76bac78670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b76bac78670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac789f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac78b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b76bac2d450" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b76bac2d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac2d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b76bac78e50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b76bac78e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac77210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76bac309e0" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76bac309e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bac30d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bac2f020"/>
        <function-ref name="request" scoped="" ref="0x2b76bac2f1b0"/>
        <function-ref name="granted" scoped="" ref="0x2b76bac2f340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bac2f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b76bac28020" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b76bac28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b76bac28cc0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b76bac28cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac270a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b76bac682f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b76bac682f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac68670"/>
        <function-ref name="write" scoped="" ref="0x2b76bac68800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b76bac69ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b76bac69ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac69e50"/>
        <function-ref name="write" scoped="" ref="0x2b76bac68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b76bac2a450" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b76bac2a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac2a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b76bac692f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b76bac692f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac69670"/>
        <function-ref name="write" scoped="" ref="0x2b76bac69800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b76bac642f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b76bac642f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac64670"/>
        <function-ref name="write" scoped="" ref="0x2b76bac64800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b76bac72e50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b76bac72e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac71210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b76bac6d670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b76bac6d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac6d9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac6db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b76bac2daa0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b76bac2daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac2de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b76bac2b770" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b76bac2b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac2baf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b76bac74e50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b76bac74e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac73210"/>
        <function-ref name="write" scoped="" ref="0x2b76bac733a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b76bac28670" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b76bac28670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bac289f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b76bac73670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b76bac73670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac739f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac73b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b76bac6be50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b76bac6be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac6a610"/>
        <function-ref name="write" scoped="" ref="0x2b76bac6a7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b76bac627a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b76bac627a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b76bac62b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b76bac62cb0"/>
        <function-ref name="write" scoped="" ref="0x2b76bac62e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b76bac61020"/>
        <function-ref name="readDone" scoped="" ref="0x2b76bac611b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b76bac5ab20" loc="54:../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b76bac5ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b76bac56020"/>
        <function-ref name="changed" scoped="" ref="0x2b76bac561b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b76bac56340"/>
        <function-ref name="setAddress" scoped="" ref="0x2b76bac564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b76bac59d20" loc="13:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b76bac59d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b76bac980e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b76bac94310" loc="5:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b76bac94310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b76bac94690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x2b76bac91880" loc="8:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b76bac91880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac91c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2b76bac86020" loc="8:../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b76bac86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac863a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x2b76bac7cbd0" loc="14:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b76bac7cbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac80020"/>
        <function-ref name="write" scoped="" ref="0x2b76bac801b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x2b76bac80530" loc="15:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x2b76bac80530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b76bac808b0"/>
        <function-ref name="stop" scoped="" ref="0x2b76bac80a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2b76bac81140" loc="11:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b76bac81140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bac814c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2b76bac85c50" loc="8:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b76bac85c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bacc3020"/>
        <function-ref name="write" scoped="" ref="0x2b76bacc31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2b76bacc3540" loc="11:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2b76bacc3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bacc38c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bacc3a50"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bacc3be0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bacc3d70"/>
        <function-ref name="get" scoped="" ref="0x2b76bacc2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bacc21b0"/>
        <function-ref name="set" scoped="" ref="0x2b76bacc2340"/>
        <function-ref name="clr" scoped="" ref="0x2b76bacc24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b76bacba910" loc="15:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b76bacba910"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba383020"/>
            <typename><typedef-ref name="TMicro" ref="0x2b76ba383390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b76bacbd780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2b76bacbf150" loc="11:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b76bacbf150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bacbf4d0"/>
        <function-ref name="write" scoped="" ref="0x2b76bacbf660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2b76bacbf9f0" loc="14:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2b76bacbf9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bacbfd70"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bacbe020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bacbe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bacbe340"/>
        <function-ref name="get" scoped="" ref="0x2b76bacbe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bacbe660"/>
        <function-ref name="set" scoped="" ref="0x2b76bacbe7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b76bacbe980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b76bacc1c90" loc="41:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b76bacc1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba383020"/>
            <typename><typedef-ref name="TMicro" ref="0x2b76ba383390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b76bacf0ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b76baceea90" loc="54:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b76baceea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba383020"/>
            <typename><typedef-ref name="TMicro" ref="0x2b76ba383390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b76bacdf8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b76bacde020" loc="55:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b76bacde020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba383020"/>
            <typename><typedef-ref name="TMicro" ref="0x2b76ba383390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76bacdee30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76bacdc800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76bacdc340"/>
        <function-ref name="overflow" scoped="" ref="0x2b76bacdccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x2b76bacd8530" loc="46:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b76bacd8530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba383020"/>
            <typename><typedef-ref name="TMicro" ref="0x2b76ba383390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76bacd73d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76bacd7d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76bacd7890"/>
        <function-ref name="overflow" scoped="" ref="0x2b76bacd6260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b76bad29020" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b76bad29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76bad293a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76bad29530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76bad296c0"/>
        <function-ref name="get" scoped="" ref="0x2b76bad29850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76bad299e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76bad29b70"/>
        <function-ref name="getMode" scoped="" ref="0x2b76bad29d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76bad28020"/>
        <function-ref name="overflow" scoped="" ref="0x2b76bad281b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b76bad28340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76bad284d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b76bacd4e50" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b76bacd4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba383020"/>
            <typename><typedef-ref name="TMicro" ref="0x2b76ba383390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76bacd3ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76bad2a670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76bad2a1b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b76bad2ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x2b76bacc4590" loc="3:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x2b76bacc4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bacc4910"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bacc4aa0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bacc4c30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bacc4dc0"/>
        <function-ref name="get" scoped="" ref="0x2b76bad24020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bad241b0"/>
        <function-ref name="set" scoped="" ref="0x2b76bad24340"/>
        <function-ref name="clr" scoped="" ref="0x2b76bad244d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b76bad21c50" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b76bad21c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bad20020"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bad201b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76bad20340"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bad204d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bad20660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76bad207f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bad20980"/>
        <function-ref name="get" scoped="" ref="0x2b76bad20b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76bad20ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76bad20e30"/>
        <function-ref name="set" scoped="" ref="0x2b76bad1f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76bad1f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76bad1f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76bad1f5d0"/>
        <function-ref name="clr" scoped="" ref="0x2b76bad1f760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b76bad239e0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b76bad239e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bad23d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bad21020"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bad211b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bad21340"/>
        <function-ref name="get" scoped="" ref="0x2b76bad214d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bad21660"/>
        <function-ref name="set" scoped="" ref="0x2b76bad217f0"/>
        <function-ref name="clr" scoped="" ref="0x2b76bad21980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b76bad25a10" loc="14:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b76bad25a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b76bad25d90"/>
        <function-ref name="stop" scoped="" ref="0x2b76bad1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b76bad0bcb0" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b76bad0bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b76bad0a0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b76bad0a230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b76bad0a3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b76bad0a550"/>
        <function-ref name="setCca" scoped="" ref="0x2b76bad0a6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b76bad0a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b76bad07990" loc="47:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b76bad07990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b76bad07d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2b76bad0b020" loc="45:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b76bad0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bad0b3a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bad0b530"/>
        <function-ref name="modify" scoped="" ref="0x2b76bad0b6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bad0b850"/>
        <function-ref name="resend" scoped="" ref="0x2b76bad0b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b76bad0e6c0" loc="44:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b76bad0e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b76bad0ea40"/>
        <function-ref name="stop" scoped="" ref="0x2b76bad0ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b76bad09150" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2b76bad09150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b76bad094d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b76bad58970" loc="51:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b76bad58970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b76bad58cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b76bad58e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b76bad57030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b76bad571c0"/>
        <function-ref name="setCca" scoped="" ref="0x2b76bad57350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b76bad574e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b76bad50950" loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b76bad50950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b76bad4e020"/>
        <function-ref name="clear" scoped="" ref="0x2b76bad4e750"/>
        <function-ref name="isValid" scoped="" ref="0x2b76bad4f780"/>
        <function-ref name="set" scoped="" ref="0x2b76bad4ee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b76bad39020" loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b76bad39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bad393a0"/>
        <function-ref name="write" scoped="" ref="0x2b76bad39530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b76bad39890" loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b76bad39890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bad39c10"/>
        <function-ref name="write" scoped="" ref="0x2b76bad39da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b76bad57900" loc="52:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b76bad57900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b76bad57c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2b76bad3c530" loc="72:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b76bad3c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bad3c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2b76bad4b880" loc="60:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2b76bad4b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b76bad4bc00"/>
        <function-ref name="disable" scoped="" ref="0x2b76bad4bd90"/>
        <function-ref name="captured" scoped="" ref="0x2b76bad44020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b76bad441b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2b76bad56ae0" loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x2b76bad56ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76bad52390"/>
        <function-ref name="fired" scoped="" ref="0x2b76bad54360"/>
        <function-ref name="startAt" scoped="" ref="0x2b76bad54ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76bad54820"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76bad52850"/>
        <function-ref name="start" scoped="" ref="0x2b76bad55970"/>
        <function-ref name="stop" scoped="" ref="0x2b76bad55e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b76bad52d00" loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b76bad52d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b76bad510a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b76bad51230"/>
        <function-ref name="getRssi" scoped="" ref="0x2b76bad513c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b76bad51550"/>
        <function-ref name="getPower" scoped="" ref="0x2b76bad516e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b76bad51870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2b76bad3e550" loc="68:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b76bad3e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bad3e8d0"/>
        <function-ref name="write" scoped="" ref="0x2b76bad3ea60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b76bad3ee00" loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b76bad3ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bad3d1c0"/>
        <function-ref name="write" scoped="" ref="0x2b76bad3d350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2b76bad32d40" loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b76bad32d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bad360e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b76bad36270"/>
        <function-ref name="sfd" scoped="" ref="0x2b76bad36400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b76bad59bc0" loc="50:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b76bad59bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bad58020"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bad581b0"/>
        <function-ref name="modify" scoped="" ref="0x2b76bad58340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bad584d0"/>
        <function-ref name="resend" scoped="" ref="0x2b76bad58660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2b76bad40d10" loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76bad40d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b76bad3f0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b76bad3f270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b76bad3f400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2b76bad3cc60" loc="73:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b76bad3cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bad3b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b76bad43820" loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b76bad43820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bad43ba0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bad43d30"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bad42020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bad421b0"/>
        <function-ref name="get" scoped="" ref="0x2b76bad42340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bad424d0"/>
        <function-ref name="set" scoped="" ref="0x2b76bad42660"/>
        <function-ref name="clr" scoped="" ref="0x2b76bad427f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76bad00c60" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76bad00c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bad59020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b76bad51bb0" loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76bad51bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b76bad50020"/>
        <function-ref name="getHeader" scoped="" ref="0x2b76bad501b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b76bad50340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b76bad45be0" loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b76bad45be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76bad4b020"/>
        <function-ref name="isSet" scoped="" ref="0x2b76bad4b1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bad4b340"/>
        <function-ref name="set" scoped="" ref="0x2b76bad4b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b76bad3b3e0" loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b76bad3b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bad3b960"/>
        <function-ref name="write" scoped="" ref="0x2b76bad3baf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b76bad40020" loc="65:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b76bad40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bad403a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bad40530"/>
        <function-ref name="request" scoped="" ref="0x2b76bad406c0"/>
        <function-ref name="granted" scoped="" ref="0x2b76bad40850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bad409e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2b76bad44500" loc="61:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2b76bad44500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bad44980"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bad44b10"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bad44ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bad44e30"/>
        <function-ref name="get" scoped="" ref="0x2b76bad43020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bad431b0"/>
        <function-ref name="set" scoped="" ref="0x2b76bad43340"/>
        <function-ref name="clr" scoped="" ref="0x2b76bad434d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b76bad38130" loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b76bad38130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bad384b0"/>
        <function-ref name="write" scoped="" ref="0x2b76bad38640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2b76bad389c0" loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b76bad389c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bad38d40"/>
        <function-ref name="write" scoped="" ref="0x2b76bad37020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b76bad3d6d0" loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b76bad3d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bad3da50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2b76bad42b40" loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2b76bad42b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bad41020"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bad411b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bad41340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bad414d0"/>
        <function-ref name="get" scoped="" ref="0x2b76bad41660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bad417f0"/>
        <function-ref name="set" scoped="" ref="0x2b76bad41980"/>
        <function-ref name="clr" scoped="" ref="0x2b76bad41b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b76bad366c0" loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76bad366c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76bad36a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76bad36bd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b76bad36d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76bad35020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76bad351b0"/>
        <function-ref name="get" scoped="" ref="0x2b76bad35340"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76bad354d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76bad35b10"/>
        <function-ref name="set" scoped="" ref="0x2b76bad35660"/>
        <function-ref name="led0On" scoped="" ref="0x2b76bad357f0"/>
        <function-ref name="led2On" scoped="" ref="0x2b76bad35980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b76bad3a5e0" loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b76bad3a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bad3a960"/>
        <function-ref name="write" scoped="" ref="0x2b76bad3aaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b76bad59320" loc="49:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b76bad59320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b76bad596a0"/>
        <function-ref name="stop" scoped="" ref="0x2b76bad59830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2b76bad3f780" loc="67:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b76bad3f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b76bad3fb00"/>
        <function-ref name="writeDone" scoped="" ref="0x2b76bad3fc90"/>
        <function-ref name="write" scoped="" ref="0x2b76bad3fe20"/>
        <function-ref name="beginRead" scoped="" ref="0x2b76bad3e020"/>
        <function-ref name="readDone" scoped="" ref="0x2b76bad3e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2b76bad3dde0" loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b76bad3dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bad3c180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2b76bad3be80" loc="76:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b76bad3be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bad3a220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b76bad560f0" loc="53:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2b76bad560f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b76bad56470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b76bae03c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b76bae03c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae02210"/>
        <function-ref name="write" scoped="" ref="0x2b76bae023a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b76bae0d020" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b76bae0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae0d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b76bae07c70" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b76bae07c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae05020"/>
        <function-ref name="write" scoped="" ref="0x2b76bae051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b76bae01670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b76bae01670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae019f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bae01b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b76badfae50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b76badfae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badf8210"/>
        <function-ref name="write" scoped="" ref="0x2b76badf83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b76bae01e50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b76bae01e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae00210"/>
        <function-ref name="write" scoped="" ref="0x2b76bae003a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b76baded2f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b76baded2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baded670"/>
        <function-ref name="write" scoped="" ref="0x2b76baded800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b76badef2f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b76badef2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badef670"/>
        <function-ref name="write" scoped="" ref="0x2b76badef800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b76bae0b370" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b76bae0b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae0b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b76badf5670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b76badf5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badf59f0"/>
        <function-ref name="write" scoped="" ref="0x2b76badf5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b76badf02f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b76badf02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badf0670"/>
        <function-ref name="write" scoped="" ref="0x2b76badf0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b76bae05c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b76bae05c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae04020"/>
        <function-ref name="write" scoped="" ref="0x2b76bae041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b76bae04c60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b76bae04c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae03020"/>
        <function-ref name="write" scoped="" ref="0x2b76bae031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b76badfb670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b76badfb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badfb9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76badfbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b76badfde50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b76badfde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badfc210"/>
        <function-ref name="write" scoped="" ref="0x2b76badfc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b76bae00670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b76bae00670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae009f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bae00b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b76bae0f8f0" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76bae0f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b76bae0fc70"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b76bae0fe00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b76bae0e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b76bae0ad00" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b76bae0ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae090a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b76bae09370" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b76bae09370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae097f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b76badf4a70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b76badf4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badf4df0"/>
        <function-ref name="write" scoped="" ref="0x2b76badf3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b76bae09ac0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b76bae09ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae09e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b76badf0ad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b76badf0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badf0e50"/>
        <function-ref name="write" scoped="" ref="0x2b76badef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b76bae0a060" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b76bae0a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae0a3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b76badf6e50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b76badf6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badf5210"/>
        <function-ref name="write" scoped="" ref="0x2b76badf53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b76bae04480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b76bae04480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae04800"/>
        <function-ref name="write" scoped="" ref="0x2b76bae04990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b76bae05480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b76bae05480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae05800"/>
        <function-ref name="write" scoped="" ref="0x2b76bae05990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b76bae0e940" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b76bae0e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae0ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b76badf7e50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b76badf7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badf6210"/>
        <function-ref name="write" scoped="" ref="0x2b76badf63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b76badf8670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b76badf8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badf89f0"/>
        <function-ref name="write" scoped="" ref="0x2b76badf8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b76badf6670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b76badf6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badf69f0"/>
        <function-ref name="write" scoped="" ref="0x2b76badf6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b76badeead0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b76badeead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badeee50"/>
        <function-ref name="write" scoped="" ref="0x2b76baded020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b76badefad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b76badefad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badefe50"/>
        <function-ref name="write" scoped="" ref="0x2b76badee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b76badfc670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b76badfc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badfc9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76badfcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b76badf8e50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b76badf8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badf7210"/>
        <function-ref name="write" scoped="" ref="0x2b76badf73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b76badf2ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b76badf2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badf2e50"/>
        <function-ref name="write" scoped="" ref="0x2b76badf0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b76badfe670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b76badfe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badfe9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76badfeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b76badedad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b76badedad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b76badede50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b76badec020"/>
        <function-ref name="write" scoped="" ref="0x2b76badec1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b76badec340"/>
        <function-ref name="readDone" scoped="" ref="0x2b76badec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b76bae0e2f0" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b76bae0e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae0e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b76bae07490" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b76bae07490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae07810"/>
        <function-ref name="write" scoped="" ref="0x2b76bae079a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b76bae03480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b76bae03480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae03800"/>
        <function-ref name="write" scoped="" ref="0x2b76bae03990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b76badfbe50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b76badfbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badfa210"/>
        <function-ref name="write" scoped="" ref="0x2b76badfa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b76bae00e50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b76bae00e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badfe210"/>
        <function-ref name="write" scoped="" ref="0x2b76badfe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b76badfa670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b76badfa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badfa9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76badfab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b76bae02670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b76bae02670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae029f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bae02b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b76bae0d670" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b76bae0d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae0d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b76bae02e50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b76bae02e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae01210"/>
        <function-ref name="write" scoped="" ref="0x2b76bae013a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76badb4c30" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76badb4c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bae0f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bae0f1b0"/>
        <function-ref name="request" scoped="" ref="0x2b76bae0f340"/>
        <function-ref name="granted" scoped="" ref="0x2b76bae0f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bae0f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b76bae08160" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b76bae08160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae084e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b76bae08e00" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b76bae08e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae071c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b76badf22f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b76badf22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badf2670"/>
        <function-ref name="write" scoped="" ref="0x2b76badf2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b76badf3ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b76badf3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badf3e50"/>
        <function-ref name="write" scoped="" ref="0x2b76badf2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b76bae0a6b0" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b76bae0a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae0aa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b76badf32f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b76badf32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badf3670"/>
        <function-ref name="write" scoped="" ref="0x2b76badf3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b76badee2f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b76badee2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badee670"/>
        <function-ref name="write" scoped="" ref="0x2b76badee800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b76badfce50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b76badfce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badfb210"/>
        <function-ref name="write" scoped="" ref="0x2b76badfb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b76badf7670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b76badf7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badf79f0"/>
        <function-ref name="write" scoped="" ref="0x2b76badf7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b76bae0dcc0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b76bae0dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae0b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b76bae0b9c0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b76bae0b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae0bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b76badfee50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b76badfee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badfd210"/>
        <function-ref name="write" scoped="" ref="0x2b76badfd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b76bae087b0" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b76bae087b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae08b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b76badfd670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b76badfd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badfd9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76badfdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b76badf5e50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b76badf5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76badf4610"/>
        <function-ref name="write" scoped="" ref="0x2b76badf47a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b76badec7a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b76badec7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b76badecb20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b76badeccb0"/>
        <function-ref name="write" scoped="" ref="0x2b76badece40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b76badeb020"/>
        <function-ref name="readDone" scoped="" ref="0x2b76badeb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b76bae3cdf0" loc="42:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b76bae3cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bae381c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b76bae38350"/>
        <function-ref name="sfd" scoped="" ref="0x2b76bae384e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b76bae387c0" loc="43:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b76bae387c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bae38b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b76bae37020" loc="44:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2b76bae37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b76bae373a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b76bae3c5c0" loc="41:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b76bae3c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b76bae3c940"/>
        <function-ref name="stop" scoped="" ref="0x2b76bae3cad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2b76bae30380" loc="54:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2b76bae30380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bae30700"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bae30890"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bae30a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bae30bb0"/>
        <function-ref name="get" scoped="" ref="0x2b76bae30d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bae2f020"/>
        <function-ref name="set" scoped="" ref="0x2b76bae2f1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b76bae2f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b76bae29b90" loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b76bae29b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b76bae28020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b76bae281b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b76bae28340"/>
        <function-ref name="syncDone" scoped="" ref="0x2b76bae284d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b76bae28660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b76bae287f0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b76bae28980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b76bae28b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b76bae28ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b76bae28e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b76bae27020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b76bae271b0"/>
        <function-ref name="sync" scoped="" ref="0x2b76bae27340"/>
        <function-ref name="getChannel" scoped="" ref="0x2b76bae275d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b76bae27760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2b76bae119d0" loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x2b76bae119d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76bae11d50"/>
        <function-ref name="runTask" scoped="" ref="0x2b76bae10020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b76bae27d70" loc="65:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b76bae27d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b76bae24330"/>
        <function-ref name="clear" scoped="" ref="0x2b76bae24a60"/>
        <function-ref name="isValid" scoped="" ref="0x2b76bae25ba0"/>
        <function-ref name="set" scoped="" ref="0x2b76bae23210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2b76bae2f6b0" loc="55:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2b76bae2f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bae2fa30"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bae2fbc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bae2fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bae2e020"/>
        <function-ref name="get" scoped="" ref="0x2b76bae2e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bae2e340"/>
        <function-ref name="set" scoped="" ref="0x2b76bae2e4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b76bae2e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b76bae22cb0" loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b76bae22cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae200a0"/>
        <function-ref name="write" scoped="" ref="0x2b76bae20230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b76bae20590" loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b76bae20590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae20910"/>
        <function-ref name="write" scoped="" ref="0x2b76bae20aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2b76bae1f6d0" loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b76bae1f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae1fa50"/>
        <function-ref name="write" scoped="" ref="0x2b76bae1fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b76bae2a330" loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b76bae2a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b76bae2a6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b76bae2a840"/>
        <function-ref name="getRssi" scoped="" ref="0x2b76bae2a9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b76bae2ab60"/>
        <function-ref name="getPower" scoped="" ref="0x2b76bae2acf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b76bae2ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b76bae33550" loc="49:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b76bae33550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bae338d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b76bae33a60"/>
        <function-ref name="sfd" scoped="" ref="0x2b76bae33bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2b76bae2b3a0" loc="60:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b76bae2b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae2b720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b76bae31020" loc="53:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b76bae31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bae313a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bae31530"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bae316c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bae31850"/>
        <function-ref name="get" scoped="" ref="0x2b76bae319e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bae31b70"/>
        <function-ref name="set" scoped="" ref="0x2b76bae31d00"/>
        <function-ref name="clr" scoped="" ref="0x2b76bae30020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2b76bae1e020" loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b76bae1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae1e3a0"/>
        <function-ref name="write" scoped="" ref="0x2b76bae1e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76bae34620" loc="47:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76bae34620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bae349a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b76bae291e0" loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76bae291e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b76bae29560"/>
        <function-ref name="getHeader" scoped="" ref="0x2b76bae296f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b76bae29880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b76bae32020" loc="50:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b76bae32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bae323a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b76bae2d6e0" loc="58:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b76bae2d6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bae2da60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bae2dbf0"/>
        <function-ref name="request" scoped="" ref="0x2b76bae2dd80"/>
        <function-ref name="granted" scoped="" ref="0x2b76bae2c020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bae2c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b76bae20e00" loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b76bae20e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae1f1c0"/>
        <function-ref name="write" scoped="" ref="0x2b76bae1f350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2b76bae2c530" loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b76bae2c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b76bae2c8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b76bae2ca40"/>
        <function-ref name="write" scoped="" ref="0x2b76bae2cbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b76bae2cd60"/>
        <function-ref name="readDone" scoped="" ref="0x2b76bae2b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b76bae1e8b0" loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b76bae1e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae1ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b76bae327c0" loc="51:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2b76bae327c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b76bae32b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b76bae1d150" loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76bae1d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76bae1d4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76bae1d660"/>
        <function-ref name="led1On" scoped="" ref="0x2b76bae1d7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76bae1d980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76bae1db10"/>
        <function-ref name="get" scoped="" ref="0x2b76bae1dca0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76bae1de30"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76bae1c4d0"/>
        <function-ref name="set" scoped="" ref="0x2b76bae1c020"/>
        <function-ref name="led0On" scoped="" ref="0x2b76bae1c1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b76bae1c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b76bae223e0" loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b76bae223e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bae22760"/>
        <function-ref name="write" scoped="" ref="0x2b76bae228f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2b76bae23b10" loc="67:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b76bae23b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae22020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2b76bae2ea50" loc="56:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b76bae2ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76bae2edd0"/>
        <function-ref name="disable" scoped="" ref="0x2b76bae2d020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b76bae2d1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b76bae2d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2b76bae2bad0" loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b76bae2bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bae2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b76bae34ca0" loc="48:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b76bae34ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b76bae330a0"/>
        <function-ref name="stop" scoped="" ref="0x2b76bae33230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b76baecba70" loc="44:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b76baecba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b76baecbdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b76bae70660" loc="41:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b76bae70660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b76bae709e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b76bae70b70"/>
        <function-ref name="getRssi" scoped="" ref="0x2b76bae70d00"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b76bae6d020"/>
        <function-ref name="getPower" scoped="" ref="0x2b76bae6d1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b76bae6d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b76baeca550" loc="46:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b76baeca550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b76baec9b00"/>
        <function-ref name="clear" scoped="" ref="0x2b76baec72a0"/>
        <function-ref name="isValid" scoped="" ref="0x2b76baec93d0"/>
        <function-ref name="set" scoped="" ref="0x2b76baec79d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b76baecb0c0" loc="43:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76baecb0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b76baecb440"/>
        <function-ref name="getHeader" scoped="" ref="0x2b76baecb5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b76baecb760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b76baec2480" loc="48:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b76baec2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76baec2800"/>
        <function-ref name="isSet" scoped="" ref="0x2b76baec2990"/>
        <function-ref name="cancel" scoped="" ref="0x2b76baec2b20"/>
        <function-ref name="set" scoped="" ref="0x2b76baec2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b76baec6660" loc="47:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b76baec6660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b76baec5ce0"/>
        <function-ref name="clear" scoped="" ref="0x2b76baec3460"/>
        <function-ref name="isValid" scoped="" ref="0x2b76baec55b0"/>
        <function-ref name="set" scoped="" ref="0x2b76baec3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b76bae6d6e0" loc="42:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b76bae6d6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b76bae6da60"/>
        <function-ref name="noAck" scoped="" ref="0x2b76bae6dbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b76bae6dd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b76baebc020" loc="49:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b76baebc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b76baebc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b76baec1d10" loc="46:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b76baec1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b76baebe0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b76baebe270"/>
        <function-ref name="getRssi" scoped="" ref="0x2b76baebe400"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b76baebe590"/>
        <function-ref name="getPower" scoped="" ref="0x2b76baebe720"/>
        <function-ref name="getLqi" scoped="" ref="0x2b76baebe8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b76baeb24a0" loc="56:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b76baeb24a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76baeb2820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76baeb29b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76baeb2b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76baeb2cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76baeb2e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b76baebca80" loc="51:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b76baebca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b76baeb9020"/>
        <function-ref name="clear" scoped="" ref="0x2b76baeb9750"/>
        <function-ref name="isValid" scoped="" ref="0x2b76baeba8d0"/>
        <function-ref name="set" scoped="" ref="0x2b76baeb9e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b76baebd640" loc="48:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76baebd640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b76baebd9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b76baebdb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b76baebdce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b76baeb48b0" loc="53:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b76baeb48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76baeb4c30"/>
        <function-ref name="isSet" scoped="" ref="0x2b76baeb4dc0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76baeb2020"/>
        <function-ref name="set" scoped="" ref="0x2b76baeb21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b76baeae820" loc="57:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b76baeae820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76baeb04c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b76baeb0b80" loc="58:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b76baeb0b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76baeaf7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b76baeb8af0" loc="52:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b76baeb8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b76baeb50d0"/>
        <function-ref name="clear" scoped="" ref="0x2b76baeb5800"/>
        <function-ref name="isValid" scoped="" ref="0x2b76baeb6970"/>
        <function-ref name="set" scoped="" ref="0x2b76baeb4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b76baebec50" loc="47:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b76baebec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b76baebd020"/>
        <function-ref name="noAck" scoped="" ref="0x2b76baebd1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b76baebd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b76baf1d4e0" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b76baf1d4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76baf14150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b76baf147c0" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b76baf147c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76baf13620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76baf12020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76baf13ae0"/>
        <function-ref name="overflow" scoped="" ref="0x2b76baf124e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b76baf0d7d0" loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2b76baf0d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76baeffc40"/>
        <function-ref name="fired" scoped="" ref="0x2b76baf01260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b76baeff020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b76baf01b60"/>
        <function-ref name="getdt" scoped="" ref="0x2b76baefe590"/>
        <function-ref name="gett0" scoped="" ref="0x2b76baefe110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76baf016e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b76baf0c400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b76baeff630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b76baf0c8d0"/>
        <function-ref name="stop" scoped="" ref="0x2b76baf0cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b76baefeb80" loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b76baefeb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76baefc7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76baf0e110" loc="45:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76baf0e110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76baf0e490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b76baf30af0" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b76baf30af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76baf2d390"/>
        <function-ref name="fired" scoped="" ref="0x2b76baf2e360"/>
        <function-ref name="startAt" scoped="" ref="0x2b76baf2ece0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76baf2e820"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76baf2d850"/>
        <function-ref name="start" scoped="" ref="0x2b76baf2f970"/>
        <function-ref name="stop" scoped="" ref="0x2b76baf2fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76baf302a0" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76baf302a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76baf30620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b76bbd6d260" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b76bbd6d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76bbd6bb30"/>
        <function-ref name="fired" scoped="" ref="0x2b76bbd6ca60"/>
        <function-ref name="startAt" scoped="" ref="0x2b76bbd6b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76bbd6b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76bbd6a020"/>
        <function-ref name="start" scoped="" ref="0x2b76bbd6c090"/>
        <function-ref name="stop" scoped="" ref="0x2b76bbd6c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76bbd6e9d0" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76bbd6e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bbd6ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b76bbd55a80" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b76bbd55a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76bbd55e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76bbd54020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76bbd541b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76bbd54340"/>
        <function-ref name="fired" scoped="" ref="0x2b76bbd544d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b76bbd57020" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b76bbd57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76bbd573a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76bbd57530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76bbd576c0"/>
        <function-ref name="get" scoped="" ref="0x2b76bbd57850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76bbd579e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76bbd57b70"/>
        <function-ref name="getMode" scoped="" ref="0x2b76bbd57d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76bbd56020"/>
        <function-ref name="overflow" scoped="" ref="0x2b76bbd561b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b76bbd56340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76bbd564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b76bbd56760" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76bbd56760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76bbd56ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2b76bbd56c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76bbd56e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76bbd55020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76bbd551b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76bbd55340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76bbd554d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76bbd55660"/>
        <function-ref name="setControl" scoped="" ref="0x2b76bbd557f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b76bbd4b760" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b76bbd4b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b76bbd4bae0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b76bbd4bc70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b76bbd4be00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b76bbd4a020"/>
        <function-ref name="fired" scoped="" ref="0x2b76bbd4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b76bbd4edd0" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b76bbd4edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76bbd4d180"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b76bbd4d310"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76bbd4d4a0"/>
        <function-ref name="get" scoped="" ref="0x2b76bbd4d630"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76bbd4d7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76bbd4d950"/>
        <function-ref name="getMode" scoped="" ref="0x2b76bbd4dae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76bbd4dc70"/>
        <function-ref name="overflow" scoped="" ref="0x2b76bbd4de00"/>
        <function-ref name="setMode" scoped="" ref="0x2b76bbd4c020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b76bbd4c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b76bbd52bf0" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b76bbd52bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76bbd4e4e0"/>
        <function-ref name="fired" scoped="" ref="0x2b76bbd4f4e0"/>
        <function-ref name="startAt" scoped="" ref="0x2b76bbd4fe60"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76bbd4f9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76bbd4e9a0"/>
        <function-ref name="start" scoped="" ref="0x2b76bbd51a80"/>
        <function-ref name="stop" scoped="" ref="0x2b76bbd4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76bbd52360" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76bbd52360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bbd526e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b76bbd4c440" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b76bbd4c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b76bbd4c7c0"/>
        <function-ref name="getControl" scoped="" ref="0x2b76bbd4c950"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b76bbd4cae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b76bbd4cc70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b76bbd4ce00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b76bbd4b020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76bbd4b1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b76bbd4b340"/>
        <function-ref name="setControl" scoped="" ref="0x2b76bbd4b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b76baf4c080" loc="43:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b76baf4c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76baf4b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76baf4b9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76baf4b4e0"/>
        <function-ref name="overflow" scoped="" ref="0x2b76baf4be60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b76baf430f0" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2b76baf430f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76baf42020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76baf429a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76baf424e0"/>
        <function-ref name="overflow" scoped="" ref="0x2b76baf42e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b76baf47cd0" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b76baf47cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76baf46b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76baf45550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76baf45090"/>
        <function-ref name="overflow" scoped="" ref="0x2b76baf45a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b76bbd685f0" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b76bbd685f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76bbd65e50"/>
        <function-ref name="fired" scoped="" ref="0x2b76bbd66e00"/>
        <function-ref name="startAt" scoped="" ref="0x2b76bbd65800"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76bbd65340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76bbd64340"/>
        <function-ref name="start" scoped="" ref="0x2b76bbd66430"/>
        <function-ref name="stop" scoped="" ref="0x2b76bbd66940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b76bbd62d20" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b76bbd62d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76bbd5e670"/>
        <function-ref name="fired" scoped="" ref="0x2b76bbd5f550"/>
        <function-ref name="startAt" scoped="" ref="0x2b76bbd5e020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76bbd5fa10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76bbd5eb30"/>
        <function-ref name="start" scoped="" ref="0x2b76bbd60b60"/>
        <function-ref name="stop" scoped="" ref="0x2b76bbd5f090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b76bbd649b0" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b76bbd649b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76bbd637e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76bbd621b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76bbd63ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2b76bbd62670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b76bafbe020" loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2b76bafbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76bafbe3a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b76bafbe530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b76baf61cd0" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b76baf61cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76baf5d670"/>
        <function-ref name="fired" scoped="" ref="0x2b76baf5e550"/>
        <function-ref name="startAt" scoped="" ref="0x2b76baf5d020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76baf5ea10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76baf5db30"/>
        <function-ref name="start" scoped="" ref="0x2b76baf5fb60"/>
        <function-ref name="stop" scoped="" ref="0x2b76baf5e090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b76baf66830" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b76baf66830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76baf62cf0"/>
        <function-ref name="fired" scoped="" ref="0x2b76baf63300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b76baf620d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b76baf63c00"/>
        <function-ref name="getdt" scoped="" ref="0x2b76baf61660"/>
        <function-ref name="gett0" scoped="" ref="0x2b76baf611e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76baf63780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b76baf65480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b76baf626e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b76baf65950"/>
        <function-ref name="stop" scoped="" ref="0x2b76baf65e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b76bafd1a00" loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2b76bafd1a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76bafd1d80"/>
        <function-ref name="runTask" scoped="" ref="0x2b76bafcf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b76bafd6640" loc="49:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2b76bafd6640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76bafd2c40"/>
        <function-ref name="fired" scoped="" ref="0x2b76bafd31e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b76bafd2020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b76bafd3ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b76bafd1590"/>
        <function-ref name="gett0" scoped="" ref="0x2b76bafd1110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76bafd3660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b76bafd4390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b76bafd2630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b76bafd4860"/>
        <function-ref name="stop" scoped="" ref="0x2b76bafd4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b76bafdc150" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b76bafdc150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76bafd7700"/>
        <function-ref name="fired" scoped="" ref="0x2b76bafdac30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b76bafd9a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b76bafd95b0"/>
        <function-ref name="getdt" scoped="" ref="0x2b76bafd6090"/>
        <function-ref name="gett0" scoped="" ref="0x2b76bafd7ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76bafd9110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b76bafdcd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b76bafd70d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b76bafda2a0"/>
        <function-ref name="stop" scoped="" ref="0x2b76bafda790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b76bafcd2b0" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b76bafcd2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76bafcc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b76bafcc690" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b76bafcc690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76bafcb5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76bafca020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76bafcba70"/>
        <function-ref name="overflow" scoped="" ref="0x2b76bafca4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b76bafc38c0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b76bafc38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76bb013cf0"/>
        <function-ref name="fired" scoped="" ref="0x2b76bb015320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b76bb0130d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b76bb015c20"/>
        <function-ref name="getdt" scoped="" ref="0x2b76bb012660"/>
        <function-ref name="gett0" scoped="" ref="0x2b76bb0121e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76bb0157a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b76bb0164e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b76bb0136e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b76bb0169b0"/>
        <function-ref name="stop" scoped="" ref="0x2b76bb016e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b76bb01e2c0" loc="49:../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2b76bb01e2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba384020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b76ba384390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76bb01a870"/>
        <function-ref name="fired" scoped="" ref="0x2b76bb01de40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b76bb01cc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b76bb01c780"/>
        <function-ref name="getdt" scoped="" ref="0x2b76bb0191e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b76bb01acf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76bb01c300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b76bb01d020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b76bb01a260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b76bb01d4f0"/>
        <function-ref name="stop" scoped="" ref="0x2b76bb01d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b76bb002c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b76bb002c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb001210"/>
        <function-ref name="write" scoped="" ref="0x2b76bb0013a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b76bb00b020" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b76bb00b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bb00b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b76bb005c70" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b76bb005c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb004020"/>
        <function-ref name="write" scoped="" ref="0x2b76bb0041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b76bafff670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b76bafff670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bafff9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bafffb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b76baff8e50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b76baff8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baff7210"/>
        <function-ref name="write" scoped="" ref="0x2b76baff73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b76bafffe50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b76bafffe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baffe210"/>
        <function-ref name="write" scoped="" ref="0x2b76baffe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b76bb0512f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b76bb0512f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb051670"/>
        <function-ref name="write" scoped="" ref="0x2b76bb051800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b76bb0532f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b76bb0532f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb053670"/>
        <function-ref name="write" scoped="" ref="0x2b76bb053800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b76bb00a370" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b76bb00a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bb00a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b76baff4670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b76baff4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baff49f0"/>
        <function-ref name="write" scoped="" ref="0x2b76baff4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b76bb0542f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b76bb0542f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb054670"/>
        <function-ref name="write" scoped="" ref="0x2b76bb054800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b76bb004c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b76bb004c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb003020"/>
        <function-ref name="write" scoped="" ref="0x2b76bb0031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b76bb003c60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b76bb003c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb002020"/>
        <function-ref name="write" scoped="" ref="0x2b76bb0021b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b76baffa670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b76baffa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baffa9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76baffab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b76baffce50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b76baffce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baffb210"/>
        <function-ref name="write" scoped="" ref="0x2b76baffb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b76baffe670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b76baffe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baffe9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76baffeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b76bb00e970" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b76bb00e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b76bb00ecf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b76bb00ee80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b76bb00d030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b76bb009d00" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b76bb009d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bb0080a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b76bb008370" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b76bb008370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bb0087f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b76baff3a70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b76baff3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baff3df0"/>
        <function-ref name="write" scoped="" ref="0x2b76baff1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b76bb008ac0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b76bb008ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bb008e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b76bb054ad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b76bb054ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb054e50"/>
        <function-ref name="write" scoped="" ref="0x2b76bb053020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b76bb009060" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b76bb009060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bb0093e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b76baff5e50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b76baff5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baff4210"/>
        <function-ref name="write" scoped="" ref="0x2b76baff43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b76bb003480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b76bb003480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb003800"/>
        <function-ref name="write" scoped="" ref="0x2b76bb003990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b76bb004480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b76bb004480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb004800"/>
        <function-ref name="write" scoped="" ref="0x2b76bb004990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b76bb00d950" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b76bb00d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bb00dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b76baff6e50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b76baff6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baff5210"/>
        <function-ref name="write" scoped="" ref="0x2b76baff53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b76baff7670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b76baff7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baff79f0"/>
        <function-ref name="write" scoped="" ref="0x2b76baff7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b76baff5670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b76baff5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baff59f0"/>
        <function-ref name="write" scoped="" ref="0x2b76baff5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b76bb052ad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b76bb052ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb052e50"/>
        <function-ref name="write" scoped="" ref="0x2b76bb051020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b76bb053ad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b76bb053ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb053e50"/>
        <function-ref name="write" scoped="" ref="0x2b76bb052020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b76baffb670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b76baffb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baffb9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76baffbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b76baff7e50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b76baff7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baff6210"/>
        <function-ref name="write" scoped="" ref="0x2b76baff63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b76bb055ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b76bb055ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb055e50"/>
        <function-ref name="write" scoped="" ref="0x2b76bb054020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b76baffd670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b76baffd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baffd9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76baffdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b76bb051ad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b76bb051ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b76bb051e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b76bb04f020"/>
        <function-ref name="write" scoped="" ref="0x2b76bb04f1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b76bb04f340"/>
        <function-ref name="readDone" scoped="" ref="0x2b76bb04f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b76bb00d300" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b76bb00d300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bb00d680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b76bb005490" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b76bb005490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb005810"/>
        <function-ref name="write" scoped="" ref="0x2b76bb0059a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b76bb002480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b76bb002480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb002800"/>
        <function-ref name="write" scoped="" ref="0x2b76bb002990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b76baffae50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b76baffae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baff8210"/>
        <function-ref name="write" scoped="" ref="0x2b76baff83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b76baffee50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b76baffee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baffd210"/>
        <function-ref name="write" scoped="" ref="0x2b76baffd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b76baff8670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b76baff8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baff89f0"/>
        <function-ref name="write" scoped="" ref="0x2b76baff8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b76bb001670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b76bb001670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb0019f0"/>
        <function-ref name="write" scoped="" ref="0x2b76bb001b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b76bb00b670" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b76bb00b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bb00b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b76bb001e50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b76bb001e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bafff210"/>
        <function-ref name="write" scoped="" ref="0x2b76bafff3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76bb00fd00" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76bb00fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bb00e0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bb00e230"/>
        <function-ref name="request" scoped="" ref="0x2b76bb00e3c0"/>
        <function-ref name="granted" scoped="" ref="0x2b76bb00e550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bb00e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b76bb007160" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b76bb007160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bb0074e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b76bb007e00" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b76bb007e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bb0051c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b76bb0552f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b76bb0552f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb055670"/>
        <function-ref name="write" scoped="" ref="0x2b76bb055800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b76baff1ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b76baff1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baff1e50"/>
        <function-ref name="write" scoped="" ref="0x2b76bb055020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b76bb0096b0" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b76bb0096b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bb009a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b76baff12f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b76baff12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baff1670"/>
        <function-ref name="write" scoped="" ref="0x2b76baff1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b76bb0522f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b76bb0522f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76bb052670"/>
        <function-ref name="write" scoped="" ref="0x2b76bb052800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b76baffbe50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b76baffbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baffa210"/>
        <function-ref name="write" scoped="" ref="0x2b76baffa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b76baff6670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b76baff6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baff69f0"/>
        <function-ref name="write" scoped="" ref="0x2b76baff6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b76bb00bcc0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b76bb00bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bb00a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b76bb00a9c0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b76bb00a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bb00ad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b76baffde50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b76baffde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baffc210"/>
        <function-ref name="write" scoped="" ref="0x2b76baffc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b76bb0077b0" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b76bb0077b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b76bb007b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b76baffc670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b76baffc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baffc9f0"/>
        <function-ref name="write" scoped="" ref="0x2b76baffcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b76baff4e50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b76baff4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b76baff3610"/>
        <function-ref name="write" scoped="" ref="0x2b76baff37a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b76bb04f7a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b76bb04f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b76bb04fb20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b76bb04fcb0"/>
        <function-ref name="write" scoped="" ref="0x2b76bb04fe40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b76bb04e020"/>
        <function-ref name="readDone" scoped="" ref="0x2b76bb04e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b76bb026a20" loc="46:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b76bb026a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b76bb026da0"/>
        <function-ref name="rand32" scoped="" ref="0x2b76bb023020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b76bb024920" loc="45:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2b76bb024920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bb026560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76bb02a990" loc="44:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76bb02a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bb02ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b76bb089a20" loc="48:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b76bb089a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b76bb089da0"/>
        <function-ref name="rand32" scoped="" ref="0x2b76bb088020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b76bb08a940" loc="47:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2b76bb08a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bb089560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76bb08a080" loc="46:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76bb08a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bb08a400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b76bb028aa0" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b76bb028aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b76bb028e20"/>
        <function-ref name="toIdle" scoped="" ref="0x2b76bb08b020"/>
        <function-ref name="isState" scoped="" ref="0x2b76bb08b1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b76bb08b340"/>
        <function-ref name="requestState" scoped="" ref="0x2b76bb08b4d0"/>
        <function-ref name="forceState" scoped="" ref="0x2b76bb08b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b76bb072020" loc="44:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b76bb072020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb0723a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb072530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb0726c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb072850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb0729e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b76bb073220" loc="40:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b76bb073220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb0735a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb073730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb0738c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb073a50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb073be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b76bb06de60" loc="45:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b76bb06de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb06c210"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb06c3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb06c530"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb06c6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb06c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b76bb070a10" loc="40:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b76bb070a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb070d90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb06d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb06d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb06d340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb06d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b76bb06b8f0" loc="47:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b76bb06b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b76bb06bc70"/>
        <function-ref name="rand32" scoped="" ref="0x2b76bb06be00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76bb06d750" loc="41:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76bb06d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bb06dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b76bb06a170" loc="48:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76bb06a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb06a4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b76bb06a680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b76bb06a810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2b76bb06cae0" loc="46:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b76bb06cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b76bb06ce60"/>
        <function-ref name="toIdle" scoped="" ref="0x2b76bb06b020"/>
        <function-ref name="isState" scoped="" ref="0x2b76bb06b1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b76bb06b340"/>
        <function-ref name="requestState" scoped="" ref="0x2b76bb06b4d0"/>
        <function-ref name="forceState" scoped="" ref="0x2b76bb06b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b76bb06e690" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b76bb06e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b76bb06ea10"/>
        <function-ref name="toIdle" scoped="" ref="0x2b76bb06eba0"/>
        <function-ref name="isState" scoped="" ref="0x2b76bb06ed30"/>
        <function-ref name="isIdle" scoped="" ref="0x2b76bb0bf020"/>
        <function-ref name="requestState" scoped="" ref="0x2b76bb0bf1b0"/>
        <function-ref name="forceState" scoped="" ref="0x2b76bb0bf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b76bb0b9950" loc="47:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b76bb0b9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb0b9cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b76bb0bca90" loc="42:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b76bb0bca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb0bce10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b76bb0b9200" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b76bb0b9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb0b9580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b76bb0b43f0" loc="49:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b76bb0b43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb0b4770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76bb0b5b50" loc="45:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76bb0b5b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bb0b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b76bb0b8e20" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b76bb0b8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb0b51c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b76bb0b4a70" loc="50:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76bb0b4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb0b4df0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b76bb0b3020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b76bb0b31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b76bb0b5550" loc="44:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b76bb0b5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb0b58d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b76bb0ec020" loc="75:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b76bb0ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb0ec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b76bb0ec6b0" loc="76:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b76bb0ec6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb0eca30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb0ecbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb0ecd50"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb0eb020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb0eb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b76bb0f18e0" loc="65:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b76bb0f18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb0f1c60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb0f1df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb0ef020"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb0ef1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb0ef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b76bb0efc90" loc="68:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b76bb0efc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb0ee0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb0ee230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb0ee3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb0ee550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb0ee6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b76bb0ef5e0" loc="66:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b76bb0ef5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb0ef960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76bb0f2be0" loc="64:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76bb0f2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bb0f1020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bb0f11b0"/>
        <function-ref name="request" scoped="" ref="0x2b76bb0f1340"/>
        <function-ref name="granted" scoped="" ref="0x2b76bb0f14d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bb0f1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b76bb0eea50" loc="69:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b76bb0eea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb0eedd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b76bb0ed170" loc="71:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b76bb0ed170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76bb0ed4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76bb0ed680"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb0ed810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb0ed9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76bb0edb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b76bb0e2d70" loc="58:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b76bb0e2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb0e1180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb0e1310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb0e14a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb0e1630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb0e17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b76bb0e1b10" loc="59:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b76bb0e1b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb0e0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2b76bb11bdb0" loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x2b76bb11bdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76bb11a180"/>
        <function-ref name="runTask" scoped="" ref="0x2b76bb11a310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b76bb0e02f0" loc="60:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b76bb0e02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b76bb0e0670"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b76bb0e0800"/>
        <function-ref name="getRssi" scoped="" ref="0x2b76bb0e0990"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b76bb0e0b20"/>
        <function-ref name="getPower" scoped="" ref="0x2b76bb0e0cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b76bb0e0e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b76bb0e5a20" loc="51:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b76bb0e5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb0e5da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb0e3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb0e31b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb0e3340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb0e34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b76bb0dfb70" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b76bb0dfb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b76bb0de020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b76bb0de1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b76bb0de340"/>
        <function-ref name="dequeue" scoped="" ref="0x2b76bb0de4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b76bb0df170" loc="61:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76bb0df170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb0df4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b76bb0df680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b76bb0df810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b76bb0e5370" loc="49:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2b76bb0e5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb0e56f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76bb0e77b0" loc="46:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76bb0e77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bb0e7b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bb0e7cc0"/>
        <function-ref name="request" scoped="" ref="0x2b76bb0e7e50"/>
        <function-ref name="granted" scoped="" ref="0x2b76bb0e6020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bb0e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b76bb0e64d0" loc="48:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2b76bb0e64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb0e6850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb0e69e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb0e6b70"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb0e6d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb0e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b76bb0e3840" loc="52:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b76bb0e3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb0e3bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b76bb0e2020" loc="54:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b76bb0e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76bb0e23a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76bb0e2530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb0e26c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb0e2850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76bb0e29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76bb0fbdd0" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76bb0fbdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bb0fa180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b76bb0fa410" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b76bb0fa410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b76bb0fa790"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b76bb0fa920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b76bb0faab0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b76bb0fac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b76bb157b80" loc="46:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b76bb157b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b76bb156020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b76bb1561b0"/>
        <function-ref name="start" scoped="" ref="0x2b76bb156340"/>
        <function-ref name="stop" scoped="" ref="0x2b76bb1564d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b76bb155860" loc="51:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b76bb155860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb155be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb155d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb154020"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb1541b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb154340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b76bb154690" loc="52:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b76bb154690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb154a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b76bb15cce0" loc="43:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b76bb15cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb1590a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb159230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb1593c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb159550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb1596e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b76bb157080" loc="45:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b76bb157080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b76bb157400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b76bb157590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b76bb157720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b76bb1578b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2b76bb156800" loc="47:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2b76bb156800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b76bb156b80"/>
        <function-ref name="toIdle" scoped="" ref="0x2b76bb156d10"/>
        <function-ref name="isState" scoped="" ref="0x2b76bb155020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b76bb1551b0"/>
        <function-ref name="requestState" scoped="" ref="0x2b76bb155340"/>
        <function-ref name="forceState" scoped="" ref="0x2b76bb1554d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b76bb154d90" loc="53:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2b76bb154d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b76bb153180"/>
        <function-ref name="stopDone" scoped="" ref="0x2b76bb153310"/>
        <function-ref name="start" scoped="" ref="0x2b76bb1534a0"/>
        <function-ref name="stop" scoped="" ref="0x2b76bb153630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b76bb159980" loc="44:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b76bb159980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb159d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b76bb1502d0" loc="41:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b76bb1502d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b76bb150650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b76bb1507e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b76bb150970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b76bb150b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b76bb152580" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b76bb152580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b76bb152900"/>
        <function-ref name="toIdle" scoped="" ref="0x2b76bb152a90"/>
        <function-ref name="isState" scoped="" ref="0x2b76bb152c20"/>
        <function-ref name="isIdle" scoped="" ref="0x2b76bb152db0"/>
        <function-ref name="requestState" scoped="" ref="0x2b76bb151020"/>
        <function-ref name="forceState" scoped="" ref="0x2b76bb1511b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b76bb143d70" loc="45:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b76bb143d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb142180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb142310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb1424a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb142630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb1427c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b76bb146340" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b76bb146340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb1466c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb146850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb1469e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb146b70"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb146d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b76bb143020" loc="41:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b76bb143020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b76bb1433a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b76bb143530"/>
        <function-ref name="getRetries" scoped="" ref="0x2b76bb1436c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b76bb143850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b76bb1439e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b76bb13e1a0" loc="44:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76bb13e1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b76bb13e520"/>
        <function-ref name="noAck" scoped="" ref="0x2b76bb13e6b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b76bb13e840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b76bb141400" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b76bb141400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b76bb141780"/>
        <function-ref name="setRetries" scoped="" ref="0x2b76bb141910"/>
        <function-ref name="getRetries" scoped="" ref="0x2b76bb141aa0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b76bb141c30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b76bb141dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b76bb188690" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b76bb188690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb188a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b76bb189860" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b76bb189860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb189be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb189d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb188020"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb1881b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb188340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b76bb186610" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b76bb186610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b76bb186990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b76bb186b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b76bb186cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b76bb186e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b76bb185020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b76bb1851b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b76bb185340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b76bb1854d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b76bb185660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b76bb1857f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b76bb185980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b76bb185b10"/>
        <function-ref name="sync" scoped="" ref="0x2b76bb185ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b76bb184020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b76bb1841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b76bb18a8b0" loc="54:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b76bb18a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b76bb18ac30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b76bb18adc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b76bb189020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b76bb1891b0"/>
        <function-ref name="setCca" scoped="" ref="0x2b76bb189340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b76bb1894d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b76bb18cce0" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2b76bb18cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b76bb18a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b76bb1831f0" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2b76bb1831f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b76bb183570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b76bb183700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b76bb183890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b76bb183a20"/>
        <function-ref name="setCca" scoped="" ref="0x2b76bb183bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b76bb183d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b76bb18da80" loc="52:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b76bb18da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76bb18de00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76bb18c020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb18c1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb18c340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76bb18c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b76bb129e80" loc="48:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b76bb129e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb190220"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb1903b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb190540"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb1906d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb190860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b76bb18fdb0" loc="50:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b76bb18fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb18e180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b76bb188ce0" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b76bb188ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b76bb1870a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b76bb187230"/>
        <function-ref name="getRssi" scoped="" ref="0x2b76bb1873c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b76bb187550"/>
        <function-ref name="getPower" scoped="" ref="0x2b76bb1876e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b76bb187870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b76bb1844d0" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b76bb1844d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b76bb184950"/>
        <function-ref name="changed" scoped="" ref="0x2b76bb184ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b76bb184c70"/>
        <function-ref name="setAddress" scoped="" ref="0x2b76bb184e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b76bb187b70" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b76bb187b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb186020"/>
        <function-ref name="getHeader" scoped="" ref="0x2b76bb1861b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b76bb186340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b76bb18f1d0" loc="49:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b76bb18f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb18f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b76bb182d30" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76bb182d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76bb1810e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76bb181270"/>
        <function-ref name="led1On" scoped="" ref="0x2b76bb181400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76bb181590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76bb181720"/>
        <function-ref name="get" scoped="" ref="0x2b76bb1818b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76bb181a40"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76bb1801b0"/>
        <function-ref name="set" scoped="" ref="0x2b76bb181bd0"/>
        <function-ref name="led0On" scoped="" ref="0x2b76bb181d60"/>
        <function-ref name="led2On" scoped="" ref="0x2b76bb180020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b76bb18e430" loc="51:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b76bb18e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b76bb18e7b0"/>
        <function-ref name="source" scoped="" ref="0x2b76bb18e940"/>
        <function-ref name="address" scoped="" ref="0x2b76bb18ead0"/>
        <function-ref name="destination" scoped="" ref="0x2b76bb18ec60"/>
        <function-ref name="setSource" scoped="" ref="0x2b76bb18edf0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b76bb18d020"/>
        <function-ref name="type" scoped="" ref="0x2b76bb18d1b0"/>
        <function-ref name="setType" scoped="" ref="0x2b76bb18d340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b76bb18d4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b76bb18d660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b76bb18d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2b76bb1820f0" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x2b76bb1820f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bb182470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bb182600"/>
        <function-ref name="request" scoped="" ref="0x2b76bb182790"/>
        <function-ref name="granted" scoped="" ref="0x2b76bb182920"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bb182ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b76bb1cd5c0" loc="46:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b76bb1cd5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b76bb1cd940"/>
        <function-ref name="stopDone" scoped="" ref="0x2b76bb1cdad0"/>
        <function-ref name="start" scoped="" ref="0x2b76bb1cdc60"/>
        <function-ref name="stop" scoped="" ref="0x2b76bb1cddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b76bb1ca600" loc="47:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b76bb1ca600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb1ca980"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb1cab10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb1caca0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb1cae30"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb1c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b76bb1c9e10" loc="49:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b76bb1c9e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76bb1c81c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76bb1c8350"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb1c84e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb1c8670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76bb1c8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b76bb1c9800" loc="48:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b76bb1c9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb1c9b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b76bb233b20" loc="53:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76bb233b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76bb232020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76bb2321b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b76bb232340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76bb2324d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76bb232660"/>
        <function-ref name="get" scoped="" ref="0x2b76bb2327f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76bb232980"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76bb231020"/>
        <function-ref name="set" scoped="" ref="0x2b76bb232b10"/>
        <function-ref name="led0On" scoped="" ref="0x2b76bb232ca0"/>
        <function-ref name="led2On" scoped="" ref="0x2b76bb232e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b76bb2331a0" loc="51:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76bb2331a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b76bb233520"/>
        <function-ref name="noAck" scoped="" ref="0x2b76bb2336b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b76bb233840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b76bb1c8ab0" loc="50:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b76bb1c8ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b76bb1c8e30"/>
        <function-ref name="source" scoped="" ref="0x2b76bb234020"/>
        <function-ref name="address" scoped="" ref="0x2b76bb2341b0"/>
        <function-ref name="destination" scoped="" ref="0x2b76bb234340"/>
        <function-ref name="setSource" scoped="" ref="0x2b76bb2344d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b76bb234660"/>
        <function-ref name="type" scoped="" ref="0x2b76bb2347f0"/>
        <function-ref name="setType" scoped="" ref="0x2b76bb234980"/>
        <function-ref name="isForMe" scoped="" ref="0x2b76bb234b10"/>
        <function-ref name="setGroup" scoped="" ref="0x2b76bb234ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b76bb234e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b76bb245d90" loc="54:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b76bb245d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb244180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb244310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb2444a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb244630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb2447c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b76bb244a50" loc="55:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b76bb244a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb244dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b76bb22fb40" loc="47:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b76bb22fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb248020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb2481b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb248340"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb2484d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb248660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b76bb246720" loc="50:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b76bb246720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76bb246aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76bb246c30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb246dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb245020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76bb2451b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b76bb2489e0" loc="48:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b76bb2489e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb248d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b76bb245400" loc="51:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76bb245400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b76bb245780"/>
        <function-ref name="noAck" scoped="" ref="0x2b76bb245910"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b76bb245aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b76bb247020" loc="49:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b76bb247020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b76bb2473a0"/>
        <function-ref name="source" scoped="" ref="0x2b76bb247530"/>
        <function-ref name="address" scoped="" ref="0x2b76bb2476c0"/>
        <function-ref name="destination" scoped="" ref="0x2b76bb247850"/>
        <function-ref name="setSource" scoped="" ref="0x2b76bb2479e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b76bb247b70"/>
        <function-ref name="type" scoped="" ref="0x2b76bb247d00"/>
        <function-ref name="setType" scoped="" ref="0x2b76bb246020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b76bb2461b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b76bb246340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b76bb2464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b76bb23f4e0" loc="50:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b76bb23f4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b76bb23f860"/>
        <function-ref name="stopDone" scoped="" ref="0x2b76bb23f9f0"/>
        <function-ref name="start" scoped="" ref="0x2b76bb23fb80"/>
        <function-ref name="stop" scoped="" ref="0x2b76bb23fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b76bb23d020" loc="52:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b76bb23d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b76ba037df0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb23d3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb23d530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb23d6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb23d850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb23d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76bb242e50" loc="49:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76bb242e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bb23f210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b76bb23e4c0" loc="51:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b76bb23e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b76ba037df0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb23e840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b76bb23b940" loc="56:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76bb23b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76bb23bcc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76bb23be50"/>
        <function-ref name="led1On" scoped="" ref="0x2b76bb236020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76bb2361b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76bb236340"/>
        <function-ref name="get" scoped="" ref="0x2b76bb2364d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76bb236660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76bb236ca0"/>
        <function-ref name="set" scoped="" ref="0x2b76bb2367f0"/>
        <function-ref name="led0On" scoped="" ref="0x2b76bb236980"/>
        <function-ref name="led2On" scoped="" ref="0x2b76bb236b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b76bb23b020" loc="55:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b76bb23b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b76ba037df0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b76bb23b3a0"/>
        <function-ref name="offset" scoped="" ref="0x2b76bb23b530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b76bb23b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b76bb235df0" loc="66:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b76bb235df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b76bb2a01c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b76bb2a0350"/>
        <function-ref name="start" scoped="" ref="0x2b76bb2a04e0"/>
        <function-ref name="stop" scoped="" ref="0x2b76bb2a0670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b76bb2a9e40" loc="332:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x2b76bb2a9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76bb2a81e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b76bb2a8370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b76bb28e020" loc="74:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2b76bb28e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b76bb28e3a0"/>
        <function-ref name="stop" scoped="" ref="0x2b76bb28e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b76bb272d10" loc="191:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x2b76bb272d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76bb2700e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b76bb270270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76bb2357a0" loc="65:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76bb2357a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bb235b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b76bb28bbf0" loc="75:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x2b76bb28bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b76bb28d020"/>
        <function-ref name="flush" scoped="" ref="0x2b76bb28d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b76bb2ac400" loc="322:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x2b76bb2ac400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76bb2ac780"/>
        <function-ref name="runTask" scoped="" ref="0x2b76bb2ac910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b76bb28f680" loc="72:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b76bb28f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b76bb28fa00"/>
        <function-ref name="resetSend" scoped="" ref="0x2b76bb28fb90"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b76bb28fd20"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b76bb29e020"/>
        <function-ref name="putData" scoped="" ref="0x2b76bb29e1b0"/>
        <function-ref name="putDone" scoped="" ref="0x2b76bb29e340"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b76bb29e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b76bb29e750" loc="73:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76bb29e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76bb29ead0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76bb29ec60"/>
        <function-ref name="led1On" scoped="" ref="0x2b76bb29edf0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76bb299020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76bb2991b0"/>
        <function-ref name="get" scoped="" ref="0x2b76bb299340"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76bb2994d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76bb299b10"/>
        <function-ref name="set" scoped="" ref="0x2b76bb299660"/>
        <function-ref name="led0On" scoped="" ref="0x2b76bb2997f0"/>
        <function-ref name="led2On" scoped="" ref="0x2b76bb299980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b76bb2a50c0" loc="341:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b76bb2a50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76bb2a5440"/>
        <function-ref name="runTask" scoped="" ref="0x2b76bb2a55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b76bb29be50" loc="67:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2b76bb29be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b76bb29f210"/>
        <function-ref name="nextByte" scoped="" ref="0x2b76bb29f3a0"/>
        <function-ref name="startSend" scoped="" ref="0x2b76bb29f530"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b76bb29f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b76bb295340" loc="68:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b76bb295340"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b76bb2956c0"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b76bb295850"/>
        <function-ref name="endPacket" scoped="" ref="0x2b76bb2959e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b76bb3a0c50" loc="275:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x2b76bb3a0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76bb39f020"/>
        <function-ref name="runTask" scoped="" ref="0x2b76bb39f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b76bb3a4830" loc="51:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b76bb3a4830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b76ba037df0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb3a4bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76bb3a4d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76bb3a3020"/>
        <function-ref name="cancel" scoped="" ref="0x2b76bb3a31b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb3a3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b76bb39f480" loc="158:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x2b76bb39f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76bb39f800"/>
        <function-ref name="runTask" scoped="" ref="0x2b76bb39f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b76bb3a4110" loc="50:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b76bb3a4110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b76ba037df0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76bb3a44b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b76bb3a3760" loc="54:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x2b76bb3a3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b76ba037df0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b76bb3a3b00"/>
        <function-ref name="offset" scoped="" ref="0x2b76bb3a3c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b76bb3a3e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b76bb3a1590" loc="57:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76bb3a1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76bb3a1910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76bb3a1aa0"/>
        <function-ref name="led1On" scoped="" ref="0x2b76bb3a1c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76bb3a1dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76bb3a0020"/>
        <function-ref name="get" scoped="" ref="0x2b76bb3a01b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76bb3a0340"/>
        <function-ref name="led2On" scoped="" ref="0x2b76bb3a0980"/>
        <function-ref name="set" scoped="" ref="0x2b76bb3a0660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76bb3a04d0"/>
        <function-ref name="led0On" scoped="" ref="0x2b76bb3a07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b76bb3a29d0" loc="56:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2b76bb3a29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b76bb3a2d50"/>
        <function-ref name="nextByte" scoped="" ref="0x2b76bb3a1020"/>
        <function-ref name="startSend" scoped="" ref="0x2b76bb3a11b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b76bb3a1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b76bb3a20e0" loc="55:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b76bb3a20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b76bb3a2460"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b76bb3a25f0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b76bb3a2780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b76bb38dd20" loc="50:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b76bb38dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb3980e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b76bb398270"/>
        <function-ref name="receive" scoped="" ref="0x2b76bb398400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b76bb398590"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b76bb398720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b76bb3988b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb398a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b76bb39cb60" loc="48:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b76bb39cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b76bb399020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b76bb3991b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b76bb399340"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b76bb3994d0"/>
        <function-ref name="putData" scoped="" ref="0x2b76bb399660"/>
        <function-ref name="putDone" scoped="" ref="0x2b76bb3997f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b76bb399980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b76bb398cc0" loc="51:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76bb398cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76bb3970a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76bb397230"/>
        <function-ref name="led1On" scoped="" ref="0x2b76bb3973c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76bb397550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76bb3976e0"/>
        <function-ref name="get" scoped="" ref="0x2b76bb397870"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76bb397a00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76bb38c1b0"/>
        <function-ref name="set" scoped="" ref="0x2b76bb397b90"/>
        <function-ref name="led0On" scoped="" ref="0x2b76bb397d20"/>
        <function-ref name="led2On" scoped="" ref="0x2b76bb38c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b76bb3e2d50" loc="6:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b76bb3e2d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb3e5100"/>
        <function-ref name="receive" scoped="" ref="0x2b76bb3e5290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b76bb3e7890" loc="5:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b76bb3e7890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb3e7c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b76bb3e7da0"/>
        <function-ref name="receive" scoped="" ref="0x2b76bb3e6020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b76bb3e61b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b76bb3e6340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b76bb3e64d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb3e6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b76bb3e7080" loc="4:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b76bb3e7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b76bb3e7400"/>
        <function-ref name="stop" scoped="" ref="0x2b76bb3e7590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b76bb52b060" loc="45:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bb52b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b76bb52b3e0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b76bb52b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b76bb52a8f0" loc="47:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b76bb52a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb52ac70"/>
        <function-ref name="receive" scoped="" ref="0x2b76bb52ae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b76bb5290c0" loc="49:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b76bb5290c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b76bb529440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b76bb52b800" loc="46:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b76bb52b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb52bb80"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b76bb52bd10"/>
        <function-ref name="receive" scoped="" ref="0x2b76bb52a020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b76bb52a1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b76bb52a340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b76bb52a4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb52a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76bb52c3c0" loc="44:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76bb52c3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bb52c740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bb52c8d0"/>
        <function-ref name="request" scoped="" ref="0x2b76bb52ca60"/>
        <function-ref name="granted" scoped="" ref="0x2b76bb52cbf0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bb52cd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b76bb3d6020" loc="42:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bb3d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b76bb3d63a0"/>
        <function-ref name="configure" scoped="" ref="0x2b76bb3d6530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b76bb3d3370" loc="44:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b76bb3d3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb3d36f0"/>
        <function-ref name="receive" scoped="" ref="0x2b76bb3d3880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b76bb3d1450" loc="47:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b76bb3d1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b76bb3d17d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b76bb3d6d70" loc="43:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b76bb3d6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb3d4180"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b76bb3d4310"/>
        <function-ref name="receive" scoped="" ref="0x2b76bb3d44a0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b76bb3d4630"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b76bb3d47c0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b76bb3d4950"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb3d4ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b76bb3d21d0" loc="46:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b76bb3d21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bb3d2550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bb3d26e0"/>
        <function-ref name="request" scoped="" ref="0x2b76bb3d2870"/>
        <function-ref name="granted" scoped="" ref="0x2b76bb3d2a00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bb3d2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76bb3dad00" loc="41:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76bb3dad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bb3d70a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bb3d7230"/>
        <function-ref name="request" scoped="" ref="0x2b76bb3d73c0"/>
        <function-ref name="granted" scoped="" ref="0x2b76bb3d7550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bb3d76e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b76bb3cf1d0" loc="48:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b76bb3cf1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b76bb3cf550"/>
        <function-ref name="txDone" scoped="" ref="0x2b76bb3cf6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b76bb453dc0" loc="44:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bb453dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b76bb451180"/>
        <function-ref name="configure" scoped="" ref="0x2b76bb451310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b76bb450890" loc="46:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b76bb450890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb450c30"/>
        <function-ref name="receive" scoped="" ref="0x2b76bb450dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b76bb44e020" loc="49:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b76bb44e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b76bb44e3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2b76bb44e690" loc="50:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b76bb44e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b76bb44ea10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b76bb44eba0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b76bb44ed30"/>
        <function-ref name="enableUart" scoped="" ref="0x2b76bb44d020"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b76bb44d1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b76bb44d340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b76bb44d4d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b76bb44d660"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b76bb44d7f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b76bb44d980"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b76bb44db10"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b76bb44dca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b76bb44de30"/>
        <function-ref name="getUbr" scoped="" ref="0x2b76bb44c120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b76bb44c2b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b76bb44c440"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b76bb44c5d0"/>
        <function-ref name="isUart" scoped="" ref="0x2b76bb44c760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b76bb44c8f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b76bb44ca80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b76bb44cc10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b76bb44cda0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b76bb44b020"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b76bb44b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76bb44b340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b76bb44b6d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b76bb44b860"/>
        <function-ref name="setUbr" scoped="" ref="0x2b76bb44b9f0"/>
        <function-ref name="tx" scoped="" ref="0x2b76bb44bb80"/>
        <function-ref name="getUctl" scoped="" ref="0x2b76bb44bd10"/>
        <function-ref name="disableUart" scoped="" ref="0x2b76bb44a020"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b76bb44a1b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b76bb44a340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b76bb44a4d0"/>
        <function-ref name="rx" scoped="" ref="0x2b76bb44a660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b76bb44a7f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b76bb44a980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b76bb44ab10"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b76bb44aca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b76bb44ae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b76bb4516d0" loc="45:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b76bb4516d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76bb451a70"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b76bb451c00"/>
        <function-ref name="receive" scoped="" ref="0x2b76bb451d90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b76bb450020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b76bb4501b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b76bb450340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76bb4504d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b76bb449c90" loc="52:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b76bb449c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76bb448ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76bb4474e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76bb447020"/>
        <function-ref name="overflow" scoped="" ref="0x2b76bb4479a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b76bb44f230" loc="48:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b76bb44f230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bb44f5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bb44f760"/>
        <function-ref name="request" scoped="" ref="0x2b76bb44f8f0"/>
        <function-ref name="granted" scoped="" ref="0x2b76bb44fa80"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bb44fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76bb453020" loc="43:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76bb453020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bb4533c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bb453550"/>
        <function-ref name="request" scoped="" ref="0x2b76bb4536e0"/>
        <function-ref name="granted" scoped="" ref="0x2b76bb453870"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bb453a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b76bb449290" loc="51:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b76bb449290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b76bb449630"/>
        <function-ref name="txDone" scoped="" ref="0x2b76bb4497c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b76bb447dd0" loc="53:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76bb447dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76bb445180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76bb445310"/>
        <function-ref name="led1On" scoped="" ref="0x2b76bb4454a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76bb445630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76bb4457c0"/>
        <function-ref name="get" scoped="" ref="0x2b76bb445950"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76bb445ae0"/>
        <function-ref name="led2On" scoped="" ref="0x2b76bb4441b0"/>
        <function-ref name="set" scoped="" ref="0x2b76bb445e00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76bb445c70"/>
        <function-ref name="led0On" scoped="" ref="0x2b76bb444020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b76bb4363b0" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b76bb4363b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b76bb436730"/>
        <function-ref name="txDone" scoped="" ref="0x2b76bb4368c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b76bb43c080" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b76bb43c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b76bb43c400"/>
        <function-ref name="stop" scoped="" ref="0x2b76bb43c590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b76bb43c8b0" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b76bb43c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b76bb43cc30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b76bb43cdc0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b76bb43b020"/>
        <function-ref name="enableUart" scoped="" ref="0x2b76bb43b1b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b76bb43b340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b76bb43b4d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b76bb43b660"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b76bb43b7f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b76bb43b980"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b76bb43bb10"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b76bb43bca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b76bb43be30"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b76bb439020"/>
        <function-ref name="getUbr" scoped="" ref="0x2b76bb4392b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b76bb439440"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b76bb4395d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b76bb439760"/>
        <function-ref name="isUart" scoped="" ref="0x2b76bb4398f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b76bb439a80"/>
        <function-ref name="isSpi" scoped="" ref="0x2b76bb439c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b76bb439da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b76bb438020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b76bb4381b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b76bb438340"/>
        <function-ref name="getMode" scoped="" ref="0x2b76bb4384d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b76bb438860"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b76bb4389f0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b76bb438b80"/>
        <function-ref name="tx" scoped="" ref="0x2b76bb438d10"/>
        <function-ref name="getUctl" scoped="" ref="0x2b76bb437020"/>
        <function-ref name="disableUart" scoped="" ref="0x2b76bb4371b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b76bb437340"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b76bb4374d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b76bb437660"/>
        <function-ref name="rx" scoped="" ref="0x2b76bb4377f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b76bb437980"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b76bb437b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b76bb437ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b76bb437e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b76bb436020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b76bb49f670" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b76bb49f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bb49f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bb49fb80"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76bb49fd10"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bb49e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bb49e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76bb49e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bb49e4d0"/>
        <function-ref name="get" scoped="" ref="0x2b76bb49e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76bb49e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76bb49e980"/>
        <function-ref name="set" scoped="" ref="0x2b76bb49eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76bb49eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76bb49ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76bb49d120"/>
        <function-ref name="clr" scoped="" ref="0x2b76bb49d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b76bb4a4dc0" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b76bb4a4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b76bb4a3180"/>
        <function-ref name="txDone" scoped="" ref="0x2b76bb4a3310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2b76bb49d670" loc="81:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2b76bb49d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bb49d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bb49db80"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76bb49dd10"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bb49c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bb49c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76bb49c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bb49c4d0"/>
        <function-ref name="get" scoped="" ref="0x2b76bb49c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76bb49c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76bb49c980"/>
        <function-ref name="set" scoped="" ref="0x2b76bb49cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76bb49cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76bb49ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76bb49b120"/>
        <function-ref name="clr" scoped="" ref="0x2b76bb49b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2b76bb49b670" loc="82:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2b76bb49b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bb49b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bb49bb80"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76bb49bd10"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bb49a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bb49a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76bb49a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bb49a4d0"/>
        <function-ref name="get" scoped="" ref="0x2b76bb49a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76bb49a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76bb49a980"/>
        <function-ref name="set" scoped="" ref="0x2b76bb49ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76bb49aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76bb49ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76bb499120"/>
        <function-ref name="clr" scoped="" ref="0x2b76bb4992b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2b76bb4a8020" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b76bb4a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b76bb4a83a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b76bb4a8530"/>
        <function-ref name="setUctl" scoped="" ref="0x2b76bb4a86c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b76bb4a8850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b76bb4a89e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b76bb4a8b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b76bb4a8d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b76bb4a7020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b76bb4a71b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b76bb4a7340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b76bb4a74d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b76bb4a7660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b76bb4a77f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b76bb4a7a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b76bb4a7c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b76bb4a7da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b76bb4a6020"/>
        <function-ref name="isUart" scoped="" ref="0x2b76bb4a61b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b76bb4a6340"/>
        <function-ref name="isSpi" scoped="" ref="0x2b76bb4a64d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b76bb4a6660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b76bb4a67f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b76bb4a6980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b76bb4a6b10"/>
        <function-ref name="getMode" scoped="" ref="0x2b76bb4a6ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b76bb4a5220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b76bb4a53b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b76bb4a5540"/>
        <function-ref name="tx" scoped="" ref="0x2b76bb4a56d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b76bb4a5860"/>
        <function-ref name="disableUart" scoped="" ref="0x2b76bb4a59f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b76bb4a5b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b76bb4a5d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b76bb4a4020"/>
        <function-ref name="rx" scoped="" ref="0x2b76bb4a41b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b76bb4a4340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b76bb4a44d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b76bb4a4660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b76bb4a47f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b76bb4a4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b76bb435710" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b76bb435710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b76bb435a90"/>
        <function-ref name="stop" scoped="" ref="0x2b76bb435c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2b76bb4a1670" loc="79:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2b76bb4a1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bb4a19f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bb4a1b80"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76bb4a1d10"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bb4a0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bb4a01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76bb4a0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bb4a04d0"/>
        <function-ref name="get" scoped="" ref="0x2b76bb4a0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76bb4a07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76bb4a0980"/>
        <function-ref name="set" scoped="" ref="0x2b76bb4a0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76bb4a0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76bb4a0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76bb49f120"/>
        <function-ref name="clr" scoped="" ref="0x2b76bb49f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b76bb4a36d0" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b76bb4a36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76bb4a3a50"/>
        <function-ref name="isInput" scoped="" ref="0x2b76bb4a3be0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b76bb4a3d70"/>
        <function-ref name="toggle" scoped="" ref="0x2b76bb4a2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76bb4a21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b76bb4a2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76bb4a24d0"/>
        <function-ref name="get" scoped="" ref="0x2b76bb4a2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b76bb4a27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b76bb4a2980"/>
        <function-ref name="set" scoped="" ref="0x2b76bb4a2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b76bb4a2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b76bb4a2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b76bb4a1120"/>
        <function-ref name="clr" scoped="" ref="0x2b76bb4a12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b76bb50b080" loc="43:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b76bb50b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b76ba3847d0"/>
            <typename><typedef-ref name="T32khz" ref="0x2b76ba384b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76bb50a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76bb50a9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76bb50a4e0"/>
        <function-ref name="overflow" scoped="" ref="0x2b76bb50ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b76bbe8f970" loc="43:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bbe8f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b76bbe8fcf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b76bbe8fe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b76bbe89a50" loc="48:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bbe89a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b76bbe89dd0"/>
        <function-ref name="configure" scoped="" ref="0x2b76bbe87020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b76bbe892b0" loc="46:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b76bbe892b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b76bbe89630"/>
        <function-ref name="txDone" scoped="" ref="0x2b76bbe897c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76bbe90cc0" loc="42:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76bbe90cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bbe8f0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bbe8f230"/>
        <function-ref name="request" scoped="" ref="0x2b76bbe8f3c0"/>
        <function-ref name="granted" scoped="" ref="0x2b76bbe8f550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bbe8f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b76bbe8e8d0" loc="45:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b76bbe8e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b76bbe8ec50"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b76bbe8ede0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b76bbe8d020"/>
        <function-ref name="enableUart" scoped="" ref="0x2b76bbe8d1b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b76bbe8d340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b76bbe8d4d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b76bbe8d660"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b76bbe8d7f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b76bbe8d980"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b76bbe8db10"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b76bbe8dca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b76bbe8de30"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b76bbe8c020"/>
        <function-ref name="getUbr" scoped="" ref="0x2b76bbe8c2b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b76bbe8c440"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b76bbe8c5d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b76bbe8c760"/>
        <function-ref name="isUart" scoped="" ref="0x2b76bbe8c8f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b76bbe8ca80"/>
        <function-ref name="isSpi" scoped="" ref="0x2b76bbe8cc10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b76bbe8cda0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b76bbe8b020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b76bbe8b1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b76bbe8b340"/>
        <function-ref name="getMode" scoped="" ref="0x2b76bbe8b4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b76bbe8b860"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b76bbe8b9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b76bbe8bb80"/>
        <function-ref name="tx" scoped="" ref="0x2b76bbe8bd10"/>
        <function-ref name="getUctl" scoped="" ref="0x2b76bbe8a020"/>
        <function-ref name="disableUart" scoped="" ref="0x2b76bbe8a1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b76bbe8a340"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b76bbe8a4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b76bbe8a660"/>
        <function-ref name="rx" scoped="" ref="0x2b76bbe8a7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b76bbe8a980"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b76bbe8ab10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b76bbe8aca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b76bbe8ae30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b76bbe89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b76bbe8e130" loc="44:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bbe8e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b76bbe8e4b0"/>
        <function-ref name="userId" scoped="" ref="0x2b76bbe8e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b76bb4f02c0" loc="42:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bb4f02c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b76bb4f0640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b76bb4f07d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b76bb4ef8a0" loc="45:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bb4ef8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b76bb4efc20"/>
        <function-ref name="configure" scoped="" ref="0x2b76bb4efdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b76bb4f21d0" loc="40:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b76bb4f21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b76bb4f2550"/>
        <function-ref name="txDone" scoped="" ref="0x2b76bb4f26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76bb4f1020" loc="41:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76bb4f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bb4f13a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bb4f1530"/>
        <function-ref name="request" scoped="" ref="0x2b76bb4f16c0"/>
        <function-ref name="granted" scoped="" ref="0x2b76bb4f1850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bb4f19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b76bb4f0ad0" loc="43:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bb4f0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b76bb4f0e50"/>
        <function-ref name="userId" scoped="" ref="0x2b76bb4ef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b76bb4ebe50" loc="43:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bb4ebe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b76bb4ea210"/>
        <function-ref name="userId" scoped="" ref="0x2b76bb4ea3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b76bb4ed060" loc="39:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b76bb4ed060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b76bb4ed400"/>
        <function-ref name="txDone" scoped="" ref="0x2b76bb4ed590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2b76bb4eb840" loc="42:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b76bb4eb840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76bb4ebbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b76bb4ed990" loc="40:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b76bb4ed990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76bb4edd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2b76bb4eb060" loc="41:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2b76bb4eb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b76bb4eb3e0"/>
        <function-ref name="txDone" scoped="" ref="0x2b76bb4eb570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b76bb4e79e0" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bb4e79e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b76bb4e7d80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b76bb4e6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b76bb560770" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bb560770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b76bb560b10"/>
        <function-ref name="configure" scoped="" ref="0x2b76bb560ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b76bb4e6270" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b76bb4e6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bb4e65f0"/>
        <function-ref name="requested" scoped="" ref="0x2b76bb4e6780"/>
        <function-ref name="granted" scoped="" ref="0x2b76bb4e6910"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bb4e6aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b76bb4e6c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76bb4e8b60" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76bb4e8b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bb4e7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bb4e71b0"/>
        <function-ref name="request" scoped="" ref="0x2b76bb4e7340"/>
        <function-ref name="granted" scoped="" ref="0x2b76bb4e74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bb4e7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b76bb4e6e80" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bb4e6e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b76bb560220"/>
        <function-ref name="userId" scoped="" ref="0x2b76bb5603b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76bbed0ca0" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b76bbed0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76bbecf0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b76bbecf330" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b76bbecf330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b76bbecf6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b76bbecf840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b76bbecf9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b76bbecfb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b76bbecc3a0" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b76bbecc3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b76bbecc740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b76bbecc8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b76bbec9210" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76bbec9210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b76bbec95b0"/>
        <function-ref name="configure" scoped="" ref="0x2b76bbec9740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b76bbec99d0" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b76bbec99d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b76bbec9d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b76bbec8020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b76bbec81b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b76bbec8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b76bbeccb20" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b76bbeccb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bbeca020"/>
        <function-ref name="requested" scoped="" ref="0x2b76bbeca1b0"/>
        <function-ref name="granted" scoped="" ref="0x2b76bbeca340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bbeca4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b76bbeca660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b76bbec8590" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b76bbec8590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76bbec8910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76bbec8aa0"/>
        <function-ref name="led1On" scoped="" ref="0x2b76bbec8c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76bbec8dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76bbec7020"/>
        <function-ref name="get" scoped="" ref="0x2b76bbec71b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76bbec7340"/>
        <function-ref name="led0On" scoped="" ref="0x2b76bbec7980"/>
        <function-ref name="set" scoped="" ref="0x2b76bbec7660"/>
        <function-ref name="led2On" scoped="" ref="0x2b76bbec74d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76bbec77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76bbecd540" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76bbecd540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bbecd8e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bbecda70"/>
        <function-ref name="request" scoped="" ref="0x2b76bbecdc00"/>
        <function-ref name="granted" scoped="" ref="0x2b76bbecdd90"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bbecc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b76bbeca8b0" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bbeca8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b76bbecac30"/>
        <function-ref name="userId" scoped="" ref="0x2b76bbecadc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b76bbec7c50" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2b76bbec7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76bbec6020"/>
        <function-ref name="runTask" scoped="" ref="0x2b76bbec61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b76bb545020" loc="72:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b76bb545020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b76bb5453a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b76bb5455f0" loc="73:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b76bb5455f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bb545970"/>
        <function-ref name="requested" scoped="" ref="0x2b76bb545b00"/>
        <function-ref name="granted" scoped="" ref="0x2b76bb545c90"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bb545e20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b76bb544020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b76bb55b880" loc="70:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b76bb55b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b76bb55bc00"/>
        <function-ref name="stop" scoped="" ref="0x2b76bb55bd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b76bb544270" loc="74:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bb544270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b76bb5445f0"/>
        <function-ref name="userId" scoped="" ref="0x2b76bb544780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b76bbf37b00" loc="62:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b76bbf37b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b76bbf37e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b76bbf360f0" loc="63:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b76bbf360f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bbf36470"/>
        <function-ref name="requested" scoped="" ref="0x2b76bbf36600"/>
        <function-ref name="granted" scoped="" ref="0x2b76bbf36790"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bbf36920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b76bbf36ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b76bbf373a0" loc="60:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b76bbf373a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b76bbf37720"/>
        <function-ref name="stop" scoped="" ref="0x2b76bbf378b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b76bbf36d00" loc="64:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76bbf36d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b76bbf340a0"/>
        <function-ref name="userId" scoped="" ref="0x2b76bbf34230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x2b76bb5258e0" loc="3:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b76bb5258e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b76bb525c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b76bb524020" loc="4:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b76bb524020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76bb5243a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76bb524530"/>
        <function-ref name="request" scoped="" ref="0x2b76bb5246c0"/>
        <function-ref name="granted" scoped="" ref="0x2b76bb524850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76bb5249e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b76bb525080" loc="2:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b76bb525080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b76bb525400"/>
        <function-ref name="stop" scoped="" ref="0x2b76bb525590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b76bb58c6b0" loc="47:../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x2b76bb58c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b76bb58ca30"/>
        <function-ref name="offset" scoped="" ref="0x2b76bb58cbc0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b76bb58cd50"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../tos/interfaces/Init.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b76b9e5a020" loc="62:../../tos/interfaces/Init.nc">
        <documentation loc="53:../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b76b9e5ec00" loc="60:../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x2b76b9e87020" loc="48:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x2b76b9e89270" loc="43:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x2b76b9e88840" loc="47:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x2b76b9e8bb00" loc="42:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x2b76b9e899e0" loc="45:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x2b76b9e70d00" loc="40:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x2b76b9e8b420" loc="41:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x2b76b9e88120" loc="46:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b76b9d3d070" loc="62:../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b76b9a81670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x2b76b9ed1500" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2b76b9ed1280" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x2b76b9ebf9c0" loc="42:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b76b9e7fb60"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b76b9e9cd40"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2b76b9ed1d70" loc="57:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x2b76b9ed0c80" loc="59:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x2b76b9ed3b00" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2b76b9ed04f0" loc="58:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b76b9ed4190" loc="43:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x2b76b9ed4920" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b76b9ed3390" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b76b9e7fb60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b76b9e9cd40"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b76b9ed3110" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b76b9e7fb60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b76b9e9cd40"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2b76b9ee4520" loc="44:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x2b76b9ee1bc0" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x2b76b9ee1940" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b76b9ee0770" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b76b9ee04f0" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b76b9ee1190" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b76b9ee2940" loc="63:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x2b76b9ee2020" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2b76b9ee4c50" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2b76b9ecd880" loc="40:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x2b76b9ee92a0" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b76b9ee9020" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x2b76b9ee9c80" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2b76b9ee9a00" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x2b76b9ee86a0" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2b76b9ee8420" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b76b9ee8d90" loc="45:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b76b9eda120" loc="52:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2b76b9ed8a10" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x2b76b9ed8790" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2b76b9eda850" loc="53:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b76b9ebe350" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2b76b9ed8020" loc="54:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b76b9edc270" loc="47:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b76b9edb9e0" loc="51:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b76b9ebeae0" loc="46:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b76b9edc980" loc="48:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x2b76b9edb2e0" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b76b9edb060" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x2b76b9ed7450" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x2b76b9ed71d0" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b76b9f1a1f0" loc="39:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../../tos/interfaces/McuSleep.nc">
      <documentation loc="63:../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b76b9e14670" loc="76:../../tos/interfaces/McuSleep.nc">
        <documentation loc="75:../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b76b9aca910" loc="52:../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b76b99c5020" loc="57:../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b76b99c4020" loc="72:../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b76b99c5790" loc="65:../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b76b99d7020" loc="67:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b76b99d7870" loc="75:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b76ba04e5c0" loc="113:../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b76ba04e340" loc="113:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b76ba04dab0" loc="138:../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b76ba04d830" loc="138:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b76ba04f920" loc="104:../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b76ba04ee10" loc="130:../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b76ba095060" loc="78:../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
              <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba0966d0" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b76ba096a20" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76ba096d50" loc="78:../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b76ba0a32a0" loc="177:../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b76ba0385d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76ba0a3020" loc="177:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b76ba0acd60" loc="88:../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b76ba0389b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76ba0acae0" loc="88:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b76ba0af1f0" loc="68:../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b76ba0389b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b76ba0afcb0" loc="78:../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b76ba0389b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76ba0afa30" loc="78:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b76ba0aa7a0" loc="121:../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76ba0389b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76ba0aa1c0" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b76ba0aa510" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76ba0389b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b76ba0ab2b0" loc="103:../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76ba0389b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76ba0adc40" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b76ba0ab020" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76ba0389b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b76ba0a6bf0" loc="147:../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76ba0a6970" loc="147:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b76ba0a5020" loc="162:../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76ba0a49a0" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b76ba0a4cc0" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b76ba0381f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b76ba0a79f0" loc="136:../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76ba0a7770" loc="136:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b76ba0a2730" loc="187:../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b76ba0385d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76ba0a2150" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b76ba0a24a0" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b76ba0385d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b76ba0a0580" loc="195:../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b76ba0385d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b76ba091110" loc="65:../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba04be10" loc="65:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b76ba0902a0" loc="78:../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba090020" loc="78:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b76ba08b620" loc="126:../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba08b020" loc="126:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76ba08b350" loc="126:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b76ba08c6d0" loc="106:../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b76ba08e730" loc="94:../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba08e170" loc="94:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76ba08e4a0" loc="94:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b76ba0bc020" loc="61:../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b76ba0bc7d0" loc="67:../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b76ba0bb020" loc="72:../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b76ba0b9020" loc="83:../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b76ba0b87d0" loc="100:../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b76ba0b7020" loc="117:../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b76ba0bb7b0" loc="77:../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b76ba0b7b90" loc="134:../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b76ba0b7910" loc="134:../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b76ba0bd850" loc="56:../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b76ba0b9800" loc="89:../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b76ba0b8020" loc="94:../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x2b76ba0792c0" loc="80:../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76ba0389b0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b76ba07b7e0" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76ba0389b0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b76ba07bb60" loc="80:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76ba079020" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b76ba09b970" loc="135:../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba09b370" loc="135:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76ba09b6a0" loc="135:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b76ba09aa60" loc="123:../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b76ba078630" loc="96:../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba0783b0" loc="96:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b76ba077b80" loc="110:../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba0775a0" loc="110:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b76ba0778f0" loc="110:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b76ba122730" loc="44:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b76ba122e60" loc="45:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b76ba123880" loc="42:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b76ba121cf0" loc="47:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b76ba122020" loc="43:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b76ba1215b0" loc="46:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b76ba126a90" loc="40:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b76ba123190" loc="41:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b76ba14b7c0" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b76ba14a020" loc="80:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x2b76ba146b10" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b76ba146890" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b76ba14c020" loc="58:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b76ba148020" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x2b76ba145490" loc="117:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b76ba14a760" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b76ba14b020" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x2b76ba147770" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x2b76ba14c7c0" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b76ba14d020" loc="48:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x2b76ba1487a0" loc="92:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x2b76ba146020" loc="101:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x2b76ba147020" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b76ba14d750" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b76ba37be30" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b76ba37be30"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b76ba3a50d0" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76ba3a50d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b76ba3a30b0" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76ba3a50d0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba3a4e00" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b76ba3a22a0" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba3a2020" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b76ba3a5c90" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba3a5a10" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b76ba3a0610" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76ba3a50d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba3a0020" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b76ba3a0380" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76ba3a50d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b76ba394b50" loc="65:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba394530" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b76ba3948c0" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b76ba392d00" loc="71:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba392a80" loc="71:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b76ba396c60" loc="57:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b76ba3962a0" loc="52:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b76ba396020" loc="52:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b76ba3792a0" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba379020" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b76ba377490" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba377210" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b76ba3765f0" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba376370" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2b76ba3d3980" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba3d3700" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2b76ba3d5c30" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba3d59b0" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2b76ba3d7350" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b76ba3d70d0" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2b76ba3d9800" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b76ba3d9580" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2b76ba3d7d80" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2b76ba3d7b00" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2b76ba3d4b10" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba3d4890" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b76ba3c62b0" loc="59:../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76ba0389b0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b76ba3d1c50" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76ba0389b0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b76ba3c6020" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2b76ba3ae810" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b76ba3ae230" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2b76ba3ae580" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2b76ba3aae20" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b76ba3aa820" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2b76ba3aab90" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2b76ba3ac350" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2b76b936b110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b76ba3ac0d0" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2b76ba3abd30" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b76ba3abab0" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2b76ba3af9c0" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b76ba3af740" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2b76ba3ace80" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b76ba3acc00" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b76ba3cab30" loc="65:../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba3ca8b0" loc="65:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b76ba3cfbc0" loc="46:../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba3cf5a0" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b76ba3cf930" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b76ba3ccad0" loc="59:../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba3cc850" loc="59:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b76ba3cc020" loc="53:../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba3cd9c0" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b76ba3cdd50" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b76ba3c9b70" loc="71:../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba3c98f0" loc="71:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b76ba3da780" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba3da500" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../tos/interfaces/Send.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b76ba3ed2b0" loc="75:../../tos/interfaces/Send.nc">
        <documentation loc="57:../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba3f4c50" loc="75:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76ba3ed020" loc="75:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b76ba3e9890" loc="125:../../tos/interfaces/Send.nc">
        <documentation loc="115:../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba3e9290" loc="125:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76ba3e95c0" loc="125:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b76ba3e89b0" loc="112:../../tos/interfaces/Send.nc">
        <documentation loc="102:../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b76ba3ec5f0" loc="89:../../tos/interfaces/Send.nc">
        <documentation loc="77:../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba3ec370" loc="89:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b76ba3ebac0" loc="100:../../tos/interfaces/Send.nc">
        <documentation loc="91:../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba3eb4e0" loc="100:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b76ba3eb830" loc="100:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b76ba3f1120" loc="120:../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b76ba3f2120" loc="97:../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b76ba3f3770" loc="88:../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b76ba3f2910" loc="102:../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b76ba3f1b80" loc="128:../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b76ba3fc3a0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b76ba400dc0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2b76ba3fc110" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b76ba3fb6a0" loc="65:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2b76ba3f8e70" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b76ba3f8060" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b76ba3f88a0" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76ba3f8bd0" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b76ba3f9840" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b76ba3f9260" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b76ba3f95b0" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2b76ba3fce30" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2b76ba3fcbb0" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../tos/interfaces/Random.nc">
      <documentation loc="34:../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b76ba4280e0" loc="52:../../tos/interfaces/Random.nc">
        <documentation loc="48:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b76ba3fd860" loc="46:../../tos/interfaces/Random.nc">
        <documentation loc="42:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b76ba401a40" loc="95:../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b76ba3fe270" loc="105:../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2b76ba4222e0" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba422020" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2b76ba423710" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2b76ba048c00"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2b76ba0465a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba423410" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2b76ba421620" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2b76ba0440c0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2b76ba043970"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76ba421320" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2b76ba4046e0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2b76ba402840" loc="97:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2b76ba402070" loc="90:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2b76ba409e20" loc="51:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2b76ba405e80" loc="63:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2b76ba403020" loc="76:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2b76ba403840" loc="83:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2b76ba4056c0" loc="56:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../tos/interfaces/State.nc">
      <documentation loc="33:../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2b76ba41cd00" loc="71:../../tos/interfaces/State.nc">
        <documentation loc="68:../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2b76ba41d350" loc="56:../../tos/interfaces/State.nc">
        <documentation loc="53:../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2b76ba41c530" loc="66:../../tos/interfaces/State.nc">
        <documentation loc="63:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2b76ba41c2b0" loc="66:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2b76ba41dac0" loc="61:../../tos/interfaces/State.nc">
        <documentation loc="58:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2b76ba41e020" loc="45:../../tos/interfaces/State.nc">
        <documentation loc="40:../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b76ba425c80" loc="45:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2b76ba41ead0" loc="51:../../tos/interfaces/State.nc">
        <documentation loc="47:../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b76ba41e850" loc="51:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2b76ba461870" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2b76ba461290" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2b76ba4615e0" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2b76ba4621f0" loc="93:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2b76ba464880" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2b76ba464210" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2b76ba4645f0" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2b76ba46ac10" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b76ba46a990" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2b76ba462a70" loc="98:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2b76ba466730" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b76ba4664b0" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b76ba469d30" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b76ba469ab0" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2b76ba460ae0" loc="117:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2b76ba4659c0" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b76ba465740" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2b76ba4602b0" loc="112:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2b76ba4674d0" loc="66:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b76ba38f020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b76ba38f780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2b76ba467cc0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2b76ba46a1f0" loc="54:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b76ba469390" loc="60:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2b76ba465020" loc="77:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../tos/interfaces/Read.nc">
      <documentation loc="33:../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b76ba4944a0" loc="49:../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b76ba4944a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b76ba494d60" loc="55:../../tos/interfaces/Read.nc">
        <documentation loc="50:../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b76ba490ac0" loc="63:../../tos/interfaces/Read.nc">
        <documentation loc="57:../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b76ba4944a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b76ba490510" loc="63:../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b76ba490830" loc="63:../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b76ba4944a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b76ba49dc10" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b76ba02ad30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76ba49d990" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b76ba49c710" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b76ba02ad30"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76ba49c490" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2b76ba485c50" loc="48:../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b76ba38f020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b76ba38f780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b76ba481020" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b76ba481020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b76ba481260" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76ba481260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b76ba47de00" loc="109:../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76ba481260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b76ba480e40" loc="78:../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b76ba47d460" loc="103:../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76ba481260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76ba481260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b76ba47fe60" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76ba481260"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b76ba47d1d0" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76ba481260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b76ba47f640" loc="88:../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b76ba47c620" loc="116:../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76ba481260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b76ba481dc0" loc="66:../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76ba481260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b76ba481b40" loc="66:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76ba481260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b76ba480680" loc="73:../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b76ba4a5560" loc="50:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b76ba0389b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b76ba4a44f0" loc="60:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b76ba4a5d40" loc="55:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b76ba0385d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b76ba4a6cd0" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b76ba0385d0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76ba0389b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b76ba4a66f0" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b76ba0385d0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b76ba4a6a40" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76ba0389b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2b76ba498e40" loc="53:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b76ba02ad30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b76ba4a2e80" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b76ba02ad30"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b76ba4a2020" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b76ba4a2890" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b76ba4a2be0" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b76ba49f610" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b76ba02ad30"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b76ba4a0770" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b76ba49f020" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b76ba49f370" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b76ba4a9c30" loc="68:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b76ba4a9470" loc="61:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2b76ba4aace0" loc="54:../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2b76ba4aa420" loc="53:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b76ba59a4a0" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b76ba59a4a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b76ba59a6e0" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76ba59a6e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b76ba599030" loc="64:../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76ba59a6e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b76ba597190" loc="76:../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b76ba5998b0" loc="71:../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b76ba5978f0" loc="82:../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b76ba67cbb0" loc="54:../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b76ba67bd70" loc="66:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b76ba67b5c0" loc="61:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b76ba67b340" loc="61:../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b76ba67c350" loc="53:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b76ba698a60" loc="52:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b76ba695540" loc="72:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b76ba6982d0" loc="47:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2b76ba696cf0" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2b76ba696a70" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b76ba69cb00" loc="42:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b76ba6962b0" loc="59:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2b76ba7ceb20" loc="24:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2b76ba7cb390" loc="31:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2b76ba7cbbd0" loc="39:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2b76ba7e86b0" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76ba7e80d0" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b76ba7e8420" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b76ba7e39a0" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76ba7e3060" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b76ba7e33b0" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b76ba7e3700" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b76ba7e42b0" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b76ba02ad30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76ba7e5c10" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b76ba7e4020" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2b76ba7e92b0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b76ba02ad30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76ba7eabf0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b76ba7e9020" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b76ba7e7dd0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76ba7e7490" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b76ba7e77e0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b76ba7e7b30" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../../tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b76ba80d990" loc="70:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b76ba80d020" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b76ba80d3b0" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76ba80d6f0" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b76ba809020" loc="82:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b76ba80b1d0" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b76ba80b560" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76ba80b8a0" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b76ba80bc10" loc="83:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b76ba80f8a0" loc="45:../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b76ba80f620" loc="45:../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b76ba8d36f0" loc="53:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b76ba8d2070" loc="61:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b76ba8cb710" loc="39:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b76ba8be020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b76ba8be440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b76ba8d02a0" loc="62:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76ba8d0020" loc="62:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b76ba8cf680" loc="74:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76ba8cf400" loc="74:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b76ba8d0b10" loc="68:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b76ba8ce2a0" loc="81:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76ba8ce020" loc="81:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b76ba8c5ca0" loc="65:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b76ba8c5480" loc="59:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x2b76ba9042a0" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76ba904020" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b76ba906780" loc="49:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b76ba928af0" loc="213:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x2b76ba8eb790" loc="143:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x2b76ba8f8610" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b76ba893080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2b76ba8938c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b76ba8f8390" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b76ba893080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2b76ba8938c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x2b76ba8ee870" loc="123:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x2b76ba8f6a90" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b76ba88f080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2b76ba88f8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b76ba8f6810" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b76ba88f080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2b76ba88f8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b76ba92de70" loc="180:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x2b76ba929480" loc="197:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x2b76ba8f6070" loc="65:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b76ba891020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x2b76ba8917b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x2b76ba8f42b0" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b76ba88f080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x2b76ba88f8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x2b76ba8f0020" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x2b76ba8f2d30" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x2b76ba8f2610" loc="95:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2b76ba92d740" loc="179:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x2b76ba8f7840" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b76ba891020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2b76ba8917b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b76ba8f75c0" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b76ba891020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2b76ba8917b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x2b76ba8f3420" loc="85:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b76ba92c5d0" loc="181:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x2b76ba8f3e00" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x2b76ba8f3b80" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x2b76ba8ef910" loc="113:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x2b76ba8ee0e0" loc="118:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b76ba92e840" loc="177:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x2b76ba8e9790" loc="163:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x2b76ba8ed7e0" loc="133:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b76ba92d020" loc="178:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x2b76ba8ea020" loc="148:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2b76ba92ccf0" loc="182:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b76ba8f0800" loc="103:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x2b76ba89adc0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x2b76ba896680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x2b76ba92a4c0" loc="187:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x2b76ba928350" loc="207:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x2b76ba8f4c50" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x2b76ba8f49d0" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b76ba9274d0" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76ba927250" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x2b76ba8f8df0" loc="55:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b76ba893080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x2b76ba8938c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x2b76ba8ed020" loc="128:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b76ba8ea770" loc="153:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x2b76ba92e020" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b76ba8ace70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b76ba8ab2b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b76ba930cf0" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b76ba8ace70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b76ba8ab2b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x2b76ba9302a0" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b76ba8be020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b76ba8be440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b76ba930020" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b76ba8be020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b76ba8be440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b76ba927d90" loc="231:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x2b76ba92acb0" loc="192:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x2b76ba8ef070" loc="108:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x2b76ba929be0" loc="202:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x2b76ba8e9020" loc="158:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x2b76ba8eb020" loc="138:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b76ba99d600" loc="39:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x2b76ba9c0070" loc="80:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x2b76ba988b10" loc="31:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x2b76ba97dd50" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b76ba97dad0" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x2b76ba990270" loc="11:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x2b76ba9c4350" loc="71:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x2b76ba982cf0" loc="49:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x2b76ba989c50" loc="28:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x2b76ba9879c0" loc="34:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2b76ba98bc00" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x2b76ba98b980" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x2b76ba98c120" loc="21:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x2b76ba984790" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x2b76ba97bc80" loc="66:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x2b76ba9c18f0" loc="78:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x2b76ba97d390" loc="61:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x2b76ba9bcb60" loc="91:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x2b76ba9b7270" loc="100:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x2b76ba98f0e0" loc="14:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x2b76ba984020" loc="38:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x2b76ba983910" loc="45:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x2b76ba989500" loc="27:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x2b76ba991020" loc="7:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x2b76ba97eba0" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b76ba97e920" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x2b76ba9947d0" loc="6:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x2b76ba9c5b80" loc="69:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x2b76ba9c07d0" loc="81:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x2b76ba9ba350" loc="94:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x2b76ba9b9a90" loc="97:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x2b76ba9c3270" loc="74:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x2b76ba9bf020" loc="83:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x2b76ba97b520" loc="65:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x2b76ba9bdbb0" loc="87:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x2b76ba98f800" loc="15:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x2b76ba97f020" loc="53:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x2b76ba9bd020" loc="86:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x2b76ba9c1190" loc="77:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x2b76ba982520" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x2b76ba9822a0" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x2b76ba9baaf0" loc="95:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x2b76ba97e1f0" loc="57:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x2b76ba9c4ac0" loc="72:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x2b76ba991aa0" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b76ba8e0b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2b76ba8df020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b76ba991820" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b76ba8e0b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2b76ba8df020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x2b76ba986870" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x2b76ba98d980" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b76ba98d700" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x2b76ba983120" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76ba984e70" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x2b76ba9bc3b0" loc="90:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x2b76ba98b270" loc="24:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x2b76ba98d020" loc="18:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x2b76ba97f9e0" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x2b76ba97f760" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x2b76ba9909a0" loc="12:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x2b76ba9bf740" loc="84:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x2b76ba9c39e0" loc="75:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x2b76ba9c5420" loc="68:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x2b76ba980740" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x2b76ba9804c0" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x2b76ba986120" loc="35:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x2b76ba9883b0" loc="29:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x2b76ba9b92b0" loc="96:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x2b76ba98caa0" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b76ba98c820" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x2b76ba9bb350" loc="92:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x2b76ba987270" loc="32:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x2b76ba9bbb10" loc="93:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b76baa4e780" loc="90:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b76baa4d020" loc="98:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b76baa67900" loc="56:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b76baa66a20" loc="73:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b76baa67070" loc="46:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b76baa661f0" loc="65:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b76baa65390" loc="81:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b76baaa9b50" loc="79:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b76baa64b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b76baaa98d0" loc="79:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b76baa64b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b76baaadb80" loc="53:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b76baaaa6b0" loc="62:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b76baa64b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b76baaaa430" loc="62:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b76baa64b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b76baaa9020" loc="70:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b76baa64b30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b76bac915e0" loc="13:../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b76bac91360" loc="13:../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b76bac7eb00" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b76bac7e1c0" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b76bac7e530" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76bac7e860" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b76bac7c880" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b76bac7c2c0" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76bac7c5f0" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b76bacbb4d0" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b76bacbb4d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b76bacbb710" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76bacbb710"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b76bacba2a0" loc="66:../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76bacbb710"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b76bacba020" loc="66:../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76bacbb710"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2b76bad07580" loc="43:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b76bad329e0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2b76bad32020" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2b76bad32750" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2b76bad337f0" loc="55:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2b76bad33020" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b76bad37d30" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2b76bad483d0" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76bad48150" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b76bad493d0" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76bad49150" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b76bad45350" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76bad450d0" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b76bad46390" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76bad46110" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b76baeb1910" loc="53:../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b76baeb1910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b76baeae270" loc="61:../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b76baf0a020" loc="53:../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b76baf0a020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b76baf04c50" loc="136:../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b76baf075b0" loc="83:../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b76baf05360" loc="114:../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b76baf06d60" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b76baf050d0" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b76baf065b0" loc="98:../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b76baf02ca0" loc="151:../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b76baf02420" loc="144:../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b76baf07d90" loc="92:../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b76b99bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b76baf0ab90" loc="64:../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b76baf0a910" loc="64:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b76baf042f0" loc="129:../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b76baf05d00" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b76baf04060" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b76baf09680" loc="73:../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b76baf09400" loc="73:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b76b936c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b76baf09e80" loc="78:../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b76bb0275f0" loc="53:../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b76bb0275f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b76bb0242a0" loc="64:../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b76bb0275f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b76bb024020" loc="64:../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b76bb0275f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b76bb237670" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76bb237060" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b76bb2373e0" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b76bb239820" loc="15:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b76bb2386d0" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76bb2380d0" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76ba07e880"/>
                <typename><typedef-ref name="message_t" ref="0x2b76ba07b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b76bb238440" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b76bb28b900" loc="54:../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b76bb28b190" loc="49:../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b76bb294920" loc="56:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b76bb293d60" loc="72:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b76bb290ab0" loc="94:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76bb290830" loc="94:../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b76bb2926a0" loc="79:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b76bb2934d0" loc="65:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76bb293250" loc="65:../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b76bb28f350" loc="100:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b76bb290020" loc="85:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b76bb29c4a0" loc="71:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b76bb29cdd0" loc="81:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b76bb29db10" loc="62:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b76bb29d890" loc="62:../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b76bb29b9d0" loc="91:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b76bb29b750" loc="91:../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b76bb2985c0" loc="62:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b76bb2962a0" loc="69:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76bb296020" loc="69:../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b76bb296d70" loc="80:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b76bb296af0" loc="80:../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b76bb396c40" loc="48:../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b76bb396670" loc="48:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76bb3969b0" loc="48:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b76bb391a70" loc="79:../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b76bb3917f0" loc="79:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b76bb390890" loc="90:../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b76bb3902c0" loc="90:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76bb390600" loc="90:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b76bb393610" loc="65:../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b76bb38d2c0" loc="99:../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b76bb38e820" loc="99:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76bb38eb60" loc="99:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b76bb38d020" loc="99:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b76bb391020" loc="72:../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b76bb395610" loc="57:../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b76bb394bd0" loc="57:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76bb395020" loc="57:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b76b936c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b76bb395370" loc="57:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:../../tos/interfaces/UartByte.nc">
      <documentation loc="32:../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b76bb3e35b0" loc="46:../../tos/interfaces/UartByte.nc">
        <documentation loc="39:../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b76bb3e3330" loc="46:../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b76bb3e2430" loc="56:../../tos/interfaces/UartByte.nc">
        <documentation loc="48:../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b76bb3e3e20" loc="56:../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b76bb3e21a0" loc="56:../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b76b936c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b76bb3dca00" loc="39:../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b76ba8ace70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b76ba8ab2b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b76bb43a390" loc="95:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b76bb43abe0" loc="105:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b76b99cc980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b76bb5562b0" loc="62:../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
